; ModuleID = 'z36.opt'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.FILE_POS = type { i8, i8, i16, i32 }
%struct.trie_rec = type { i32, i32, [256 x i8], i16*, i32, i32, i8*, i32, i32 }
%union.rec = type { %struct.head_type }
%struct.head_type = type { [2 x %struct.LIST], %union.FIRST_UNION, %union.SECOND_UNION, %union.THIRD_UNION, %union.FOURTH_UNION, %union.rec*, %union.anon.13, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, i32 }
%struct.LIST = type { %union.rec*, %union.rec* }
%union.FIRST_UNION = type { %struct.FILE_POS }
%union.SECOND_UNION = type { %struct.anon.1 }
%struct.anon.1 = type { i32 }
%union.THIRD_UNION = type { %struct._IO_FILE*, [8 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%union.FOURTH_UNION = type { %struct.STYLE }
%struct.STYLE = type { %union.anon, %union.anon.10, i16, i16, i32 }
%union.anon = type { %struct.GAP }
%struct.GAP = type { i16, i16 }
%union.anon.10 = type { %struct.GAP }
%union.anon.13 = type { %union.rec* }
%struct.font_rec = type { %struct.metrics*, i8*, i16*, %struct.composite_rec*, i32, %union.rec*, %union.rec*, i16, i16, i16*, i8*, i8*, i16* }
%struct.metrics = type { i16, i16, i16, i16, i16 }
%struct.composite_rec = type { i8, i16, i16 }
%struct.word_type = type { [2 x %struct.LIST], %union.FIRST_UNION, %union.SECOND_UNION, %union.THIRD_UNION, [4 x i8] }
%struct.anon = type { i8, i8, i32 }
%struct.gapobj_type = type { [2 x %struct.LIST], %union.FIRST_UNION, %union.SECOND_UNION, %struct.GAP, i32, i16, i16, %union.rec*, %union.rec* }
%struct.anon.0 = type { i8, i8, i8 }

@.str = private unnamed_addr constant [20 x i8] c"assert failed in %s\00", align 1
@no_fpos = external global %struct.FILE_POS*, align 8
@.str.1 = private unnamed_addr constant [26 x i8] c"ReadHyphTable: lnum <= 0!\00", align 1
@HyphTables = internal global [64 x %struct.trie_rec*] zeroinitializer, align 16
@TriedFile = internal global [64 x i32] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [15 x i8] c"ReadHyphTable!\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"Hyphenate: type(x) != ACAT!\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"no current language for word %s\00", align 1
@zz_lengths = external global [0 x i8], align 1
@zz_size = external global i32, align 4
@.str.5 = private unnamed_addr constant [17 x i8] c"word is too long\00", align 1
@zz_free = external global [0 x %union.rec*], align 8
@zz_hold = external global %union.rec*, align 8
@xx_link = external global %union.rec*, align 8
@zz_res = external global %union.rec*, align 8
@zz_tmp = external global %union.rec*, align 8
@.str.6 = private unnamed_addr constant [4 x i8] c"0ch\00", align 1
@finfo = external global %struct.font_rec*, align 8
@.str.7 = private unnamed_addr constant [17 x i8] c"TrieRead: fname!\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c".lp\00", align 1
@InitializeAll = external global i32, align 4
@.str.9 = private unnamed_addr constant [4 x i8] c".lh\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"cannot open hyphenation file %s\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Lout hyphenation information\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"Lout hyphenation placeholder\0A\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"header line of hyphenation file %s missing\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"%s%n\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"Classes:\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"Classes heading of hyphenation file %s missing\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Exceptions:\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"Patterns:\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"LengthLimit:\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"hyphenation file %s%s is too large (at line %d)\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"bad LengthLimit in hyphenation file %s%s (line %d)\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"TrieRead: state\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"format error in hyphenation file %s\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.26 = private unnamed_addr constant [36 x i8] c"cannot write to hyphenation file %s\00", align 1
@.str.27 = private unnamed_addr constant [50 x i8] c"run out of memory while reading hyphenation table\00", align 1
@.str.28 = private unnamed_addr constant [46 x i8] c"error on read from packed hyphenation file %s\00", align 1
@.str.29 = private unnamed_addr constant [40 x i8] c"bad magic number in hyphenation file %s\00", align 1
@.str.30 = private unnamed_addr constant [55 x i8] c"run out of memory while constructing hyphenation table\00", align 1
@tex_codes = internal global [138 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.167, i32 0, i32 0)], align 16
@.str.31 = private unnamed_addr constant [58 x i8] c"in hyphenation file %s, unknown escape sequence (line %d)\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"Agrave\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"`A\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"\C0\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"Aacute\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"'A\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"\C1\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"Acircumflex\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"^A\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"\C2\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"Atilde\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"~A\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"\C3\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"Adieresis\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c"\22A\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"\C4\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"agrave\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"`a\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c"\E0\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"aacute\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"'a\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"\E1\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"acircumflex\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"^a\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"\E2\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"atilde\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"~a\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c"\E3\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"adieresis\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"\22a\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"\E4\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"ccedilla\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"cc\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"\E7\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"Egrave\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"`E\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"\C8\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"Eacute\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"'E\00", align 1
@.str.70 = private unnamed_addr constant [2 x i8] c"\C9\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"Ecircumflex\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"^E\00", align 1
@.str.73 = private unnamed_addr constant [2 x i8] c"\CA\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"Edieresis\00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c"\22E\00", align 1
@.str.76 = private unnamed_addr constant [2 x i8] c"\CB\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"egrave\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"`e\00", align 1
@.str.79 = private unnamed_addr constant [2 x i8] c"\E8\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"eacute\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c"'e\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"\E9\00", align 1
@.str.83 = private unnamed_addr constant [12 x i8] c"ecircumflex\00", align 1
@.str.84 = private unnamed_addr constant [3 x i8] c"^e\00", align 1
@.str.85 = private unnamed_addr constant [2 x i8] c"\EA\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c"edieresis\00", align 1
@.str.87 = private unnamed_addr constant [3 x i8] c"\22e\00", align 1
@.str.88 = private unnamed_addr constant [2 x i8] c"\EB\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"Igrave\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"`I\00", align 1
@.str.91 = private unnamed_addr constant [2 x i8] c"\CC\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"Iacute\00", align 1
@.str.93 = private unnamed_addr constant [3 x i8] c"'I\00", align 1
@.str.94 = private unnamed_addr constant [2 x i8] c"\CD\00", align 1
@.str.95 = private unnamed_addr constant [12 x i8] c"Icircumflex\00", align 1
@.str.96 = private unnamed_addr constant [3 x i8] c"^I\00", align 1
@.str.97 = private unnamed_addr constant [2 x i8] c"\CE\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"Idieresis\00", align 1
@.str.99 = private unnamed_addr constant [3 x i8] c"\22I\00", align 1
@.str.100 = private unnamed_addr constant [2 x i8] c"\CF\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"igrave\00", align 1
@.str.102 = private unnamed_addr constant [4 x i8] c"`\5Ci\00", align 1
@.str.103 = private unnamed_addr constant [2 x i8] c"\EC\00", align 1
@.str.104 = private unnamed_addr constant [7 x i8] c"iacute\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"'\5Ci\00", align 1
@.str.106 = private unnamed_addr constant [2 x i8] c"\ED\00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"icircumflex\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"^\5Ci\00", align 1
@.str.109 = private unnamed_addr constant [2 x i8] c"\EE\00", align 1
@.str.110 = private unnamed_addr constant [10 x i8] c"idieresis\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"\22\5Ci\00", align 1
@.str.112 = private unnamed_addr constant [2 x i8] c"\EF\00", align 1
@.str.113 = private unnamed_addr constant [7 x i8] c"Ograve\00", align 1
@.str.114 = private unnamed_addr constant [3 x i8] c"`O\00", align 1
@.str.115 = private unnamed_addr constant [2 x i8] c"\D2\00", align 1
@.str.116 = private unnamed_addr constant [7 x i8] c"Oacute\00", align 1
@.str.117 = private unnamed_addr constant [3 x i8] c"'O\00", align 1
@.str.118 = private unnamed_addr constant [2 x i8] c"\D3\00", align 1
@.str.119 = private unnamed_addr constant [12 x i8] c"Ocircumflex\00", align 1
@.str.120 = private unnamed_addr constant [3 x i8] c"^O\00", align 1
@.str.121 = private unnamed_addr constant [2 x i8] c"\D4\00", align 1
@.str.122 = private unnamed_addr constant [7 x i8] c"Otilde\00", align 1
@.str.123 = private unnamed_addr constant [3 x i8] c"~O\00", align 1
@.str.124 = private unnamed_addr constant [2 x i8] c"\D5\00", align 1
@.str.125 = private unnamed_addr constant [10 x i8] c"Odieresis\00", align 1
@.str.126 = private unnamed_addr constant [3 x i8] c"\22O\00", align 1
@.str.127 = private unnamed_addr constant [2 x i8] c"\D6\00", align 1
@.str.128 = private unnamed_addr constant [7 x i8] c"ograve\00", align 1
@.str.129 = private unnamed_addr constant [3 x i8] c"`o\00", align 1
@.str.130 = private unnamed_addr constant [2 x i8] c"\F2\00", align 1
@.str.131 = private unnamed_addr constant [7 x i8] c"oacute\00", align 1
@.str.132 = private unnamed_addr constant [3 x i8] c"'o\00", align 1
@.str.133 = private unnamed_addr constant [2 x i8] c"\F3\00", align 1
@.str.134 = private unnamed_addr constant [12 x i8] c"ocircumflex\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"^o\00", align 1
@.str.136 = private unnamed_addr constant [2 x i8] c"\F4\00", align 1
@.str.137 = private unnamed_addr constant [7 x i8] c"otilde\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"~o\00", align 1
@.str.139 = private unnamed_addr constant [2 x i8] c"\F5\00", align 1
@.str.140 = private unnamed_addr constant [10 x i8] c"odieresis\00", align 1
@.str.141 = private unnamed_addr constant [3 x i8] c"\22o\00", align 1
@.str.142 = private unnamed_addr constant [2 x i8] c"\F6\00", align 1
@.str.143 = private unnamed_addr constant [7 x i8] c"Ugrave\00", align 1
@.str.144 = private unnamed_addr constant [3 x i8] c"`U\00", align 1
@.str.145 = private unnamed_addr constant [2 x i8] c"\D9\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"Uacute\00", align 1
@.str.147 = private unnamed_addr constant [3 x i8] c"'U\00", align 1
@.str.148 = private unnamed_addr constant [2 x i8] c"\DA\00", align 1
@.str.149 = private unnamed_addr constant [12 x i8] c"Ucircumflex\00", align 1
@.str.150 = private unnamed_addr constant [3 x i8] c"^U\00", align 1
@.str.151 = private unnamed_addr constant [2 x i8] c"\DB\00", align 1
@.str.152 = private unnamed_addr constant [10 x i8] c"Udieresis\00", align 1
@.str.153 = private unnamed_addr constant [3 x i8] c"\22U\00", align 1
@.str.154 = private unnamed_addr constant [2 x i8] c"\DC\00", align 1
@.str.155 = private unnamed_addr constant [7 x i8] c"ugrave\00", align 1
@.str.156 = private unnamed_addr constant [3 x i8] c"`u\00", align 1
@.str.157 = private unnamed_addr constant [2 x i8] c"\F9\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"uacute\00", align 1
@.str.159 = private unnamed_addr constant [3 x i8] c"'u\00", align 1
@.str.160 = private unnamed_addr constant [2 x i8] c"\FA\00", align 1
@.str.161 = private unnamed_addr constant [12 x i8] c"ucircumflex\00", align 1
@.str.162 = private unnamed_addr constant [3 x i8] c"^u\00", align 1
@.str.163 = private unnamed_addr constant [2 x i8] c"\FB\00", align 1
@.str.164 = private unnamed_addr constant [10 x i8] c"udieresis\00", align 1
@.str.165 = private unnamed_addr constant [3 x i8] c"\22u\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"\FC\00", align 1
@.str.167 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.168 = private unnamed_addr constant [32 x i8] c"AddClassToTrie: after insertion\00", align 1
@.str.169 = private unnamed_addr constant [43 x i8] c"hyphenation class of %c may not be changed\00", align 1
@.str.170 = private unnamed_addr constant [74 x i8] c"in hyphenation file %s, line %d: character (octal %o) is not in any class\00", align 1
@.str.171 = private unnamed_addr constant [39 x i8] c"hyphenation string %s already inserted\00", align 1
@.str.172 = private unnamed_addr constant [37 x i8] c"hyphenation trie node limit exceeded\00", align 1

; Function Attrs: nounwind uwtable
define i32 @ReadHyphTable(i32 %lnum) #0 {
  %1 = alloca i32, align 4
  %res = alloca i32, align 4
  store i32 %lnum, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = icmp ugt i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %6 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 0, %struct.FILE_POS* %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0))
  br label %7

; <label>:7                                       ; preds = %4, %0
  %8 = load i32, i32* %1, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [64 x %struct.trie_rec*], [64 x %struct.trie_rec*]* @HyphTables, i32 0, i64 %9
  %11 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %12 = icmp eq %struct.trie_rec* %11, null
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %7
  %14 = load i32, i32* %1, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [64 x i32], [64 x i32]* @TriedFile, i32 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %13, %7
  %20 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %21 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 0, %struct.FILE_POS* %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0))
  br label %22

; <label>:22                                      ; preds = %19, %13
  %23 = load i32, i32* %1, align 4
  %24 = call %struct.trie_rec* @TrieRead(i32 %23, i32* %res)
  %25 = load i32, i32* %1, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [64 x %struct.trie_rec*], [64 x %struct.trie_rec*]* @HyphTables, i32 0, i64 %26
  store %struct.trie_rec* %24, %struct.trie_rec** %27, align 8
  %28 = load i32, i32* %1, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [64 x i32], [64 x i32]* @TriedFile, i32 0, i64 %29
  store i32 1, i32* %30, align 4
  %31 = load i32, i32* %res, align 4
  ret i32 %31
}

declare i8* @Error(i32, i32, i8*, i32, %struct.FILE_POS*, ...) #1

; Function Attrs: nounwind uwtable
define internal %struct.trie_rec* @TrieRead(i32 %lnum, i32* %success) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.trie_rec*, align 8
  %p.i.3 = alloca i8*, align 8
  %q.i.4 = alloca i8*, align 8
  %len.i = alloca i32, align 4
  %i.i.5 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct.trie_rec*, align 8
  %i.i.2 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %p.i = alloca i8*, align 8
  %q.i = alloca i8*, align 8
  %i.i.1 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %T.i = alloca %struct.trie_rec*, align 8
  %i.i = alloca i32, align 4
  %21 = alloca %struct.trie_rec*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32*, align 8
  %T = alloca %struct.trie_rec*, align 8
  %unpacked_fnum = alloca i16, align 2
  %packed_fnum = alloca i16, align 2
  %fname = alloca %union.rec*, align 8
  %unpacked_fp = alloca %struct._IO_FILE*, align 8
  %packed_fp = alloca %struct._IO_FILE*, align 8
  %len = alloca i32, align 4
  %prev = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %c = alloca i32, align 4
  %state = alloca i32, align 4
  %hline_num = alloca i32, align 4
  %length_limit = alloca i32, align 4
  %str = alloca [512 x i8], align 16
  %key = alloca [512 x i8], align 16
  %value = alloca [512 x i8], align 16
  %buff = alloca [522 x i8], align 16
  %bpos = alloca i32, align 4
  %bcount = alloca i32, align 4
  store i32 %lnum, i32* %22, align 4
  store i32* %success, i32** %23, align 8
  %24 = load i32, i32* %22, align 4
  %25 = call %union.rec* @LanguageHyph(i32 %24)
  store %union.rec* %25, %union.rec** %fname, align 8
  %26 = load %union.rec*, %union.rec** %fname, align 8
  %27 = icmp eq %union.rec* %26, null
  br i1 %27, label %49, label %28

; <label>:28                                      ; preds = %0
  %29 = load %union.rec*, %union.rec** %fname, align 8
  %30 = bitcast %union.rec* %29 to %struct.word_type*
  %31 = getelementptr inbounds %struct.word_type, %struct.word_type* %30, i32 0, i32 1
  %32 = bitcast %union.FIRST_UNION* %31 to %struct.anon*
  %33 = getelementptr inbounds %struct.anon, %struct.anon* %32, i32 0, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 11
  br i1 %36, label %49, label %37

; <label>:37                                      ; preds = %28
  %38 = load %union.rec*, %union.rec** %fname, align 8
  %39 = bitcast %union.rec* %38 to %struct.word_type*
  %40 = getelementptr inbounds %struct.word_type, %struct.word_type* %39, i32 0, i32 1
  %41 = bitcast %union.FIRST_UNION* %40 to %struct.anon*
  %42 = getelementptr inbounds %struct.anon, %struct.anon* %41, i32 0, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = icmp eq i32 %44, 12
  br i1 %45, label %49, label %46

; <label>:46                                      ; preds = %37
  %47 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %48 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 0, %struct.FILE_POS* %47, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i32 0, i32 0))
  br label %49

; <label>:49                                      ; preds = %46, %37, %28, %0
  %50 = load %union.rec*, %union.rec** %fname, align 8
  %51 = icmp eq %union.rec* %50, null
  br i1 %51, label %52, label %54

; <label>:52                                      ; preds = %49
  %53 = load i32*, i32** %23, align 8
  store i32 0, i32* %53, align 4
  store %struct.trie_rec* null, %struct.trie_rec** %21
  br label %1205

; <label>:54                                      ; preds = %49
  %55 = load %union.rec*, %union.rec** %fname, align 8
  %56 = bitcast %union.rec* %55 to %struct.word_type*
  %57 = getelementptr inbounds %struct.word_type, %struct.word_type* %56, i32 0, i32 4
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %57, i32 0, i32 0
  %59 = load %union.rec*, %union.rec** %fname, align 8
  %60 = bitcast %union.rec* %59 to %struct.word_type*
  %61 = getelementptr inbounds %struct.word_type, %struct.word_type* %60, i32 0, i32 1
  %62 = bitcast %union.FIRST_UNION* %61 to %struct.FILE_POS*
  %63 = call zeroext i16 @DefineFile(i8* %58, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), %struct.FILE_POS* %62, i32 8, i32 6)
  store i16 %63, i16* %packed_fnum, align 2
  %64 = load i32, i32* @InitializeAll, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %67

; <label>:66                                      ; preds = %54
  store %struct._IO_FILE* null, %struct._IO_FILE** %packed_fp, align 8
  br label %70

; <label>:67                                      ; preds = %54
  %68 = load i16, i16* %packed_fnum, align 2
  %69 = call %struct._IO_FILE* @OpenFile(i16 zeroext %68, i32 0, i32 0)
  store %struct._IO_FILE* %69, %struct._IO_FILE** %packed_fp, align 8
  br label %70

; <label>:70                                      ; preds = %67, %66
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %72 = icmp eq %struct._IO_FILE* %71, null
  br i1 %72, label %73, label %1031

; <label>:73                                      ; preds = %70
  %74 = load %union.rec*, %union.rec** %fname, align 8
  %75 = bitcast %union.rec* %74 to %struct.word_type*
  %76 = getelementptr inbounds %struct.word_type, %struct.word_type* %75, i32 0, i32 4
  %77 = getelementptr inbounds [4 x i8], [4 x i8]* %76, i32 0, i32 0
  %78 = load %union.rec*, %union.rec** %fname, align 8
  %79 = bitcast %union.rec* %78 to %struct.word_type*
  %80 = getelementptr inbounds %struct.word_type, %struct.word_type* %79, i32 0, i32 1
  %81 = bitcast %union.FIRST_UNION* %80 to %struct.FILE_POS*
  %82 = call zeroext i16 @DefineFile(i8* %77, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), %struct.FILE_POS* %81, i32 7, i32 6)
  store i16 %82, i16* %unpacked_fnum, align 2
  %83 = load i16, i16* %unpacked_fnum, align 2
  %84 = call %struct._IO_FILE* @OpenFile(i16 zeroext %83, i32 0, i32 0)
  store %struct._IO_FILE* %84, %struct._IO_FILE** %unpacked_fp, align 8
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %unpacked_fp, align 8
  %86 = icmp eq %struct._IO_FILE* %85, null
  br i1 %86, label %87, label %93

; <label>:87                                      ; preds = %73
  %88 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %89 = load i16, i16* %unpacked_fnum, align 2
  %90 = call i8* @FileName(i16 zeroext %89)
  %91 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0), i32 2, %struct.FILE_POS* %88, i8* %90)
  %92 = load i32*, i32** %23, align 8
  store i32 0, i32* %92, align 4
  store %struct.trie_rec* null, %struct.trie_rec** %21
  br label %1205

; <label>:93                                      ; preds = %73
  %94 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %unpacked_fp, align 8
  %96 = call i8* @fgets(i8* %94, i32 512, %struct._IO_FILE* %95)
  %97 = icmp eq i8* %96, null
  br i1 %97, label %106, label %98

; <label>:98                                      ; preds = %93
  %99 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %100 = call i32 @strcmp(i8* %99, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0)) #5
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %111, label %102

; <label>:102                                     ; preds = %98
  %103 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %104 = call i32 @strcmp(i8* %103, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0)) #5
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %111, label %106

; <label>:106                                     ; preds = %102, %93
  %107 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %108 = load i16, i16* %unpacked_fnum, align 2
  %109 = call i8* @FileName(i16 zeroext %108)
  %110 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i32 1, %struct.FILE_POS* %107, i8* %109)
  br label %111

; <label>:111                                     ; preds = %106, %102, %98
  %112 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %113 = call i32 @strcmp(i8* %112, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0)) #5
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %117, label %115

; <label>:115                                     ; preds = %111
  %116 = load i32*, i32** %23, align 8
  store i32 1, i32* %116, align 4
  store %struct.trie_rec* null, %struct.trie_rec** %21
  br label %1205

; <label>:117                                     ; preds = %111
  %118 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %118)
  %119 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119)
  %120 = bitcast %struct.trie_rec** %T.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %120)
  %121 = bitcast i32* %i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %121)
  store i32 120000, i32* %19, align 4
  store i32 32767, i32* %20, align 4
  %122 = load i32, i32* %19, align 4
  %123 = zext i32 %122 to i64
  %124 = mul i64 %123, 2
  %125 = add i64 296, %124
  %126 = load i32, i32* %20, align 4
  %127 = zext i32 %126 to i64
  %128 = add i64 %125, %127
  %129 = call noalias i8* @malloc(i64 %128) #4
  %130 = bitcast i8* %129 to %struct.trie_rec*
  store %struct.trie_rec* %130, %struct.trie_rec** %T.i, align 8
  %131 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %132 = icmp eq %struct.trie_rec* %131, null
  br i1 %132, label %133, label %136

; <label>:133                                     ; preds = %117
  %134 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %135 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.30, i32 0, i32 0), i32 1, %struct.FILE_POS* %134) #4
  br label %136

; <label>:136                                     ; preds = %133, %117
  %137 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %138 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %137, i32 0, i32 0
  store i32 5361534, i32* %138, align 4
  %139 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %140 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %139, i32 0, i32 1
  store i32 1, i32* %140, align 4
  store i32 0, i32* %i.i, align 4
  br label %141

; <label>:141                                     ; preds = %144, %136
  %142 = load i32, i32* %i.i, align 4
  %143 = icmp slt i32 %142, 256
  br i1 %143, label %144, label %NewTrie.exit

; <label>:144                                     ; preds = %141
  %145 = load i32, i32* %i.i, align 4
  %146 = sext i32 %145 to i64
  %147 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %148 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %147, i32 0, i32 2
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* %148, i32 0, i64 %146
  store i8 0, i8* %149, align 1
  %150 = load i32, i32* %i.i, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %i.i, align 4
  br label %141

NewTrie.exit:                                     ; preds = %141
  %152 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %153 = bitcast %struct.trie_rec* %152 to i8*
  %154 = getelementptr inbounds i8, i8* %153, i64 296
  %155 = bitcast i8* %154 to i16*
  %156 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %157 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %156, i32 0, i32 3
  store i16* %155, i16** %157, align 8
  %158 = load i32, i32* %19, align 4
  %159 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %160 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %159, i32 0, i32 4
  store i32 %158, i32* %160, align 4
  %161 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %162 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %161, i32 0, i32 5
  store i32 0, i32* %162, align 4
  %163 = load i32, i32* %19, align 4
  %164 = zext i32 %163 to i64
  %165 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %166 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %165, i32 0, i32 3
  %167 = load i16*, i16** %166, align 8
  %168 = getelementptr inbounds i16, i16* %167, i64 %164
  %169 = bitcast i16* %168 to i8*
  %170 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %171 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %170, i32 0, i32 6
  store i8* %169, i8** %171, align 8
  %172 = load i32, i32* %20, align 4
  %173 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %174 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %173, i32 0, i32 8
  store i32 %172, i32* %174, align 4
  %175 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %176 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %175, i32 0, i32 7
  store i32 %172, i32* %176, align 4
  %177 = load %struct.trie_rec*, %struct.trie_rec** %T.i, align 8
  %178 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %178)
  %179 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %179)
  %180 = bitcast %struct.trie_rec** %T.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %180)
  %181 = bitcast i32* %i.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %181)
  store %struct.trie_rec* %177, %struct.trie_rec** %T, align 8
  store i32 0, i32* %state, align 4
  store i32 1, i32* %hline_num, align 4
  store i32 0, i32* %length_limit, align 4
  br label %182

; <label>:182                                     ; preds = %625, %NewTrie.exit
  %183 = getelementptr inbounds [522 x i8], [522 x i8]* %buff, i32 0, i32 0
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %unpacked_fp, align 8
  %185 = call i8* @fgets(i8* %183, i32 512, %struct._IO_FILE* %184)
  %186 = icmp ne i8* %185, null
  br i1 %186, label %187, label %626

; <label>:187                                     ; preds = %182
  %188 = load i32, i32* %hline_num, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %hline_num, align 4
  store i32 0, i32* %bpos, align 4
  br label %190

; <label>:190                                     ; preds = %624, %187
  %191 = load i32, i32* %bpos, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [522 x i8], [522 x i8]* %buff, i32 0, i64 %192
  %194 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %195 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %193, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* %194, i32* %bcount) #4
  %196 = icmp eq i32 %195, 1
  br i1 %196, label %197, label %202

; <label>:197                                     ; preds = %190
  %198 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 0
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = icmp ne i32 %200, 37
  br label %202

; <label>:202                                     ; preds = %197, %190
  %203 = phi i1 [ false, %190 ], [ %201, %197 ]
  br i1 %203, label %204, label %625

; <label>:204                                     ; preds = %202
  %205 = load i32, i32* %bcount, align 4
  %206 = load i32, i32* %bpos, align 4
  %207 = add nsw i32 %206, %205
  store i32 %207, i32* %bpos, align 4
  %208 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %209 = load %union.rec*, %union.rec** %fname, align 8
  %210 = bitcast %union.rec* %209 to %struct.word_type*
  %211 = getelementptr inbounds %struct.word_type, %struct.word_type* %210, i32 0, i32 4
  %212 = getelementptr inbounds [4 x i8], [4 x i8]* %211, i32 0, i32 0
  %213 = load i32, i32* %hline_num, align 4
  %214 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %214)
  %215 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %215)
  %216 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %216)
  %217 = bitcast i8** %p.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %217)
  %218 = bitcast i8** %q.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %218)
  %219 = bitcast i32* %i.i.1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %219)
  store i8* %208, i8** %16, align 8
  store i8* %212, i8** %17, align 8
  store i32 %213, i32* %18, align 4
  %220 = load i8*, i8** %16, align 8
  store i8* %220, i8** %q.i, align 8
  store i8* %220, i8** %p.i, align 8
  br label %221

; <label>:221                                     ; preds = %299, %204
  %222 = load i8*, i8** %q.i, align 8
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %226, label %DecodeEscapes.exit

; <label>:226                                     ; preds = %221
  %227 = load i8*, i8** %q.i, align 8
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = icmp eq i32 %229, 92
  br i1 %230, label %231, label %293

; <label>:231                                     ; preds = %226
  store i32 0, i32* %i.i.1, align 4
  br label %232

; <label>:232                                     ; preds = %251, %231
  %233 = load i32, i32* %i.i.1, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [138 x i8*], [138 x i8*]* @tex_codes, i32 0, i64 %234
  %236 = load i8*, i8** %235, align 8
  %237 = load i8, i8* %236, align 1
  %238 = sext i8 %237 to i32
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %240, label %254

; <label>:240                                     ; preds = %232
  %241 = load i8*, i8** %q.i, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 1
  %243 = load i32, i32* %i.i.1, align 4
  %244 = add nsw i32 %243, 1
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [138 x i8*], [138 x i8*]* @tex_codes, i32 0, i64 %245
  %247 = load i8*, i8** %246, align 8
  %248 = call i32 @StringBeginsWith(i8* %242, i8* %247) #4
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %250, label %251

; <label>:250                                     ; preds = %240
  br label %254

; <label>:251                                     ; preds = %240
  %252 = load i32, i32* %i.i.1, align 4
  %253 = add nsw i32 %252, 3
  store i32 %253, i32* %i.i.1, align 4
  br label %232

; <label>:254                                     ; preds = %250, %232
  %255 = load i32, i32* %i.i.1, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [138 x i8*], [138 x i8*]* @tex_codes, i32 0, i64 %256
  %258 = load i8*, i8** %257, align 8
  %259 = load i8, i8* %258, align 1
  %260 = sext i8 %259 to i32
  %261 = icmp ne i32 %260, 0
  br i1 %261, label %262, label %287

; <label>:262                                     ; preds = %254
  %263 = load i8*, i8** %p.i, align 8
  %264 = load i32, i32* %i.i.1, align 4
  %265 = add nsw i32 %264, 2
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [138 x i8*], [138 x i8*]* @tex_codes, i32 0, i64 %266
  %268 = load i8*, i8** %267, align 8
  %269 = call i8* @strcpy(i8* %263, i8* %268) #4
  %270 = load i32, i32* %i.i.1, align 4
  %271 = add nsw i32 %270, 2
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [138 x i8*], [138 x i8*]* @tex_codes, i32 0, i64 %272
  %274 = load i8*, i8** %273, align 8
  %275 = call i64 @strlen(i8* %274) #5
  %276 = load i8*, i8** %p.i, align 8
  %277 = getelementptr inbounds i8, i8* %276, i64 %275
  store i8* %277, i8** %p.i, align 8
  %278 = load i32, i32* %i.i.1, align 4
  %279 = add nsw i32 %278, 1
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [138 x i8*], [138 x i8*]* @tex_codes, i32 0, i64 %280
  %282 = load i8*, i8** %281, align 8
  %283 = call i64 @strlen(i8* %282) #5
  %284 = add i64 %283, 1
  %285 = load i8*, i8** %q.i, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 %284
  store i8* %286, i8** %q.i, align 8
  br label %292

; <label>:287                                     ; preds = %254
  %288 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %289 = load i8*, i8** %17, align 8
  %290 = load i32, i32* %18, align 4
  %291 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.31, i32 0, i32 0), i32 1, %struct.FILE_POS* %288, i8* %289, i32 %290) #4
  br label %292

; <label>:292                                     ; preds = %287, %262
  br label %299

; <label>:293                                     ; preds = %226
  %294 = load i8*, i8** %q.i, align 8
  %295 = getelementptr inbounds i8, i8* %294, i32 1
  store i8* %295, i8** %q.i, align 8
  %296 = load i8, i8* %294, align 1
  %297 = load i8*, i8** %p.i, align 8
  %298 = getelementptr inbounds i8, i8* %297, i32 1
  store i8* %298, i8** %p.i, align 8
  store i8 %296, i8* %297, align 1
  br label %299

; <label>:299                                     ; preds = %293, %292
  br label %221

DecodeEscapes.exit:                               ; preds = %221
  %300 = load i8*, i8** %p.i, align 8
  %301 = getelementptr inbounds i8, i8* %300, i32 1
  store i8* %301, i8** %p.i, align 8
  store i8 0, i8* %300, align 1
  %302 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %302)
  %303 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %303)
  %304 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %304)
  %305 = bitcast i8** %p.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %305)
  %306 = bitcast i8** %q.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %306)
  %307 = bitcast i32* %i.i.1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %307)
  %308 = load i32, i32* %state, align 4
  switch i32 %308, label %621 [
    i32 0, label %309
    i32 1, label %319
    i32 2, label %408
    i32 3, label %508
    i32 4, label %531
  ]

; <label>:309                                     ; preds = %DecodeEscapes.exit
  %310 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %311 = call i32 @strcmp(i8* %310, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0)) #5
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %318, label %313

; <label>:313                                     ; preds = %309
  %314 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %315 = load i16, i16* %unpacked_fnum, align 2
  %316 = call i8* @FileName(i16 zeroext %315)
  %317 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 10, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i32 0, i32 0), i32 1, %struct.FILE_POS* %314, i8* %316)
  br label %318

; <label>:318                                     ; preds = %313, %309
  store i32 1, i32* %state, align 4
  br label %624

; <label>:319                                     ; preds = %DecodeEscapes.exit
  %320 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %321 = call i32 @strcmp(i8* %320, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0)) #5
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

; <label>:323                                     ; preds = %319
  store i32 2, i32* %state, align 4
  br label %407

; <label>:324                                     ; preds = %319
  %325 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %326 = call i32 @strcmp(i8* %325, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0)) #5
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

; <label>:328                                     ; preds = %324
  store i32 4, i32* %state, align 4
  br label %406

; <label>:329                                     ; preds = %324
  %330 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %331 = call i32 @strcmp(i8* %330, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0)) #5
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

; <label>:333                                     ; preds = %329
  store i32 3, i32* %state, align 4
  br label %405

; <label>:334                                     ; preds = %329
  %335 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %336 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %337 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %337)
  %338 = bitcast %struct.trie_rec** %15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %338)
  %339 = bitcast i32* %i.i.2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %339)
  store i8* %335, i8** %14, align 8
  store %struct.trie_rec* %336, %struct.trie_rec** %15, align 8
  %340 = load %struct.trie_rec*, %struct.trie_rec** %15, align 8
  %341 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %340, i32 0, i32 8
  %342 = load i32, i32* %341, align 4
  %343 = load %struct.trie_rec*, %struct.trie_rec** %15, align 8
  %344 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %343, i32 0, i32 7
  %345 = load i32, i32* %344, align 4
  %346 = icmp eq i32 %342, %345
  br i1 %346, label %350, label %347

; <label>:347                                     ; preds = %334
  %348 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %349 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 0, %struct.FILE_POS* %348, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.168, i32 0, i32 0)) #4
  br label %350

; <label>:350                                     ; preds = %347, %334
  store i32 0, i32* %i.i.2, align 4
  br label %351

; <label>:351                                     ; preds = %395, %350
  %352 = load i32, i32* %i.i.2, align 4
  %353 = sext i32 %352 to i64
  %354 = load i8*, i8** %14, align 8
  %355 = getelementptr inbounds i8, i8* %354, i64 %353
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %359, label %AddClassToTrie.exit

; <label>:359                                     ; preds = %351
  %360 = load i32, i32* %i.i.2, align 4
  %361 = sext i32 %360 to i64
  %362 = load i8*, i8** %14, align 8
  %363 = getelementptr inbounds i8, i8* %362, i64 %361
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i64
  %366 = load %struct.trie_rec*, %struct.trie_rec** %15, align 8
  %367 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %366, i32 0, i32 2
  %368 = getelementptr inbounds [256 x i8], [256 x i8]* %367, i32 0, i64 %365
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %386

; <label>:372                                     ; preds = %359
  %373 = load %struct.trie_rec*, %struct.trie_rec** %15, align 8
  %374 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %373, i32 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = trunc i32 %375 to i8
  %377 = load i32, i32* %i.i.2, align 4
  %378 = sext i32 %377 to i64
  %379 = load i8*, i8** %14, align 8
  %380 = getelementptr inbounds i8, i8* %379, i64 %378
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i64
  %383 = load %struct.trie_rec*, %struct.trie_rec** %15, align 8
  %384 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %383, i32 0, i32 2
  %385 = getelementptr inbounds [256 x i8], [256 x i8]* %384, i32 0, i64 %382
  store i8 %376, i8* %385, align 1
  br label %395

; <label>:386                                     ; preds = %359
  %387 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %388 = load i32, i32* %i.i.2, align 4
  %389 = sext i32 %388 to i64
  %390 = load i8*, i8** %14, align 8
  %391 = getelementptr inbounds i8, i8* %390, i64 %389
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i32
  %394 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.169, i32 0, i32 0), i32 0, %struct.FILE_POS* %387, i32 %393) #4
  br label %395

; <label>:395                                     ; preds = %386, %372
  %396 = load i32, i32* %i.i.2, align 4
  %397 = add nsw i32 %396, 1
  store i32 %397, i32* %i.i.2, align 4
  br label %351

AddClassToTrie.exit:                              ; preds = %351
  %398 = load %struct.trie_rec*, %struct.trie_rec** %15, align 8
  %399 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %398, i32 0, i32 1
  %400 = load i32, i32* %399, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %399, align 4
  %402 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %402)
  %403 = bitcast %struct.trie_rec** %15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %403)
  %404 = bitcast i32* %i.i.2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %404)
  br label %405

; <label>:405                                     ; preds = %AddClassToTrie.exit, %333
  br label %406

; <label>:406                                     ; preds = %405, %328
  br label %407

; <label>:407                                     ; preds = %406, %323
  br label %624

; <label>:408                                     ; preds = %DecodeEscapes.exit
  %409 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %410 = call i32 @strcmp(i8* %409, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0)) #5
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

; <label>:412                                     ; preds = %408
  store i32 4, i32* %state, align 4
  br label %507

; <label>:413                                     ; preds = %408
  %414 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %415 = call i32 @strcmp(i8* %414, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0)) #5
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %418

; <label>:417                                     ; preds = %413
  store i32 3, i32* %state, align 4
  br label %506

; <label>:418                                     ; preds = %413
  store i32 56, i32* %prev, align 4
  store i32 0, i32* %j, align 4
  %419 = load i32, i32* %j, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i64 %420
  store i8 46, i8* %421, align 1
  %422 = load i32, i32* %prev, align 4
  %423 = trunc i32 %422 to i8
  %424 = load i32, i32* %j, align 4
  %425 = add nsw i32 %424, 1
  store i32 %425, i32* %j, align 4
  %426 = sext i32 %424 to i64
  %427 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %426
  store i8 %423, i8* %427, align 1
  store i32 56, i32* %prev, align 4
  store i32 0, i32* %i, align 4
  br label %428

; <label>:428                                     ; preds = %458, %418
  %429 = load i32, i32* %i, align 4
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %430
  %432 = load i8, i8* %431, align 1
  %433 = zext i8 %432 to i32
  %434 = icmp ne i32 %433, 0
  br i1 %434, label %435, label %461

; <label>:435                                     ; preds = %428
  %436 = load i32, i32* %i, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %437
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i32
  %441 = icmp eq i32 %440, 45
  br i1 %441, label %442, label %443

; <label>:442                                     ; preds = %435
  store i32 57, i32* %prev, align 4
  br label %457

; <label>:443                                     ; preds = %435
  %444 = load i32, i32* %i, align 4
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %445
  %447 = load i8, i8* %446, align 1
  %448 = load i32, i32* %j, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i64 %449
  store i8 %447, i8* %450, align 1
  %451 = load i32, i32* %prev, align 4
  %452 = trunc i32 %451 to i8
  %453 = load i32, i32* %j, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %j, align 4
  %455 = sext i32 %453 to i64
  %456 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %455
  store i8 %452, i8* %456, align 1
  store i32 56, i32* %prev, align 4
  br label %457

; <label>:457                                     ; preds = %443, %442
  br label %458

; <label>:458                                     ; preds = %457
  %459 = load i32, i32* %i, align 4
  %460 = add nsw i32 %459, 1
  store i32 %460, i32* %i, align 4
  br label %428

; <label>:461                                     ; preds = %428
  %462 = load i32, i32* %j, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i64 %463
  store i8 46, i8* %464, align 1
  %465 = load i32, i32* %prev, align 4
  %466 = trunc i32 %465 to i8
  %467 = load i32, i32* %j, align 4
  %468 = add nsw i32 %467, 1
  store i32 %468, i32* %j, align 4
  %469 = sext i32 %467 to i64
  %470 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %469
  store i8 %466, i8* %470, align 1
  store i32 56, i32* %prev, align 4
  %471 = load i32, i32* %j, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i64 %472
  store i8 0, i8* %473, align 1
  %474 = load i32, i32* %prev, align 4
  %475 = trunc i32 %474 to i8
  %476 = load i32, i32* %j, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %477
  store i8 %475, i8* %478, align 1
  %479 = load i32, i32* %j, align 4
  %480 = add nsw i32 %479, 1
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %481
  store i8 0, i8* %482, align 1
  %483 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i32 0
  %484 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i32 0
  %485 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %486 = load %union.rec*, %union.rec** %fname, align 8
  %487 = bitcast %union.rec* %486 to %struct.word_type*
  %488 = getelementptr inbounds %struct.word_type, %struct.word_type* %487, i32 0, i32 4
  %489 = getelementptr inbounds [4 x i8], [4 x i8]* %488, i32 0, i32 0
  %490 = load i32, i32* %hline_num, align 4
  %491 = call i32 @TrieInsert(i8* %483, i8* %484, %struct.trie_rec* %485, i8* %489, i32 %490)
  %492 = icmp ne i32 %491, 0
  br i1 %492, label %505, label %493

; <label>:493                                     ; preds = %461
  %494 = load %union.rec*, %union.rec** %fname, align 8
  %495 = bitcast %union.rec* %494 to %struct.word_type*
  %496 = getelementptr inbounds %struct.word_type, %struct.word_type* %495, i32 0, i32 1
  %497 = bitcast %union.FIRST_UNION* %496 to %struct.FILE_POS*
  %498 = load %union.rec*, %union.rec** %fname, align 8
  %499 = bitcast %union.rec* %498 to %struct.word_type*
  %500 = getelementptr inbounds %struct.word_type, %struct.word_type* %499, i32 0, i32 4
  %501 = getelementptr inbounds [4 x i8], [4 x i8]* %500, i32 0, i32 0
  %502 = load i32, i32* %hline_num, align 4
  %503 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i32 0, i32 0), i32 2, %struct.FILE_POS* %497, i8* %501, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 %502)
  %504 = load i32*, i32** %23, align 8
  store i32 0, i32* %504, align 4
  store %struct.trie_rec* null, %struct.trie_rec** %21
  br label %1205

; <label>:505                                     ; preds = %461
  br label %506

; <label>:506                                     ; preds = %505, %417
  br label %507

; <label>:507                                     ; preds = %506, %412
  br label %624

; <label>:508                                     ; preds = %DecodeEscapes.exit
  %509 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %510 = call i32 @strcmp(i8* %509, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0)) #5
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %513

; <label>:512                                     ; preds = %508
  store i32 4, i32* %state, align 4
  br label %530

; <label>:513                                     ; preds = %508
  %514 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %515 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %514, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i32* %length_limit) #4
  %516 = icmp ne i32 %515, 1
  br i1 %516, label %517, label %529

; <label>:517                                     ; preds = %513
  %518 = load %union.rec*, %union.rec** %fname, align 8
  %519 = bitcast %union.rec* %518 to %struct.word_type*
  %520 = getelementptr inbounds %struct.word_type, %struct.word_type* %519, i32 0, i32 1
  %521 = bitcast %union.FIRST_UNION* %520 to %struct.FILE_POS*
  %522 = load %union.rec*, %union.rec** %fname, align 8
  %523 = bitcast %union.rec* %522 to %struct.word_type*
  %524 = getelementptr inbounds %struct.word_type, %struct.word_type* %523, i32 0, i32 4
  %525 = getelementptr inbounds [4 x i8], [4 x i8]* %524, i32 0, i32 0
  %526 = load i32, i32* %hline_num, align 4
  %527 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 20, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i32 0, i32 0), i32 2, %struct.FILE_POS* %521, i8* %525, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 %526)
  %528 = load i32*, i32** %23, align 8
  store i32 0, i32* %528, align 4
  store %struct.trie_rec* null, %struct.trie_rec** %21
  br label %1205

; <label>:529                                     ; preds = %513
  br label %530

; <label>:530                                     ; preds = %529, %512
  br label %624

; <label>:531                                     ; preds = %DecodeEscapes.exit
  store i32 48, i32* %prev, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %532

; <label>:532                                     ; preds = %574, %531
  %533 = load i32, i32* %i, align 4
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %534
  %536 = load i8, i8* %535, align 1
  %537 = zext i8 %536 to i32
  %538 = icmp ne i32 %537, 0
  br i1 %538, label %539, label %577

; <label>:539                                     ; preds = %532
  %540 = load i32, i32* %i, align 4
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %541
  %543 = load i8, i8* %542, align 1
  %544 = zext i8 %543 to i32
  %545 = icmp sge i32 %544, 48
  br i1 %545, label %546, label %559

; <label>:546                                     ; preds = %539
  %547 = load i32, i32* %i, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %548
  %550 = load i8, i8* %549, align 1
  %551 = zext i8 %550 to i32
  %552 = icmp sle i32 %551, 57
  br i1 %552, label %553, label %559

; <label>:553                                     ; preds = %546
  %554 = load i32, i32* %i, align 4
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %555
  %557 = load i8, i8* %556, align 1
  %558 = zext i8 %557 to i32
  store i32 %558, i32* %prev, align 4
  br label %573

; <label>:559                                     ; preds = %546, %539
  %560 = load i32, i32* %i, align 4
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %561
  %563 = load i8, i8* %562, align 1
  %564 = load i32, i32* %j, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i64 %565
  store i8 %563, i8* %566, align 1
  %567 = load i32, i32* %prev, align 4
  %568 = trunc i32 %567 to i8
  %569 = load i32, i32* %j, align 4
  %570 = add nsw i32 %569, 1
  store i32 %570, i32* %j, align 4
  %571 = sext i32 %569 to i64
  %572 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %571
  store i8 %568, i8* %572, align 1
  store i32 48, i32* %prev, align 4
  br label %573

; <label>:573                                     ; preds = %559, %553
  br label %574

; <label>:574                                     ; preds = %573
  %575 = load i32, i32* %i, align 4
  %576 = add nsw i32 %575, 1
  store i32 %576, i32* %i, align 4
  br label %532

; <label>:577                                     ; preds = %532
  %578 = load i32, i32* %j, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i64 %579
  store i8 0, i8* %580, align 1
  %581 = load i32, i32* %prev, align 4
  %582 = trunc i32 %581 to i8
  %583 = load i32, i32* %j, align 4
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %584
  store i8 %582, i8* %585, align 1
  %586 = load i32, i32* %j, align 4
  %587 = add nsw i32 %586, 1
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i64 %588
  store i8 0, i8* %589, align 1
  %590 = load i32, i32* %length_limit, align 4
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %596, label %592

; <label>:592                                     ; preds = %577
  %593 = load i32, i32* %j, align 4
  %594 = load i32, i32* %length_limit, align 4
  %595 = icmp sle i32 %593, %594
  br i1 %595, label %596, label %620

; <label>:596                                     ; preds = %592, %577
  %597 = getelementptr inbounds [512 x i8], [512 x i8]* %key, i32 0, i32 0
  %598 = getelementptr inbounds [512 x i8], [512 x i8]* %value, i32 0, i32 0
  %599 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %600 = load %union.rec*, %union.rec** %fname, align 8
  %601 = bitcast %union.rec* %600 to %struct.word_type*
  %602 = getelementptr inbounds %struct.word_type, %struct.word_type* %601, i32 0, i32 4
  %603 = getelementptr inbounds [4 x i8], [4 x i8]* %602, i32 0, i32 0
  %604 = load i32, i32* %hline_num, align 4
  %605 = call i32 @TrieInsert(i8* %597, i8* %598, %struct.trie_rec* %599, i8* %603, i32 %604)
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %619, label %607

; <label>:607                                     ; preds = %596
  %608 = load %union.rec*, %union.rec** %fname, align 8
  %609 = bitcast %union.rec* %608 to %struct.word_type*
  %610 = getelementptr inbounds %struct.word_type, %struct.word_type* %609, i32 0, i32 1
  %611 = bitcast %union.FIRST_UNION* %610 to %struct.FILE_POS*
  %612 = load %union.rec*, %union.rec** %fname, align 8
  %613 = bitcast %union.rec* %612 to %struct.word_type*
  %614 = getelementptr inbounds %struct.word_type, %struct.word_type* %613, i32 0, i32 4
  %615 = getelementptr inbounds [4 x i8], [4 x i8]* %614, i32 0, i32 0
  %616 = load i32, i32* %hline_num, align 4
  %617 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i32 0, i32 0), i32 2, %struct.FILE_POS* %611, i8* %615, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i32 %616)
  %618 = load i32*, i32** %23, align 8
  store i32 0, i32* %618, align 4
  store %struct.trie_rec* null, %struct.trie_rec** %21
  br label %1205

; <label>:619                                     ; preds = %596
  br label %620

; <label>:620                                     ; preds = %619, %592
  br label %624

; <label>:621                                     ; preds = %DecodeEscapes.exit
  %622 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %623 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 0, %struct.FILE_POS* %622, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i32 0, i32 0))
  br label %624

; <label>:624                                     ; preds = %621, %620, %530, %507, %407, %318
  br label %190

; <label>:625                                     ; preds = %202
  br label %182

; <label>:626                                     ; preds = %182
  %627 = load i32, i32* %state, align 4
  %628 = icmp ne i32 %627, 4
  br i1 %628, label %629, label %634

; <label>:629                                     ; preds = %626
  %630 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %631 = load i16, i16* %unpacked_fnum, align 2
  %632 = call i8* @FileName(i16 zeroext %631)
  %633 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 13, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i32 0, i32 0), i32 1, %struct.FILE_POS* %630, i8* %632)
  br label %634

; <label>:634                                     ; preds = %629, %626
  %635 = load %struct._IO_FILE*, %struct._IO_FILE** %unpacked_fp, align 8
  %636 = call i32 @fclose(%struct._IO_FILE* %635)
  %637 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %638 = bitcast %struct.trie_rec** %13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %638)
  %639 = bitcast i8** %p.i.3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %639)
  %640 = bitcast i8** %q.i.4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %640)
  %641 = bitcast i32* %len.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %641)
  %642 = bitcast i32* %i.i.5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %642)
  store %struct.trie_rec* %637, %struct.trie_rec** %13, align 8
  %643 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %644 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %643, i32 0, i32 5
  %645 = load i32, i32* %644, align 4
  %646 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %647 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %646, i32 0, i32 4
  store i32 %645, i32* %647, align 4
  store i32 0, i32* %i.i.5, align 4
  br label %648

; <label>:648                                     ; preds = %686, %634
  %649 = load i32, i32* %i.i.5, align 4
  %650 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %651 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %650, i32 0, i32 4
  %652 = load i32, i32* %651, align 4
  %653 = icmp slt i32 %649, %652
  br i1 %653, label %654, label %689

; <label>:654                                     ; preds = %648
  %655 = load i32, i32* %i.i.5, align 4
  %656 = sext i32 %655 to i64
  %657 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %658 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %657, i32 0, i32 3
  %659 = load i16*, i16** %658, align 8
  %660 = getelementptr inbounds i16, i16* %659, i64 %656
  %661 = load i16, i16* %660, align 2
  %662 = sext i16 %661 to i32
  %663 = icmp slt i32 %662, 0
  br i1 %663, label %664, label %686

; <label>:664                                     ; preds = %654
  %665 = load i32, i32* %i.i.5, align 4
  %666 = sext i32 %665 to i64
  %667 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %668 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %667, i32 0, i32 3
  %669 = load i16*, i16** %668, align 8
  %670 = getelementptr inbounds i16, i16* %669, i64 %666
  %671 = load i16, i16* %670, align 2
  %672 = sext i16 %671 to i32
  %673 = sub nsw i32 0, %672
  %674 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %675 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %674, i32 0, i32 8
  %676 = load i32, i32* %675, align 4
  %677 = sub nsw i32 %673, %676
  %678 = sub nsw i32 0, %677
  %679 = trunc i32 %678 to i16
  %680 = load i32, i32* %i.i.5, align 4
  %681 = sext i32 %680 to i64
  %682 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %683 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %682, i32 0, i32 3
  %684 = load i16*, i16** %683, align 8
  %685 = getelementptr inbounds i16, i16* %684, i64 %681
  store i16 %679, i16* %685, align 2
  br label %686

; <label>:686                                     ; preds = %664, %654
  %687 = load i32, i32* %i.i.5, align 4
  %688 = add nsw i32 %687, 1
  store i32 %688, i32* %i.i.5, align 4
  br label %648

; <label>:689                                     ; preds = %648
  %690 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %691 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %690, i32 0, i32 5
  %692 = load i32, i32* %691, align 4
  %693 = sext i32 %692 to i64
  %694 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %695 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %694, i32 0, i32 3
  %696 = load i16*, i16** %695, align 8
  %697 = getelementptr inbounds i16, i16* %696, i64 %693
  %698 = bitcast i16* %697 to i8*
  store i8* %698, i8** %p.i.3, align 8
  %699 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %700 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %699, i32 0, i32 8
  %701 = load i32, i32* %700, align 4
  %702 = sext i32 %701 to i64
  %703 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %704 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %703, i32 0, i32 6
  %705 = load i8*, i8** %704, align 8
  %706 = getelementptr inbounds i8, i8* %705, i64 %702
  store i8* %706, i8** %q.i.4, align 8
  %707 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %708 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %707, i32 0, i32 7
  %709 = load i32, i32* %708, align 4
  %710 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %711 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %710, i32 0, i32 8
  %712 = load i32, i32* %711, align 4
  %713 = sub nsw i32 %709, %712
  store i32 %713, i32* %len.i, align 4
  store i32 0, i32* %i.i.5, align 4
  br label %714

; <label>:714                                     ; preds = %718, %689
  %715 = load i32, i32* %i.i.5, align 4
  %716 = load i32, i32* %len.i, align 4
  %717 = icmp slt i32 %715, %716
  br i1 %717, label %718, label %CompressTrie.exit

; <label>:718                                     ; preds = %714
  %719 = load i8*, i8** %q.i.4, align 8
  %720 = getelementptr inbounds i8, i8* %719, i32 1
  store i8* %720, i8** %q.i.4, align 8
  %721 = load i8, i8* %719, align 1
  %722 = load i8*, i8** %p.i.3, align 8
  %723 = getelementptr inbounds i8, i8* %722, i32 1
  store i8* %723, i8** %p.i.3, align 8
  store i8 %721, i8* %722, align 1
  %724 = load i32, i32* %i.i.5, align 4
  %725 = add nsw i32 %724, 1
  store i32 %725, i32* %i.i.5, align 4
  br label %714

CompressTrie.exit:                                ; preds = %714
  %726 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %727 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %726, i32 0, i32 4
  %728 = load i32, i32* %727, align 4
  %729 = sext i32 %728 to i64
  %730 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %731 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %730, i32 0, i32 3
  %732 = load i16*, i16** %731, align 8
  %733 = getelementptr inbounds i16, i16* %732, i64 %729
  %734 = bitcast i16* %733 to i8*
  %735 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %736 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %735, i32 0, i32 6
  store i8* %734, i8** %736, align 8
  %737 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %738 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %737, i32 0, i32 8
  store i32 0, i32* %738, align 4
  %739 = load i32, i32* %len.i, align 4
  %740 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %741 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %740, i32 0, i32 7
  store i32 %739, i32* %741, align 4
  %742 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %743 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %742, i32 0, i32 4
  %744 = load i32, i32* %743, align 4
  %745 = sext i32 %744 to i64
  %746 = mul i64 %745, 2
  %747 = add i64 296, %746
  %748 = load %struct.trie_rec*, %struct.trie_rec** %13, align 8
  %749 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %748, i32 0, i32 7
  %750 = load i32, i32* %749, align 4
  %751 = sext i32 %750 to i64
  %752 = add i64 %747, %751
  %753 = trunc i64 %752 to i32
  store i32 %753, i32* %len.i, align 4
  %754 = bitcast %struct.trie_rec** %13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %754)
  %755 = bitcast i8** %p.i.3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %755)
  %756 = bitcast i8** %q.i.4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %756)
  %757 = bitcast i32* %len.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %757)
  %758 = bitcast i32* %i.i.5 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %758)
  %759 = getelementptr inbounds [522 x i8], [522 x i8]* %buff, i32 0, i32 0
  %760 = load i16, i16* %unpacked_fnum, align 2
  %761 = call i8* @FileName(i16 zeroext %760)
  %762 = call i8* @strcpy(i8* %759, i8* %761) #4
  %763 = getelementptr inbounds [522 x i8], [522 x i8]* %buff, i32 0, i32 0
  %764 = call i64 @strlen(i8* %763) #5
  %765 = sub i64 %764, 3
  %766 = getelementptr inbounds [522 x i8], [522 x i8]* %buff, i32 0, i64 %765
  %767 = call i8* @strcpy(i8* %766, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)) #4
  %768 = getelementptr inbounds [522 x i8], [522 x i8]* %buff, i32 0, i32 0
  %769 = call %struct._IO_FILE* @fopen(i8* %768, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0))
  store %struct._IO_FILE* %769, %struct._IO_FILE** %packed_fp, align 8
  %770 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %771 = icmp eq %struct._IO_FILE* %770, null
  br i1 %771, label %772, label %776

; <label>:772                                     ; preds = %CompressTrie.exit
  %773 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %774 = getelementptr inbounds [522 x i8], [522 x i8]* %buff, i32 0, i32 0
  %775 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i32 0, i32 0), i32 1, %struct.FILE_POS* %773, i8* %774)
  br label %776

; <label>:776                                     ; preds = %772, %CompressTrie.exit
  %777 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %778 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %779 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %778, i32 0, i32 0
  %780 = load i32, i32* %779, align 4
  %781 = bitcast %struct._IO_FILE** %11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %781)
  %782 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %782)
  store %struct._IO_FILE* %777, %struct._IO_FILE** %11, align 8
  store i32 %780, i32* %12, align 4
  %783 = load i32, i32* %12, align 4
  %784 = ashr i32 %783, 24
  %785 = and i32 %784, 255
  %786 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %787 = call i32 @_IO_putc(i32 %785, %struct._IO_FILE* %786) #4
  %788 = load i32, i32* %12, align 4
  %789 = ashr i32 %788, 16
  %790 = and i32 %789, 255
  %791 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %792 = call i32 @_IO_putc(i32 %790, %struct._IO_FILE* %791) #4
  %793 = load i32, i32* %12, align 4
  %794 = ashr i32 %793, 8
  %795 = and i32 %794, 255
  %796 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %797 = call i32 @_IO_putc(i32 %795, %struct._IO_FILE* %796) #4
  %798 = load i32, i32* %12, align 4
  %799 = and i32 %798, 255
  %800 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %801 = call i32 @_IO_putc(i32 %799, %struct._IO_FILE* %800) #4
  %802 = bitcast %struct._IO_FILE** %11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %802)
  %803 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %803)
  %804 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %805 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %806 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %805, i32 0, i32 1
  %807 = load i32, i32* %806, align 4
  %808 = bitcast %struct._IO_FILE** %9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %808)
  %809 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %809)
  store %struct._IO_FILE* %804, %struct._IO_FILE** %9, align 8
  store i32 %807, i32* %10, align 4
  %810 = load i32, i32* %10, align 4
  %811 = ashr i32 %810, 24
  %812 = and i32 %811, 255
  %813 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %814 = call i32 @_IO_putc(i32 %812, %struct._IO_FILE* %813) #4
  %815 = load i32, i32* %10, align 4
  %816 = ashr i32 %815, 16
  %817 = and i32 %816, 255
  %818 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %819 = call i32 @_IO_putc(i32 %817, %struct._IO_FILE* %818) #4
  %820 = load i32, i32* %10, align 4
  %821 = ashr i32 %820, 8
  %822 = and i32 %821, 255
  %823 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %824 = call i32 @_IO_putc(i32 %822, %struct._IO_FILE* %823) #4
  %825 = load i32, i32* %10, align 4
  %826 = and i32 %825, 255
  %827 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %828 = call i32 @_IO_putc(i32 %826, %struct._IO_FILE* %827) #4
  %829 = bitcast %struct._IO_FILE** %9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %829)
  %830 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %830)
  store i32 0, i32* %i, align 4
  br label %831

; <label>:831                                     ; preds = %847, %776
  %832 = load i32, i32* %i, align 4
  %833 = icmp slt i32 %832, 256
  br i1 %833, label %834, label %850

; <label>:834                                     ; preds = %831
  %835 = load i32, i32* %i, align 4
  %836 = sext i32 %835 to i64
  %837 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %838 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %837, i32 0, i32 2
  %839 = getelementptr inbounds [256 x i8], [256 x i8]* %838, i32 0, i64 %836
  %840 = load i8, i8* %839, align 1
  %841 = zext i8 %840 to i32
  %842 = and i32 %841, 255
  %843 = trunc i32 %842 to i8
  %844 = sext i8 %843 to i32
  %845 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %846 = call i32 @_IO_putc(i32 %844, %struct._IO_FILE* %845)
  br label %847

; <label>:847                                     ; preds = %834
  %848 = load i32, i32* %i, align 4
  %849 = add nsw i32 %848, 1
  store i32 %849, i32* %i, align 4
  br label %831

; <label>:850                                     ; preds = %831
  %851 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %852 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %853 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %852, i32 0, i32 4
  %854 = load i32, i32* %853, align 4
  %855 = bitcast %struct._IO_FILE** %7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %855)
  %856 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %856)
  store %struct._IO_FILE* %851, %struct._IO_FILE** %7, align 8
  store i32 %854, i32* %8, align 4
  %857 = load i32, i32* %8, align 4
  %858 = ashr i32 %857, 24
  %859 = and i32 %858, 255
  %860 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %861 = call i32 @_IO_putc(i32 %859, %struct._IO_FILE* %860) #4
  %862 = load i32, i32* %8, align 4
  %863 = ashr i32 %862, 16
  %864 = and i32 %863, 255
  %865 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %866 = call i32 @_IO_putc(i32 %864, %struct._IO_FILE* %865) #4
  %867 = load i32, i32* %8, align 4
  %868 = ashr i32 %867, 8
  %869 = and i32 %868, 255
  %870 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %871 = call i32 @_IO_putc(i32 %869, %struct._IO_FILE* %870) #4
  %872 = load i32, i32* %8, align 4
  %873 = and i32 %872, 255
  %874 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %875 = call i32 @_IO_putc(i32 %873, %struct._IO_FILE* %874) #4
  %876 = bitcast %struct._IO_FILE** %7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %876)
  %877 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %877)
  %878 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %879 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %880 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %879, i32 0, i32 5
  %881 = load i32, i32* %880, align 4
  %882 = bitcast %struct._IO_FILE** %5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %882)
  %883 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %883)
  store %struct._IO_FILE* %878, %struct._IO_FILE** %5, align 8
  store i32 %881, i32* %6, align 4
  %884 = load i32, i32* %6, align 4
  %885 = ashr i32 %884, 24
  %886 = and i32 %885, 255
  %887 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %888 = call i32 @_IO_putc(i32 %886, %struct._IO_FILE* %887) #4
  %889 = load i32, i32* %6, align 4
  %890 = ashr i32 %889, 16
  %891 = and i32 %890, 255
  %892 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %893 = call i32 @_IO_putc(i32 %891, %struct._IO_FILE* %892) #4
  %894 = load i32, i32* %6, align 4
  %895 = ashr i32 %894, 8
  %896 = and i32 %895, 255
  %897 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %898 = call i32 @_IO_putc(i32 %896, %struct._IO_FILE* %897) #4
  %899 = load i32, i32* %6, align 4
  %900 = and i32 %899, 255
  %901 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %902 = call i32 @_IO_putc(i32 %900, %struct._IO_FILE* %901) #4
  %903 = bitcast %struct._IO_FILE** %5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %903)
  %904 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %904)
  %905 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %906 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %907 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %906, i32 0, i32 7
  %908 = load i32, i32* %907, align 4
  %909 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %909)
  %910 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %910)
  store %struct._IO_FILE* %905, %struct._IO_FILE** %3, align 8
  store i32 %908, i32* %4, align 4
  %911 = load i32, i32* %4, align 4
  %912 = ashr i32 %911, 24
  %913 = and i32 %912, 255
  %914 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %915 = call i32 @_IO_putc(i32 %913, %struct._IO_FILE* %914) #4
  %916 = load i32, i32* %4, align 4
  %917 = ashr i32 %916, 16
  %918 = and i32 %917, 255
  %919 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %920 = call i32 @_IO_putc(i32 %918, %struct._IO_FILE* %919) #4
  %921 = load i32, i32* %4, align 4
  %922 = ashr i32 %921, 8
  %923 = and i32 %922, 255
  %924 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %925 = call i32 @_IO_putc(i32 %923, %struct._IO_FILE* %924) #4
  %926 = load i32, i32* %4, align 4
  %927 = and i32 %926, 255
  %928 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %929 = call i32 @_IO_putc(i32 %927, %struct._IO_FILE* %928) #4
  %930 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %930)
  %931 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %931)
  %932 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %933 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %934 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %933, i32 0, i32 8
  %935 = load i32, i32* %934, align 4
  %936 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %936)
  %937 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %937)
  store %struct._IO_FILE* %932, %struct._IO_FILE** %1, align 8
  store i32 %935, i32* %2, align 4
  %938 = load i32, i32* %2, align 4
  %939 = ashr i32 %938, 24
  %940 = and i32 %939, 255
  %941 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %942 = call i32 @_IO_putc(i32 %940, %struct._IO_FILE* %941) #4
  %943 = load i32, i32* %2, align 4
  %944 = ashr i32 %943, 16
  %945 = and i32 %944, 255
  %946 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %947 = call i32 @_IO_putc(i32 %945, %struct._IO_FILE* %946) #4
  %948 = load i32, i32* %2, align 4
  %949 = ashr i32 %948, 8
  %950 = and i32 %949, 255
  %951 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %952 = call i32 @_IO_putc(i32 %950, %struct._IO_FILE* %951) #4
  %953 = load i32, i32* %2, align 4
  %954 = and i32 %953, 255
  %955 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %956 = call i32 @_IO_putc(i32 %954, %struct._IO_FILE* %955) #4
  %957 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %957)
  %958 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %958)
  store i32 0, i32* %i, align 4
  br label %959

; <label>:959                                     ; preds = %989, %850
  %960 = load i32, i32* %i, align 4
  %961 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %962 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %961, i32 0, i32 5
  %963 = load i32, i32* %962, align 4
  %964 = icmp slt i32 %960, %963
  br i1 %964, label %965, label %992

; <label>:965                                     ; preds = %959
  %966 = load i32, i32* %i, align 4
  %967 = sext i32 %966 to i64
  %968 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %969 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %968, i32 0, i32 3
  %970 = load i16*, i16** %969, align 8
  %971 = getelementptr inbounds i16, i16* %970, i64 %967
  %972 = load i16, i16* %971, align 2
  %973 = sext i16 %972 to i32
  %974 = ashr i32 %973, 8
  %975 = and i32 %974, 255
  %976 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %977 = call i32 @_IO_putc(i32 %975, %struct._IO_FILE* %976)
  %978 = load i32, i32* %i, align 4
  %979 = sext i32 %978 to i64
  %980 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %981 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %980, i32 0, i32 3
  %982 = load i16*, i16** %981, align 8
  %983 = getelementptr inbounds i16, i16* %982, i64 %979
  %984 = load i16, i16* %983, align 2
  %985 = sext i16 %984 to i32
  %986 = and i32 %985, 255
  %987 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %988 = call i32 @_IO_putc(i32 %986, %struct._IO_FILE* %987)
  br label %989

; <label>:989                                     ; preds = %965
  %990 = load i32, i32* %i, align 4
  %991 = add nsw i32 %990, 1
  store i32 %991, i32* %i, align 4
  br label %959

; <label>:992                                     ; preds = %959
  store i32 0, i32* %i, align 4
  br label %993

; <label>:993                                     ; preds = %1013, %992
  %994 = load i32, i32* %i, align 4
  %995 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %996 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %995, i32 0, i32 7
  %997 = load i32, i32* %996, align 4
  %998 = icmp slt i32 %994, %997
  br i1 %998, label %999, label %1016

; <label>:999                                     ; preds = %993
  %1000 = load i32, i32* %i, align 4
  %1001 = sext i32 %1000 to i64
  %1002 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1003 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1002, i32 0, i32 6
  %1004 = load i8*, i8** %1003, align 8
  %1005 = getelementptr inbounds i8, i8* %1004, i64 %1001
  %1006 = load i8, i8* %1005, align 1
  %1007 = zext i8 %1006 to i32
  %1008 = and i32 %1007, 255
  %1009 = trunc i32 %1008 to i8
  %1010 = sext i8 %1009 to i32
  %1011 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1012 = call i32 @_IO_putc(i32 %1010, %struct._IO_FILE* %1011)
  br label %1013

; <label>:1013                                    ; preds = %999
  %1014 = load i32, i32* %i, align 4
  %1015 = add nsw i32 %1014, 1
  store i32 %1015, i32* %i, align 4
  br label %993

; <label>:1016                                    ; preds = %993
  %1017 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1018 = call i32 @fclose(%struct._IO_FILE* %1017)
  %1019 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1020 = bitcast %struct.trie_rec* %1019 to i8*
  call void @free(i8* %1020) #4
  %1021 = load i16, i16* %packed_fnum, align 2
  %1022 = call %struct._IO_FILE* @OpenFile(i16 zeroext %1021, i32 0, i32 0)
  store %struct._IO_FILE* %1022, %struct._IO_FILE** %packed_fp, align 8
  %1023 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1024 = icmp eq %struct._IO_FILE* %1023, null
  br i1 %1024, label %1025, label %1030

; <label>:1025                                    ; preds = %1016
  %1026 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1027 = load i16, i16* %packed_fnum, align 2
  %1028 = call i8* @FileName(i16 zeroext %1027)
  %1029 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 15, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0), i32 1, %struct.FILE_POS* %1026, i8* %1028)
  br label %1030

; <label>:1030                                    ; preds = %1025, %1016
  br label %1031

; <label>:1031                                    ; preds = %1030, %70
  %1032 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1033 = call i32 @fseek(%struct._IO_FILE* %1032, i64 0, i32 2)
  %1034 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1035 = call i64 @ftell(%struct._IO_FILE* %1034)
  %1036 = trunc i64 %1035 to i32
  store i32 %1036, i32* %len, align 4
  %1037 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  call void @rewind(%struct._IO_FILE* %1037)
  %1038 = load i32, i32* %len, align 4
  %1039 = zext i32 %1038 to i64
  %1040 = add i64 %1039, 16
  %1041 = call noalias i8* @malloc(i64 %1040) #4
  %1042 = bitcast i8* %1041 to %struct.trie_rec*
  store %struct.trie_rec* %1042, %struct.trie_rec** %T, align 8
  %1043 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1044 = icmp eq %struct.trie_rec* %1043, null
  br i1 %1044, label %1045, label %1048

; <label>:1045                                    ; preds = %1031
  %1046 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1047 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0), i32 1, %struct.FILE_POS* %1046)
  br label %1048

; <label>:1048                                    ; preds = %1045, %1031
  %1049 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1050 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1051 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1050, i32 0, i32 0
  %1052 = call i32 @BeGetInt(%struct._IO_FILE* %1049, i32* %1051)
  %1053 = icmp ne i32 %1052, 0
  br i1 %1053, label %1054, label %1059

; <label>:1054                                    ; preds = %1048
  %1055 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1056 = load i16, i16* %packed_fnum, align 2
  %1057 = call i8* @FileName(i16 zeroext %1056)
  %1058 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 17, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.28, i32 0, i32 0), i32 1, %struct.FILE_POS* %1055, i8* %1057)
  br label %1059

; <label>:1059                                    ; preds = %1054, %1048
  %1060 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1061 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1060, i32 0, i32 0
  %1062 = load i32, i32* %1061, align 4
  %1063 = icmp ne i32 %1062, 5361534
  br i1 %1063, label %1064, label %1069

; <label>:1064                                    ; preds = %1059
  %1065 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1066 = load i16, i16* %packed_fnum, align 2
  %1067 = call i8* @FileName(i16 zeroext %1066)
  %1068 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 18, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.29, i32 0, i32 0), i32 1, %struct.FILE_POS* %1065, i8* %1067)
  br label %1069

; <label>:1069                                    ; preds = %1064, %1059
  %1070 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1071 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1072 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1071, i32 0, i32 1
  %1073 = call i32 @BeGetInt(%struct._IO_FILE* %1070, i32* %1072)
  store i32 0, i32* %i, align 4
  br label %1074

; <label>:1074                                    ; preds = %1092, %1069
  %1075 = load i32, i32* %i, align 4
  %1076 = icmp slt i32 %1075, 256
  br i1 %1076, label %1077, label %1095

; <label>:1077                                    ; preds = %1074
  %1078 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1079 = call i32 @_IO_getc(%struct._IO_FILE* %1078)
  store i32 %1079, i32* %c, align 4
  %1080 = icmp eq i32 %1079, -1
  br i1 %1080, label %1081, label %1082

; <label>:1081                                    ; preds = %1077
  br label %1091

; <label>:1082                                    ; preds = %1077
  %1083 = load i32, i32* %c, align 4
  %1084 = and i32 %1083, 255
  %1085 = trunc i32 %1084 to i8
  %1086 = load i32, i32* %i, align 4
  %1087 = sext i32 %1086 to i64
  %1088 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1089 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1088, i32 0, i32 2
  %1090 = getelementptr inbounds [256 x i8], [256 x i8]* %1089, i32 0, i64 %1087
  store i8 %1085, i8* %1090, align 1
  br label %1091

; <label>:1091                                    ; preds = %1082, %1081
  br label %1092

; <label>:1092                                    ; preds = %1091
  %1093 = load i32, i32* %i, align 4
  %1094 = add nsw i32 %1093, 1
  store i32 %1094, i32* %i, align 4
  br label %1074

; <label>:1095                                    ; preds = %1074
  %1096 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1097 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1098 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1097, i32 0, i32 4
  %1099 = call i32 @BeGetInt(%struct._IO_FILE* %1096, i32* %1098)
  %1100 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1101 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1102 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1101, i32 0, i32 5
  %1103 = call i32 @BeGetInt(%struct._IO_FILE* %1100, i32* %1102)
  %1104 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1105 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1106 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1105, i32 0, i32 7
  %1107 = call i32 @BeGetInt(%struct._IO_FILE* %1104, i32* %1106)
  %1108 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1109 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1110 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1109, i32 0, i32 8
  %1111 = call i32 @BeGetInt(%struct._IO_FILE* %1108, i32* %1110)
  %1112 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1113 = bitcast %struct.trie_rec* %1112 to i8*
  %1114 = getelementptr inbounds i8, i8* %1113, i64 296
  %1115 = bitcast i8* %1114 to i16*
  %1116 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1117 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1116, i32 0, i32 3
  store i16* %1115, i16** %1117, align 8
  %1118 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1119 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1118, i32 0, i32 4
  %1120 = load i32, i32* %1119, align 4
  %1121 = sext i32 %1120 to i64
  %1122 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1123 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1122, i32 0, i32 3
  %1124 = load i16*, i16** %1123, align 8
  %1125 = getelementptr inbounds i16, i16* %1124, i64 %1121
  %1126 = bitcast i16* %1125 to i8*
  %1127 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1128 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1127, i32 0, i32 6
  store i8* %1126, i8** %1128, align 8
  store i32 0, i32* %i, align 4
  br label %1129

; <label>:1129                                    ; preds = %1171, %1095
  %1130 = load i32, i32* %i, align 4
  %1131 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1132 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1131, i32 0, i32 5
  %1133 = load i32, i32* %1132, align 4
  %1134 = icmp slt i32 %1130, %1133
  br i1 %1134, label %1135, label %1174

; <label>:1135                                    ; preds = %1129
  %1136 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1137 = call i32 @_IO_getc(%struct._IO_FILE* %1136)
  store i32 %1137, i32* %c, align 4
  %1138 = icmp eq i32 %1137, -1
  br i1 %1138, label %1139, label %1140

; <label>:1139                                    ; preds = %1135
  br label %1170

; <label>:1140                                    ; preds = %1135
  %1141 = load i32, i32* %c, align 4
  %1142 = and i32 %1141, 255
  %1143 = shl i32 %1142, 8
  %1144 = trunc i32 %1143 to i16
  %1145 = load i32, i32* %i, align 4
  %1146 = sext i32 %1145 to i64
  %1147 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1148 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1147, i32 0, i32 3
  %1149 = load i16*, i16** %1148, align 8
  %1150 = getelementptr inbounds i16, i16* %1149, i64 %1146
  store i16 %1144, i16* %1150, align 2
  %1151 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1152 = call i32 @_IO_getc(%struct._IO_FILE* %1151)
  store i32 %1152, i32* %c, align 4
  %1153 = icmp eq i32 %1152, -1
  br i1 %1153, label %1154, label %1155

; <label>:1154                                    ; preds = %1140
  br label %1168

; <label>:1155                                    ; preds = %1140
  %1156 = load i32, i32* %c, align 4
  %1157 = and i32 %1156, 255
  %1158 = load i32, i32* %i, align 4
  %1159 = sext i32 %1158 to i64
  %1160 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1161 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1160, i32 0, i32 3
  %1162 = load i16*, i16** %1161, align 8
  %1163 = getelementptr inbounds i16, i16* %1162, i64 %1159
  %1164 = load i16, i16* %1163, align 2
  %1165 = sext i16 %1164 to i32
  %1166 = or i32 %1165, %1157
  %1167 = trunc i32 %1166 to i16
  store i16 %1167, i16* %1163, align 2
  br label %1168

; <label>:1168                                    ; preds = %1155, %1154
  %1169 = phi i32 [ -1, %1154 ], [ 0, %1155 ]
  br label %1170

; <label>:1170                                    ; preds = %1168, %1139
  br label %1171

; <label>:1171                                    ; preds = %1170
  %1172 = load i32, i32* %i, align 4
  %1173 = add nsw i32 %1172, 1
  store i32 %1173, i32* %i, align 4
  br label %1129

; <label>:1174                                    ; preds = %1129
  store i32 0, i32* %i, align 4
  br label %1175

; <label>:1175                                    ; preds = %1197, %1174
  %1176 = load i32, i32* %i, align 4
  %1177 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1178 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1177, i32 0, i32 7
  %1179 = load i32, i32* %1178, align 4
  %1180 = icmp slt i32 %1176, %1179
  br i1 %1180, label %1181, label %1200

; <label>:1181                                    ; preds = %1175
  %1182 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1183 = call i32 @_IO_getc(%struct._IO_FILE* %1182)
  store i32 %1183, i32* %c, align 4
  %1184 = icmp eq i32 %1183, -1
  br i1 %1184, label %1185, label %1186

; <label>:1185                                    ; preds = %1181
  br label %1196

; <label>:1186                                    ; preds = %1181
  %1187 = load i32, i32* %c, align 4
  %1188 = and i32 %1187, 255
  %1189 = trunc i32 %1188 to i8
  %1190 = load i32, i32* %i, align 4
  %1191 = sext i32 %1190 to i64
  %1192 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1193 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1192, i32 0, i32 6
  %1194 = load i8*, i8** %1193, align 8
  %1195 = getelementptr inbounds i8, i8* %1194, i64 %1191
  store i8 %1189, i8* %1195, align 1
  br label %1196

; <label>:1196                                    ; preds = %1186, %1185
  br label %1197

; <label>:1197                                    ; preds = %1196
  %1198 = load i32, i32* %i, align 4
  %1199 = add nsw i32 %1198, 1
  store i32 %1199, i32* %i, align 4
  br label %1175

; <label>:1200                                    ; preds = %1175
  %1201 = load %struct._IO_FILE*, %struct._IO_FILE** %packed_fp, align 8
  %1202 = call i32 @fclose(%struct._IO_FILE* %1201)
  %1203 = load i32*, i32** %23, align 8
  store i32 1, i32* %1203, align 4
  %1204 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  store %struct.trie_rec* %1204, %struct.trie_rec** %21
  br label %1205

; <label>:1205                                    ; preds = %1200, %607, %517, %493, %115, %87, %52
  %1206 = load %struct.trie_rec*, %struct.trie_rec** %21
  ret %struct.trie_rec* %1206
}

; Function Attrs: nounwind uwtable
define %union.rec* @Hyphenate(%union.rec* %x) #0 {
  %1 = alloca %union.rec*, align 8
  %link = alloca %union.rec*, align 8
  %y = alloca %union.rec*, align 8
  %z = alloca %union.rec*, align 8
  %next_link = alloca %union.rec*, align 8
  %T = alloca %struct.trie_rec*, align 8
  %lnum = alloca i32, align 4
  %str = alloca [2050 x i8], align 16
  %rate = alloca [2051 x i8], align 16
  %val = alloca [2051 x i8], align 16
  %class = alloca i8*, align 8
  %key = alloca i8*, align 8
  %ss = alloca i8*, align 8
  %s = alloca i8*, align 8
  %p = alloca i8*, align 8
  %rem = alloca i8*, align 8
  %lig = alloca i8*, align 8
  %a = alloca i8*, align 8
  %b = alloca i8*, align 8
  %start = alloca i32, align 4
  %stop = alloca i32, align 4
  %i = alloca i32, align 4
  %curr_node = alloca i32, align 4
  %next_node = alloca i32, align 4
  %pos = alloca i32, align 4
  %hyphenated = alloca i32, align 4
  %success = alloca i32, align 4
  %p1 = alloca i8*, align 8
  %q = alloca i8*, align 8
  %xval = alloca i8, align 1
  %i2 = alloca i32, align 4
  %skip = alloca i32, align 4
  %p3 = alloca i8*, align 8
  %q4 = alloca i8*, align 8
  %p5 = alloca i8*, align 8
  %q6 = alloca i8*, align 8
  %xval7 = alloca i8, align 1
  %i8 = alloca i32, align 4
  %skip9 = alloca i32, align 4
  %p10 = alloca i8*, align 8
  %q11 = alloca i8*, align 8
  store %union.rec* %x, %union.rec** %1, align 8
  %2 = load %union.rec*, %union.rec** %1, align 8
  %3 = bitcast %union.rec* %2 to %struct.word_type*
  %4 = getelementptr inbounds %struct.word_type, %struct.word_type* %3, i32 0, i32 1
  %5 = bitcast %union.FIRST_UNION* %4 to %struct.anon*
  %6 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 17
  br i1 %9, label %13, label %10

; <label>:10                                      ; preds = %0
  %11 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %12 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 0, %struct.FILE_POS* %11, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0))
  br label %13

; <label>:13                                      ; preds = %10, %0
  %14 = load %union.rec*, %union.rec** %1, align 8
  %15 = bitcast %union.rec* %14 to %struct.word_type*
  %16 = getelementptr inbounds %struct.word_type, %struct.word_type* %15, i32 0, i32 0
  %17 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %16, i32 0, i64 0
  %18 = getelementptr inbounds %struct.LIST, %struct.LIST* %17, i32 0, i32 1
  %19 = load %union.rec*, %union.rec** %18, align 8
  store %union.rec* %19, %union.rec** %link, align 8
  br label %20

; <label>:20                                      ; preds = %2220, %13
  %21 = load %union.rec*, %union.rec** %link, align 8
  %22 = load %union.rec*, %union.rec** %1, align 8
  %23 = icmp ne %union.rec* %21, %22
  br i1 %23, label %24, label %2227

; <label>:24                                      ; preds = %20
  %25 = load %union.rec*, %union.rec** %link, align 8
  %26 = bitcast %union.rec* %25 to %struct.word_type*
  %27 = getelementptr inbounds %struct.word_type, %struct.word_type* %26, i32 0, i32 0
  %28 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %27, i32 0, i64 1
  %29 = getelementptr inbounds %struct.LIST, %struct.LIST* %28, i32 0, i32 0
  %30 = load %union.rec*, %union.rec** %29, align 8
  store %union.rec* %30, %union.rec** %y, align 8
  br label %31

; <label>:31                                      ; preds = %41, %24
  %32 = load %union.rec*, %union.rec** %y, align 8
  %33 = bitcast %union.rec* %32 to %struct.word_type*
  %34 = getelementptr inbounds %struct.word_type, %struct.word_type* %33, i32 0, i32 1
  %35 = bitcast %union.FIRST_UNION* %34 to %struct.anon*
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %35, i32 0, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %48

; <label>:40                                      ; preds = %31
  br label %41

; <label>:41                                      ; preds = %40
  %42 = load %union.rec*, %union.rec** %y, align 8
  %43 = bitcast %union.rec* %42 to %struct.word_type*
  %44 = getelementptr inbounds %struct.word_type, %struct.word_type* %43, i32 0, i32 0
  %45 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %44, i32 0, i64 1
  %46 = getelementptr inbounds %struct.LIST, %struct.LIST* %45, i32 0, i32 0
  %47 = load %union.rec*, %union.rec** %46, align 8
  store %union.rec* %47, %union.rec** %y, align 8
  br label %31

; <label>:48                                      ; preds = %31
  %49 = load %union.rec*, %union.rec** %y, align 8
  %50 = bitcast %union.rec* %49 to %struct.word_type*
  %51 = getelementptr inbounds %struct.word_type, %struct.word_type* %50, i32 0, i32 1
  %52 = bitcast %union.FIRST_UNION* %51 to %struct.anon*
  %53 = getelementptr inbounds %struct.anon, %struct.anon* %52, i32 0, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = icmp eq i32 %55, 11
  br i1 %56, label %66, label %57

; <label>:57                                      ; preds = %48
  %58 = load %union.rec*, %union.rec** %y, align 8
  %59 = bitcast %union.rec* %58 to %struct.word_type*
  %60 = getelementptr inbounds %struct.word_type, %struct.word_type* %59, i32 0, i32 1
  %61 = bitcast %union.FIRST_UNION* %60 to %struct.anon*
  %62 = getelementptr inbounds %struct.anon, %struct.anon* %61, i32 0, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 12
  br i1 %65, label %66, label %83

; <label>:66                                      ; preds = %57, %48
  %67 = load %union.rec*, %union.rec** %y, align 8
  %68 = bitcast %union.rec* %67 to %struct.word_type*
  %69 = getelementptr inbounds %struct.word_type, %struct.word_type* %68, i32 0, i32 4
  %70 = getelementptr inbounds [4 x i8], [4 x i8]* %69, i32 0, i64 0
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %83, label %74

; <label>:74                                      ; preds = %66
  %75 = load %union.rec*, %union.rec** %y, align 8
  %76 = bitcast %union.rec* %75 to %struct.word_type*
  %77 = getelementptr inbounds %struct.word_type, %struct.word_type* %76, i32 0, i32 2
  %78 = bitcast %union.SECOND_UNION* %77 to %struct.anon.1*
  %79 = bitcast %struct.anon.1* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = lshr i32 %80, 31
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %109, label %83

; <label>:83                                      ; preds = %74, %66, %57
  %84 = load %union.rec*, %union.rec** %y, align 8
  %85 = bitcast %union.rec* %84 to %struct.word_type*
  %86 = getelementptr inbounds %struct.word_type, %struct.word_type* %85, i32 0, i32 1
  %87 = bitcast %union.FIRST_UNION* %86 to %struct.anon*
  %88 = getelementptr inbounds %struct.anon, %struct.anon* %87, i32 0, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %108

; <label>:92                                      ; preds = %83
  %93 = load %union.rec*, %union.rec** %y, align 8
  %94 = bitcast %union.rec* %93 to %struct.gapobj_type*
  %95 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %94, i32 0, i32 3
  %96 = bitcast %struct.GAP* %95 to i16*
  %97 = load i16, i16* %96, align 4
  %98 = lshr i16 %97, 13
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %99, 2
  br i1 %100, label %101, label %108

; <label>:101                                     ; preds = %92
  %102 = load %union.rec*, %union.rec** %y, align 8
  %103 = bitcast %union.rec* %102 to %struct.gapobj_type*
  %104 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %103, i32 0, i32 3
  %105 = bitcast %struct.GAP* %104 to i16*
  %106 = load i16, i16* %105, align 4
  %107 = and i16 %106, -129
  store i16 %107, i16* %105, align 4
  br label %108

; <label>:108                                     ; preds = %101, %92, %83
  br label %2220

; <label>:109                                     ; preds = %74
  %110 = load %union.rec*, %union.rec** %y, align 8
  %111 = bitcast %union.rec* %110 to %struct.word_type*
  %112 = getelementptr inbounds %struct.word_type, %struct.word_type* %111, i32 0, i32 2
  %113 = bitcast %union.SECOND_UNION* %112 to %struct.anon.1*
  %114 = bitcast %struct.anon.1* %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = lshr i32 %115, 23
  %117 = and i32 %116, 63
  store i32 %117, i32* %lnum, align 4
  %118 = load i32, i32* %lnum, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %130

; <label>:120                                     ; preds = %109
  %121 = load %union.rec*, %union.rec** %y, align 8
  %122 = bitcast %union.rec* %121 to %struct.word_type*
  %123 = getelementptr inbounds %struct.word_type, %struct.word_type* %122, i32 0, i32 1
  %124 = bitcast %union.FIRST_UNION* %123 to %struct.FILE_POS*
  %125 = load %union.rec*, %union.rec** %y, align 8
  %126 = bitcast %union.rec* %125 to %struct.word_type*
  %127 = getelementptr inbounds %struct.word_type, %struct.word_type* %126, i32 0, i32 4
  %128 = getelementptr inbounds [4 x i8], [4 x i8]* %127, i32 0, i32 0
  %129 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 19, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i32 0, i32 0), i32 1, %struct.FILE_POS* %124, i8* %128)
  br label %130

; <label>:130                                     ; preds = %120, %109
  %131 = load i32, i32* %lnum, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [64 x %struct.trie_rec*], [64 x %struct.trie_rec*]* @HyphTables, i32 0, i64 %132
  %134 = load %struct.trie_rec*, %struct.trie_rec** %133, align 8
  store %struct.trie_rec* %134, %struct.trie_rec** %T, align 8
  %135 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %136 = icmp eq %struct.trie_rec* %135, null
  br i1 %136, label %137, label %157

; <label>:137                                     ; preds = %130
  %138 = load i32, i32* %lnum, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds [64 x i32], [64 x i32]* @TriedFile, i32 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %152, label %143

; <label>:143                                     ; preds = %137
  %144 = load i32, i32* %lnum, align 4
  %145 = call %struct.trie_rec* @TrieRead(i32 %144, i32* %success)
  %146 = load i32, i32* %lnum, align 4
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [64 x %struct.trie_rec*], [64 x %struct.trie_rec*]* @HyphTables, i32 0, i64 %147
  store %struct.trie_rec* %145, %struct.trie_rec** %148, align 8
  store %struct.trie_rec* %145, %struct.trie_rec** %T, align 8
  %149 = load i32, i32* %lnum, align 4
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [64 x i32], [64 x i32]* @TriedFile, i32 0, i64 %150
  store i32 1, i32* %151, align 4
  br label %152

; <label>:152                                     ; preds = %143, %137
  %153 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %154 = icmp eq %struct.trie_rec* %153, null
  br i1 %154, label %155, label %156

; <label>:155                                     ; preds = %152
  br label %2220

; <label>:156                                     ; preds = %152
  br label %157

; <label>:157                                     ; preds = %156, %130
  %158 = load %union.rec*, %union.rec** %y, align 8
  %159 = bitcast %union.rec* %158 to %struct.word_type*
  %160 = getelementptr inbounds %struct.word_type, %struct.word_type* %159, i32 0, i32 4
  %161 = getelementptr inbounds [4 x i8], [4 x i8]* %160, i32 0, i32 0
  store i8* %161, i8** %key, align 8
  %162 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %163 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %162, i32 0, i32 2
  %164 = getelementptr inbounds [256 x i8], [256 x i8]* %163, i32 0, i32 0
  store i8* %164, i8** %class, align 8
  store i32 0, i32* %start, align 4
  br label %165

; <label>:165                                     ; preds = %178, %157
  %166 = load i32, i32* %start, align 4
  %167 = sext i32 %166 to i64
  %168 = load i8*, i8** %key, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 %167
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = load i8*, i8** %class, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 %171
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %181

; <label>:177                                     ; preds = %165
  br label %178

; <label>:178                                     ; preds = %177
  %179 = load i32, i32* %start, align 4
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %start, align 4
  br label %165

; <label>:181                                     ; preds = %165
  %182 = load i32, i32* %start, align 4
  store i32 %182, i32* %stop, align 4
  br label %183

; <label>:183                                     ; preds = %196, %181
  %184 = load i32, i32* %stop, align 4
  %185 = sext i32 %184 to i64
  %186 = load i8*, i8** %key, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 %185
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = load i8*, i8** %class, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 %189
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp sgt i32 %193, 1
  br i1 %194, label %195, label %199

; <label>:195                                     ; preds = %183
  br label %196

; <label>:196                                     ; preds = %195
  %197 = load i32, i32* %stop, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %stop, align 4
  br label %183

; <label>:199                                     ; preds = %183
  %200 = load i32, i32* %stop, align 4
  %201 = sext i32 %200 to i64
  %202 = load i8*, i8** %key, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 %201
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = icmp eq i32 %205, 45
  br i1 %206, label %207, label %997

; <label>:207                                     ; preds = %199
  %208 = load i32, i32* %stop, align 4
  %209 = add nsw i32 %208, 1
  %210 = sext i32 %209 to i64
  %211 = load i8*, i8** %key, align 8
  %212 = getelementptr inbounds i8, i8* %211, i64 %210
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

; <label>:216                                     ; preds = %207
  br label %2220

; <label>:217                                     ; preds = %207
  %218 = load %union.rec*, %union.rec** %link, align 8
  %219 = bitcast %union.rec* %218 to %struct.word_type*
  %220 = getelementptr inbounds %struct.word_type, %struct.word_type* %219, i32 0, i32 0
  %221 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %220, i32 0, i64 0
  %222 = getelementptr inbounds %struct.LIST, %struct.LIST* %221, i32 0, i32 1
  %223 = load %union.rec*, %union.rec** %222, align 8
  store %union.rec* %223, %union.rec** %next_link, align 8
  %224 = load i32, i32* %stop, align 4
  %225 = add nsw i32 %224, 1
  %226 = sext i32 %225 to i64
  %227 = load i8*, i8** %key, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 %226
  %229 = load %union.rec*, %union.rec** %y, align 8
  %230 = bitcast %union.rec* %229 to %struct.word_type*
  %231 = getelementptr inbounds %struct.word_type, %struct.word_type* %230, i32 0, i32 1
  %232 = bitcast %union.FIRST_UNION* %231 to %struct.FILE_POS*
  %233 = call %union.rec* @MakeWord(i32 11, i8* %228, %struct.FILE_POS* %232)
  store %union.rec* %233, %union.rec** %z, align 8
  %234 = load %union.rec*, %union.rec** %y, align 8
  %235 = bitcast %union.rec* %234 to %struct.word_type*
  %236 = getelementptr inbounds %struct.word_type, %struct.word_type* %235, i32 0, i32 2
  %237 = bitcast %union.SECOND_UNION* %236 to %struct.anon.1*
  %238 = bitcast %struct.anon.1* %237 to i32*
  %239 = load i32, i32* %238, align 4
  %240 = and i32 %239, 4095
  %241 = load %union.rec*, %union.rec** %z, align 8
  %242 = bitcast %union.rec* %241 to %struct.word_type*
  %243 = getelementptr inbounds %struct.word_type, %struct.word_type* %242, i32 0, i32 2
  %244 = bitcast %union.SECOND_UNION* %243 to %struct.anon.1*
  %245 = bitcast %struct.anon.1* %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = and i32 %240, 4095
  %248 = and i32 %246, -4096
  %249 = or i32 %248, %247
  store i32 %249, i32* %245, align 4
  %250 = load %union.rec*, %union.rec** %y, align 8
  %251 = bitcast %union.rec* %250 to %struct.word_type*
  %252 = getelementptr inbounds %struct.word_type, %struct.word_type* %251, i32 0, i32 2
  %253 = bitcast %union.SECOND_UNION* %252 to %struct.anon.1*
  %254 = bitcast %struct.anon.1* %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = lshr i32 %255, 12
  %257 = and i32 %256, 1023
  %258 = load %union.rec*, %union.rec** %z, align 8
  %259 = bitcast %union.rec* %258 to %struct.word_type*
  %260 = getelementptr inbounds %struct.word_type, %struct.word_type* %259, i32 0, i32 2
  %261 = bitcast %union.SECOND_UNION* %260 to %struct.anon.1*
  %262 = bitcast %struct.anon.1* %261 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %257, 1023
  %265 = shl i32 %264, 12
  %266 = and i32 %263, -4190209
  %267 = or i32 %266, %265
  store i32 %267, i32* %262, align 4
  %268 = load %union.rec*, %union.rec** %y, align 8
  %269 = bitcast %union.rec* %268 to %struct.word_type*
  %270 = getelementptr inbounds %struct.word_type, %struct.word_type* %269, i32 0, i32 2
  %271 = bitcast %union.SECOND_UNION* %270 to %struct.anon.1*
  %272 = bitcast %struct.anon.1* %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = lshr i32 %273, 22
  %275 = and i32 %274, 1
  %276 = load %union.rec*, %union.rec** %z, align 8
  %277 = bitcast %union.rec* %276 to %struct.word_type*
  %278 = getelementptr inbounds %struct.word_type, %struct.word_type* %277, i32 0, i32 2
  %279 = bitcast %union.SECOND_UNION* %278 to %struct.anon.1*
  %280 = bitcast %struct.anon.1* %279 to i32*
  %281 = load i32, i32* %280, align 4
  %282 = and i32 %275, 1
  %283 = shl i32 %282, 22
  %284 = and i32 %281, -4194305
  %285 = or i32 %284, %283
  store i32 %285, i32* %280, align 4
  %286 = load %union.rec*, %union.rec** %y, align 8
  %287 = bitcast %union.rec* %286 to %struct.word_type*
  %288 = getelementptr inbounds %struct.word_type, %struct.word_type* %287, i32 0, i32 2
  %289 = bitcast %union.SECOND_UNION* %288 to %struct.anon.1*
  %290 = bitcast %struct.anon.1* %289 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = lshr i32 %291, 23
  %293 = and i32 %292, 63
  %294 = load %union.rec*, %union.rec** %z, align 8
  %295 = bitcast %union.rec* %294 to %struct.word_type*
  %296 = getelementptr inbounds %struct.word_type, %struct.word_type* %295, i32 0, i32 2
  %297 = bitcast %union.SECOND_UNION* %296 to %struct.anon.1*
  %298 = bitcast %struct.anon.1* %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = and i32 %293, 63
  %301 = shl i32 %300, 23
  %302 = and i32 %299, -528482305
  %303 = or i32 %302, %301
  store i32 %303, i32* %298, align 4
  %304 = load %union.rec*, %union.rec** %y, align 8
  %305 = bitcast %union.rec* %304 to %struct.word_type*
  %306 = getelementptr inbounds %struct.word_type, %struct.word_type* %305, i32 0, i32 2
  %307 = bitcast %union.SECOND_UNION* %306 to %struct.anon.1*
  %308 = bitcast %struct.anon.1* %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = lshr i32 %309, 31
  %311 = load %union.rec*, %union.rec** %z, align 8
  %312 = bitcast %union.rec* %311 to %struct.word_type*
  %313 = getelementptr inbounds %struct.word_type, %struct.word_type* %312, i32 0, i32 2
  %314 = bitcast %union.SECOND_UNION* %313 to %struct.anon.1*
  %315 = bitcast %struct.anon.1* %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = and i32 %310, 1
  %318 = shl i32 %317, 31
  %319 = and i32 %316, 2147483647
  %320 = or i32 %319, %318
  store i32 %320, i32* %315, align 4
  %321 = load %union.rec*, %union.rec** %y, align 8
  %322 = bitcast %union.rec* %321 to %struct.word_type*
  %323 = getelementptr inbounds %struct.word_type, %struct.word_type* %322, i32 0, i32 2
  %324 = bitcast %union.SECOND_UNION* %323 to %struct.anon.1*
  %325 = bitcast %struct.anon.1* %324 to i32*
  %326 = load i32, i32* %325, align 4
  %327 = lshr i32 %326, 29
  %328 = and i32 %327, 3
  %329 = load %union.rec*, %union.rec** %z, align 8
  %330 = bitcast %union.rec* %329 to %struct.word_type*
  %331 = getelementptr inbounds %struct.word_type, %struct.word_type* %330, i32 0, i32 2
  %332 = bitcast %union.SECOND_UNION* %331 to %struct.anon.1*
  %333 = bitcast %struct.anon.1* %332 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = and i32 %328, 3
  %336 = shl i32 %335, 29
  %337 = and i32 %334, -1610612737
  %338 = or i32 %337, %336
  store i32 %338, i32* %333, align 4
  %339 = load %union.rec*, %union.rec** %z, align 8
  call void @FontWordSize(%union.rec* %339)
  %340 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 0), align 1
  %341 = zext i8 %340 to i32
  store i32 %341, i32* @zz_size, align 4
  %342 = sext i32 %341 to i64
  %343 = icmp uge i64 %342, 265
  br i1 %343, label %344, label %347

; <label>:344                                     ; preds = %217
  %345 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %346 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %345)
  br label %372

; <label>:347                                     ; preds = %217
  %348 = load i32, i32* @zz_size, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %349
  %351 = load %union.rec*, %union.rec** %350, align 8
  %352 = icmp eq %union.rec* %351, null
  br i1 %352, label %353, label %357

; <label>:353                                     ; preds = %347
  %354 = load i32, i32* @zz_size, align 4
  %355 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %356 = call %union.rec* @GetMemory(i32 %354, %struct.FILE_POS* %355)
  store %union.rec* %356, %union.rec** @zz_hold, align 8
  br label %371

; <label>:357                                     ; preds = %347
  %358 = load i32, i32* @zz_size, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %359
  %361 = load %union.rec*, %union.rec** %360, align 8
  store %union.rec* %361, %union.rec** @zz_hold, align 8
  store %union.rec* %361, %union.rec** @zz_hold, align 8
  %362 = load %union.rec*, %union.rec** @zz_hold, align 8
  %363 = bitcast %union.rec* %362 to %struct.word_type*
  %364 = getelementptr inbounds %struct.word_type, %struct.word_type* %363, i32 0, i32 0
  %365 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %364, i32 0, i64 0
  %366 = getelementptr inbounds %struct.LIST, %struct.LIST* %365, i32 0, i32 0
  %367 = load %union.rec*, %union.rec** %366, align 8
  %368 = load i32, i32* @zz_size, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %369
  store %union.rec* %367, %union.rec** %370, align 8
  br label %371

; <label>:371                                     ; preds = %357, %353
  br label %372

; <label>:372                                     ; preds = %371, %344
  %373 = load %union.rec*, %union.rec** @zz_hold, align 8
  %374 = bitcast %union.rec* %373 to %struct.word_type*
  %375 = getelementptr inbounds %struct.word_type, %struct.word_type* %374, i32 0, i32 1
  %376 = bitcast %union.FIRST_UNION* %375 to %struct.anon*
  %377 = getelementptr inbounds %struct.anon, %struct.anon* %376, i32 0, i32 0
  store i8 0, i8* %377, align 1
  %378 = load %union.rec*, %union.rec** @zz_hold, align 8
  %379 = load %union.rec*, %union.rec** @zz_hold, align 8
  %380 = bitcast %union.rec* %379 to %struct.word_type*
  %381 = getelementptr inbounds %struct.word_type, %struct.word_type* %380, i32 0, i32 0
  %382 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %381, i32 0, i64 1
  %383 = getelementptr inbounds %struct.LIST, %struct.LIST* %382, i32 0, i32 1
  store %union.rec* %378, %union.rec** %383, align 8
  %384 = load %union.rec*, %union.rec** @zz_hold, align 8
  %385 = bitcast %union.rec* %384 to %struct.word_type*
  %386 = getelementptr inbounds %struct.word_type, %struct.word_type* %385, i32 0, i32 0
  %387 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %386, i32 0, i64 1
  %388 = getelementptr inbounds %struct.LIST, %struct.LIST* %387, i32 0, i32 0
  store %union.rec* %378, %union.rec** %388, align 8
  %389 = load %union.rec*, %union.rec** @zz_hold, align 8
  %390 = bitcast %union.rec* %389 to %struct.word_type*
  %391 = getelementptr inbounds %struct.word_type, %struct.word_type* %390, i32 0, i32 0
  %392 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %391, i32 0, i64 0
  %393 = getelementptr inbounds %struct.LIST, %struct.LIST* %392, i32 0, i32 1
  store %union.rec* %378, %union.rec** %393, align 8
  %394 = load %union.rec*, %union.rec** @zz_hold, align 8
  %395 = bitcast %union.rec* %394 to %struct.word_type*
  %396 = getelementptr inbounds %struct.word_type, %struct.word_type* %395, i32 0, i32 0
  %397 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %396, i32 0, i64 0
  %398 = getelementptr inbounds %struct.LIST, %struct.LIST* %397, i32 0, i32 0
  store %union.rec* %378, %union.rec** %398, align 8
  store %union.rec* %378, %union.rec** @xx_link, align 8
  %399 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %399, %union.rec** @zz_res, align 8
  %400 = load %union.rec*, %union.rec** %link, align 8
  %401 = bitcast %union.rec* %400 to %struct.word_type*
  %402 = getelementptr inbounds %struct.word_type, %struct.word_type* %401, i32 0, i32 0
  %403 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %402, i32 0, i64 0
  %404 = getelementptr inbounds %struct.LIST, %struct.LIST* %403, i32 0, i32 1
  %405 = load %union.rec*, %union.rec** %404, align 8
  store %union.rec* %405, %union.rec** @zz_hold, align 8
  %406 = load %union.rec*, %union.rec** @zz_hold, align 8
  %407 = icmp eq %union.rec* %406, null
  br i1 %407, label %408, label %410

; <label>:408                                     ; preds = %372
  %409 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %458

; <label>:410                                     ; preds = %372
  %411 = load %union.rec*, %union.rec** @zz_res, align 8
  %412 = icmp eq %union.rec* %411, null
  br i1 %412, label %413, label %415

; <label>:413                                     ; preds = %410
  %414 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %456

; <label>:415                                     ; preds = %410
  %416 = load %union.rec*, %union.rec** @zz_hold, align 8
  %417 = bitcast %union.rec* %416 to %struct.word_type*
  %418 = getelementptr inbounds %struct.word_type, %struct.word_type* %417, i32 0, i32 0
  %419 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %418, i32 0, i64 0
  %420 = getelementptr inbounds %struct.LIST, %struct.LIST* %419, i32 0, i32 0
  %421 = load %union.rec*, %union.rec** %420, align 8
  store %union.rec* %421, %union.rec** @zz_tmp, align 8
  %422 = load %union.rec*, %union.rec** @zz_res, align 8
  %423 = bitcast %union.rec* %422 to %struct.word_type*
  %424 = getelementptr inbounds %struct.word_type, %struct.word_type* %423, i32 0, i32 0
  %425 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %424, i32 0, i64 0
  %426 = getelementptr inbounds %struct.LIST, %struct.LIST* %425, i32 0, i32 0
  %427 = load %union.rec*, %union.rec** %426, align 8
  %428 = load %union.rec*, %union.rec** @zz_hold, align 8
  %429 = bitcast %union.rec* %428 to %struct.word_type*
  %430 = getelementptr inbounds %struct.word_type, %struct.word_type* %429, i32 0, i32 0
  %431 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %430, i32 0, i64 0
  %432 = getelementptr inbounds %struct.LIST, %struct.LIST* %431, i32 0, i32 0
  store %union.rec* %427, %union.rec** %432, align 8
  %433 = load %union.rec*, %union.rec** @zz_hold, align 8
  %434 = load %union.rec*, %union.rec** @zz_res, align 8
  %435 = bitcast %union.rec* %434 to %struct.word_type*
  %436 = getelementptr inbounds %struct.word_type, %struct.word_type* %435, i32 0, i32 0
  %437 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %436, i32 0, i64 0
  %438 = getelementptr inbounds %struct.LIST, %struct.LIST* %437, i32 0, i32 0
  %439 = load %union.rec*, %union.rec** %438, align 8
  %440 = bitcast %union.rec* %439 to %struct.word_type*
  %441 = getelementptr inbounds %struct.word_type, %struct.word_type* %440, i32 0, i32 0
  %442 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %441, i32 0, i64 0
  %443 = getelementptr inbounds %struct.LIST, %struct.LIST* %442, i32 0, i32 1
  store %union.rec* %433, %union.rec** %443, align 8
  %444 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %445 = load %union.rec*, %union.rec** @zz_res, align 8
  %446 = bitcast %union.rec* %445 to %struct.word_type*
  %447 = getelementptr inbounds %struct.word_type, %struct.word_type* %446, i32 0, i32 0
  %448 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %447, i32 0, i64 0
  %449 = getelementptr inbounds %struct.LIST, %struct.LIST* %448, i32 0, i32 0
  store %union.rec* %444, %union.rec** %449, align 8
  %450 = load %union.rec*, %union.rec** @zz_res, align 8
  %451 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %452 = bitcast %union.rec* %451 to %struct.word_type*
  %453 = getelementptr inbounds %struct.word_type, %struct.word_type* %452, i32 0, i32 0
  %454 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %453, i32 0, i64 0
  %455 = getelementptr inbounds %struct.LIST, %struct.LIST* %454, i32 0, i32 1
  store %union.rec* %450, %union.rec** %455, align 8
  br label %456

; <label>:456                                     ; preds = %415, %413
  %457 = phi %union.rec* [ %414, %413 ], [ %450, %415 ]
  br label %458

; <label>:458                                     ; preds = %456, %408
  %459 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %459, %union.rec** @zz_res, align 8
  %460 = load %union.rec*, %union.rec** %z, align 8
  store %union.rec* %460, %union.rec** @zz_hold, align 8
  %461 = load %union.rec*, %union.rec** @zz_hold, align 8
  %462 = icmp eq %union.rec* %461, null
  br i1 %462, label %463, label %465

; <label>:463                                     ; preds = %458
  %464 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %513

; <label>:465                                     ; preds = %458
  %466 = load %union.rec*, %union.rec** @zz_res, align 8
  %467 = icmp eq %union.rec* %466, null
  br i1 %467, label %468, label %470

; <label>:468                                     ; preds = %465
  %469 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %511

; <label>:470                                     ; preds = %465
  %471 = load %union.rec*, %union.rec** @zz_hold, align 8
  %472 = bitcast %union.rec* %471 to %struct.word_type*
  %473 = getelementptr inbounds %struct.word_type, %struct.word_type* %472, i32 0, i32 0
  %474 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %473, i32 0, i64 1
  %475 = getelementptr inbounds %struct.LIST, %struct.LIST* %474, i32 0, i32 0
  %476 = load %union.rec*, %union.rec** %475, align 8
  store %union.rec* %476, %union.rec** @zz_tmp, align 8
  %477 = load %union.rec*, %union.rec** @zz_res, align 8
  %478 = bitcast %union.rec* %477 to %struct.word_type*
  %479 = getelementptr inbounds %struct.word_type, %struct.word_type* %478, i32 0, i32 0
  %480 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %479, i32 0, i64 1
  %481 = getelementptr inbounds %struct.LIST, %struct.LIST* %480, i32 0, i32 0
  %482 = load %union.rec*, %union.rec** %481, align 8
  %483 = load %union.rec*, %union.rec** @zz_hold, align 8
  %484 = bitcast %union.rec* %483 to %struct.word_type*
  %485 = getelementptr inbounds %struct.word_type, %struct.word_type* %484, i32 0, i32 0
  %486 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %485, i32 0, i64 1
  %487 = getelementptr inbounds %struct.LIST, %struct.LIST* %486, i32 0, i32 0
  store %union.rec* %482, %union.rec** %487, align 8
  %488 = load %union.rec*, %union.rec** @zz_hold, align 8
  %489 = load %union.rec*, %union.rec** @zz_res, align 8
  %490 = bitcast %union.rec* %489 to %struct.word_type*
  %491 = getelementptr inbounds %struct.word_type, %struct.word_type* %490, i32 0, i32 0
  %492 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %491, i32 0, i64 1
  %493 = getelementptr inbounds %struct.LIST, %struct.LIST* %492, i32 0, i32 0
  %494 = load %union.rec*, %union.rec** %493, align 8
  %495 = bitcast %union.rec* %494 to %struct.word_type*
  %496 = getelementptr inbounds %struct.word_type, %struct.word_type* %495, i32 0, i32 0
  %497 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %496, i32 0, i64 1
  %498 = getelementptr inbounds %struct.LIST, %struct.LIST* %497, i32 0, i32 1
  store %union.rec* %488, %union.rec** %498, align 8
  %499 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %500 = load %union.rec*, %union.rec** @zz_res, align 8
  %501 = bitcast %union.rec* %500 to %struct.word_type*
  %502 = getelementptr inbounds %struct.word_type, %struct.word_type* %501, i32 0, i32 0
  %503 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %502, i32 0, i64 1
  %504 = getelementptr inbounds %struct.LIST, %struct.LIST* %503, i32 0, i32 0
  store %union.rec* %499, %union.rec** %504, align 8
  %505 = load %union.rec*, %union.rec** @zz_res, align 8
  %506 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %507 = bitcast %union.rec* %506 to %struct.word_type*
  %508 = getelementptr inbounds %struct.word_type, %struct.word_type* %507, i32 0, i32 0
  %509 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %508, i32 0, i64 1
  %510 = getelementptr inbounds %struct.LIST, %struct.LIST* %509, i32 0, i32 1
  store %union.rec* %505, %union.rec** %510, align 8
  br label %511

; <label>:511                                     ; preds = %470, %468
  %512 = phi %union.rec* [ %469, %468 ], [ %505, %470 ]
  br label %513

; <label>:513                                     ; preds = %511, %463
  %514 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 1), align 1
  %515 = zext i8 %514 to i32
  store i32 %515, i32* @zz_size, align 4
  %516 = sext i32 %515 to i64
  %517 = icmp uge i64 %516, 265
  br i1 %517, label %518, label %521

; <label>:518                                     ; preds = %513
  %519 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %520 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %519)
  br label %546

; <label>:521                                     ; preds = %513
  %522 = load i32, i32* @zz_size, align 4
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %523
  %525 = load %union.rec*, %union.rec** %524, align 8
  %526 = icmp eq %union.rec* %525, null
  br i1 %526, label %527, label %531

; <label>:527                                     ; preds = %521
  %528 = load i32, i32* @zz_size, align 4
  %529 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %530 = call %union.rec* @GetMemory(i32 %528, %struct.FILE_POS* %529)
  store %union.rec* %530, %union.rec** @zz_hold, align 8
  br label %545

; <label>:531                                     ; preds = %521
  %532 = load i32, i32* @zz_size, align 4
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %533
  %535 = load %union.rec*, %union.rec** %534, align 8
  store %union.rec* %535, %union.rec** @zz_hold, align 8
  store %union.rec* %535, %union.rec** @zz_hold, align 8
  %536 = load %union.rec*, %union.rec** @zz_hold, align 8
  %537 = bitcast %union.rec* %536 to %struct.word_type*
  %538 = getelementptr inbounds %struct.word_type, %struct.word_type* %537, i32 0, i32 0
  %539 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %538, i32 0, i64 0
  %540 = getelementptr inbounds %struct.LIST, %struct.LIST* %539, i32 0, i32 0
  %541 = load %union.rec*, %union.rec** %540, align 8
  %542 = load i32, i32* @zz_size, align 4
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %543
  store %union.rec* %541, %union.rec** %544, align 8
  br label %545

; <label>:545                                     ; preds = %531, %527
  br label %546

; <label>:546                                     ; preds = %545, %518
  %547 = load %union.rec*, %union.rec** @zz_hold, align 8
  %548 = bitcast %union.rec* %547 to %struct.word_type*
  %549 = getelementptr inbounds %struct.word_type, %struct.word_type* %548, i32 0, i32 1
  %550 = bitcast %union.FIRST_UNION* %549 to %struct.anon*
  %551 = getelementptr inbounds %struct.anon, %struct.anon* %550, i32 0, i32 0
  store i8 1, i8* %551, align 1
  %552 = load %union.rec*, %union.rec** @zz_hold, align 8
  %553 = load %union.rec*, %union.rec** @zz_hold, align 8
  %554 = bitcast %union.rec* %553 to %struct.word_type*
  %555 = getelementptr inbounds %struct.word_type, %struct.word_type* %554, i32 0, i32 0
  %556 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %555, i32 0, i64 1
  %557 = getelementptr inbounds %struct.LIST, %struct.LIST* %556, i32 0, i32 1
  store %union.rec* %552, %union.rec** %557, align 8
  %558 = load %union.rec*, %union.rec** @zz_hold, align 8
  %559 = bitcast %union.rec* %558 to %struct.word_type*
  %560 = getelementptr inbounds %struct.word_type, %struct.word_type* %559, i32 0, i32 0
  %561 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %560, i32 0, i64 1
  %562 = getelementptr inbounds %struct.LIST, %struct.LIST* %561, i32 0, i32 0
  store %union.rec* %552, %union.rec** %562, align 8
  %563 = load %union.rec*, %union.rec** @zz_hold, align 8
  %564 = bitcast %union.rec* %563 to %struct.word_type*
  %565 = getelementptr inbounds %struct.word_type, %struct.word_type* %564, i32 0, i32 0
  %566 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %565, i32 0, i64 0
  %567 = getelementptr inbounds %struct.LIST, %struct.LIST* %566, i32 0, i32 1
  store %union.rec* %552, %union.rec** %567, align 8
  %568 = load %union.rec*, %union.rec** @zz_hold, align 8
  %569 = bitcast %union.rec* %568 to %struct.word_type*
  %570 = getelementptr inbounds %struct.word_type, %struct.word_type* %569, i32 0, i32 0
  %571 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %570, i32 0, i64 0
  %572 = getelementptr inbounds %struct.LIST, %struct.LIST* %571, i32 0, i32 0
  store %union.rec* %552, %union.rec** %572, align 8
  store %union.rec* %552, %union.rec** %z, align 8
  %573 = load %union.rec*, %union.rec** %z, align 8
  %574 = bitcast %union.rec* %573 to %struct.word_type*
  %575 = getelementptr inbounds %struct.word_type, %struct.word_type* %574, i32 0, i32 2
  %576 = bitcast %union.SECOND_UNION* %575 to %struct.anon.0*
  %577 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %576, i32 0, i32 2
  store i8 0, i8* %577, align 1
  %578 = load %union.rec*, %union.rec** %z, align 8
  %579 = bitcast %union.rec* %578 to %struct.word_type*
  %580 = getelementptr inbounds %struct.word_type, %struct.word_type* %579, i32 0, i32 2
  %581 = bitcast %union.SECOND_UNION* %580 to %struct.anon.0*
  %582 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %581, i32 0, i32 1
  store i8 0, i8* %582, align 1
  %583 = load %union.rec*, %union.rec** %z, align 8
  %584 = bitcast %union.rec* %583 to %struct.gapobj_type*
  %585 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %584, i32 0, i32 3
  %586 = bitcast %struct.GAP* %585 to i16*
  %587 = load i16, i16* %586, align 4
  %588 = and i16 %587, -129
  store i16 %588, i16* %586, align 4
  %589 = load %union.rec*, %union.rec** %z, align 8
  %590 = bitcast %union.rec* %589 to %struct.gapobj_type*
  %591 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %590, i32 0, i32 3
  %592 = bitcast %struct.GAP* %591 to i16*
  %593 = load i16, i16* %592, align 4
  %594 = and i16 %593, -257
  store i16 %594, i16* %592, align 4
  %595 = load %union.rec*, %union.rec** %z, align 8
  %596 = bitcast %union.rec* %595 to %struct.gapobj_type*
  %597 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %596, i32 0, i32 3
  %598 = bitcast %struct.GAP* %597 to i16*
  %599 = load i16, i16* %598, align 4
  %600 = and i16 %599, -513
  %601 = or i16 %600, 512
  store i16 %601, i16* %598, align 4
  %602 = load %union.rec*, %union.rec** %z, align 8
  %603 = bitcast %union.rec* %602 to %struct.gapobj_type*
  %604 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %603, i32 0, i32 3
  %605 = bitcast %struct.GAP* %604 to i16*
  %606 = load i16, i16* %605, align 4
  %607 = and i16 %606, -7169
  %608 = or i16 %607, 1024
  store i16 %608, i16* %605, align 4
  %609 = load %union.rec*, %union.rec** %z, align 8
  %610 = bitcast %union.rec* %609 to %struct.gapobj_type*
  %611 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %610, i32 0, i32 3
  %612 = bitcast %struct.GAP* %611 to i16*
  %613 = load i16, i16* %612, align 4
  %614 = and i16 %613, 8191
  %615 = or i16 %614, 16384
  store i16 %615, i16* %612, align 4
  %616 = load %union.rec*, %union.rec** %z, align 8
  %617 = bitcast %union.rec* %616 to %struct.gapobj_type*
  %618 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %617, i32 0, i32 3
  %619 = getelementptr inbounds %struct.GAP, %struct.GAP* %618, i32 0, i32 1
  store i16 0, i16* %619, align 2
  %620 = load %union.rec*, %union.rec** %y, align 8
  %621 = bitcast %union.rec* %620 to %struct.word_type*
  %622 = getelementptr inbounds %struct.word_type, %struct.word_type* %621, i32 0, i32 2
  %623 = bitcast %union.SECOND_UNION* %622 to %struct.anon.1*
  %624 = bitcast %struct.anon.1* %623 to i32*
  %625 = load i32, i32* %624, align 4
  %626 = lshr i32 %625, 29
  %627 = and i32 %626, 3
  %628 = load %union.rec*, %union.rec** %z, align 8
  %629 = bitcast %union.rec* %628 to %struct.word_type*
  %630 = getelementptr inbounds %struct.word_type, %struct.word_type* %629, i32 0, i32 2
  %631 = bitcast %union.SECOND_UNION* %630 to %struct.anon.1*
  %632 = bitcast %struct.anon.1* %631 to i32*
  %633 = load i32, i32* %632, align 4
  %634 = and i32 %627, 3
  %635 = shl i32 %634, 29
  %636 = and i32 %633, -1610612737
  %637 = or i32 %636, %635
  store i32 %637, i32* %632, align 4
  %638 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 0), align 1
  %639 = zext i8 %638 to i32
  store i32 %639, i32* @zz_size, align 4
  %640 = sext i32 %639 to i64
  %641 = icmp uge i64 %640, 265
  br i1 %641, label %642, label %645

; <label>:642                                     ; preds = %546
  %643 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %644 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %643)
  br label %670

; <label>:645                                     ; preds = %546
  %646 = load i32, i32* @zz_size, align 4
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %647
  %649 = load %union.rec*, %union.rec** %648, align 8
  %650 = icmp eq %union.rec* %649, null
  br i1 %650, label %651, label %655

; <label>:651                                     ; preds = %645
  %652 = load i32, i32* @zz_size, align 4
  %653 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %654 = call %union.rec* @GetMemory(i32 %652, %struct.FILE_POS* %653)
  store %union.rec* %654, %union.rec** @zz_hold, align 8
  br label %669

; <label>:655                                     ; preds = %645
  %656 = load i32, i32* @zz_size, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %657
  %659 = load %union.rec*, %union.rec** %658, align 8
  store %union.rec* %659, %union.rec** @zz_hold, align 8
  store %union.rec* %659, %union.rec** @zz_hold, align 8
  %660 = load %union.rec*, %union.rec** @zz_hold, align 8
  %661 = bitcast %union.rec* %660 to %struct.word_type*
  %662 = getelementptr inbounds %struct.word_type, %struct.word_type* %661, i32 0, i32 0
  %663 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %662, i32 0, i64 0
  %664 = getelementptr inbounds %struct.LIST, %struct.LIST* %663, i32 0, i32 0
  %665 = load %union.rec*, %union.rec** %664, align 8
  %666 = load i32, i32* @zz_size, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %667
  store %union.rec* %665, %union.rec** %668, align 8
  br label %669

; <label>:669                                     ; preds = %655, %651
  br label %670

; <label>:670                                     ; preds = %669, %642
  %671 = load %union.rec*, %union.rec** @zz_hold, align 8
  %672 = bitcast %union.rec* %671 to %struct.word_type*
  %673 = getelementptr inbounds %struct.word_type, %struct.word_type* %672, i32 0, i32 1
  %674 = bitcast %union.FIRST_UNION* %673 to %struct.anon*
  %675 = getelementptr inbounds %struct.anon, %struct.anon* %674, i32 0, i32 0
  store i8 0, i8* %675, align 1
  %676 = load %union.rec*, %union.rec** @zz_hold, align 8
  %677 = load %union.rec*, %union.rec** @zz_hold, align 8
  %678 = bitcast %union.rec* %677 to %struct.word_type*
  %679 = getelementptr inbounds %struct.word_type, %struct.word_type* %678, i32 0, i32 0
  %680 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %679, i32 0, i64 1
  %681 = getelementptr inbounds %struct.LIST, %struct.LIST* %680, i32 0, i32 1
  store %union.rec* %676, %union.rec** %681, align 8
  %682 = load %union.rec*, %union.rec** @zz_hold, align 8
  %683 = bitcast %union.rec* %682 to %struct.word_type*
  %684 = getelementptr inbounds %struct.word_type, %struct.word_type* %683, i32 0, i32 0
  %685 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %684, i32 0, i64 1
  %686 = getelementptr inbounds %struct.LIST, %struct.LIST* %685, i32 0, i32 0
  store %union.rec* %676, %union.rec** %686, align 8
  %687 = load %union.rec*, %union.rec** @zz_hold, align 8
  %688 = bitcast %union.rec* %687 to %struct.word_type*
  %689 = getelementptr inbounds %struct.word_type, %struct.word_type* %688, i32 0, i32 0
  %690 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %689, i32 0, i64 0
  %691 = getelementptr inbounds %struct.LIST, %struct.LIST* %690, i32 0, i32 1
  store %union.rec* %676, %union.rec** %691, align 8
  %692 = load %union.rec*, %union.rec** @zz_hold, align 8
  %693 = bitcast %union.rec* %692 to %struct.word_type*
  %694 = getelementptr inbounds %struct.word_type, %struct.word_type* %693, i32 0, i32 0
  %695 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %694, i32 0, i64 0
  %696 = getelementptr inbounds %struct.LIST, %struct.LIST* %695, i32 0, i32 0
  store %union.rec* %676, %union.rec** %696, align 8
  store %union.rec* %676, %union.rec** @xx_link, align 8
  %697 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %697, %union.rec** @zz_res, align 8
  %698 = load %union.rec*, %union.rec** %link, align 8
  %699 = bitcast %union.rec* %698 to %struct.word_type*
  %700 = getelementptr inbounds %struct.word_type, %struct.word_type* %699, i32 0, i32 0
  %701 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %700, i32 0, i64 0
  %702 = getelementptr inbounds %struct.LIST, %struct.LIST* %701, i32 0, i32 1
  %703 = load %union.rec*, %union.rec** %702, align 8
  store %union.rec* %703, %union.rec** @zz_hold, align 8
  %704 = load %union.rec*, %union.rec** @zz_hold, align 8
  %705 = icmp eq %union.rec* %704, null
  br i1 %705, label %706, label %708

; <label>:706                                     ; preds = %670
  %707 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %756

; <label>:708                                     ; preds = %670
  %709 = load %union.rec*, %union.rec** @zz_res, align 8
  %710 = icmp eq %union.rec* %709, null
  br i1 %710, label %711, label %713

; <label>:711                                     ; preds = %708
  %712 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %754

; <label>:713                                     ; preds = %708
  %714 = load %union.rec*, %union.rec** @zz_hold, align 8
  %715 = bitcast %union.rec* %714 to %struct.word_type*
  %716 = getelementptr inbounds %struct.word_type, %struct.word_type* %715, i32 0, i32 0
  %717 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %716, i32 0, i64 0
  %718 = getelementptr inbounds %struct.LIST, %struct.LIST* %717, i32 0, i32 0
  %719 = load %union.rec*, %union.rec** %718, align 8
  store %union.rec* %719, %union.rec** @zz_tmp, align 8
  %720 = load %union.rec*, %union.rec** @zz_res, align 8
  %721 = bitcast %union.rec* %720 to %struct.word_type*
  %722 = getelementptr inbounds %struct.word_type, %struct.word_type* %721, i32 0, i32 0
  %723 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %722, i32 0, i64 0
  %724 = getelementptr inbounds %struct.LIST, %struct.LIST* %723, i32 0, i32 0
  %725 = load %union.rec*, %union.rec** %724, align 8
  %726 = load %union.rec*, %union.rec** @zz_hold, align 8
  %727 = bitcast %union.rec* %726 to %struct.word_type*
  %728 = getelementptr inbounds %struct.word_type, %struct.word_type* %727, i32 0, i32 0
  %729 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %728, i32 0, i64 0
  %730 = getelementptr inbounds %struct.LIST, %struct.LIST* %729, i32 0, i32 0
  store %union.rec* %725, %union.rec** %730, align 8
  %731 = load %union.rec*, %union.rec** @zz_hold, align 8
  %732 = load %union.rec*, %union.rec** @zz_res, align 8
  %733 = bitcast %union.rec* %732 to %struct.word_type*
  %734 = getelementptr inbounds %struct.word_type, %struct.word_type* %733, i32 0, i32 0
  %735 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %734, i32 0, i64 0
  %736 = getelementptr inbounds %struct.LIST, %struct.LIST* %735, i32 0, i32 0
  %737 = load %union.rec*, %union.rec** %736, align 8
  %738 = bitcast %union.rec* %737 to %struct.word_type*
  %739 = getelementptr inbounds %struct.word_type, %struct.word_type* %738, i32 0, i32 0
  %740 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %739, i32 0, i64 0
  %741 = getelementptr inbounds %struct.LIST, %struct.LIST* %740, i32 0, i32 1
  store %union.rec* %731, %union.rec** %741, align 8
  %742 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %743 = load %union.rec*, %union.rec** @zz_res, align 8
  %744 = bitcast %union.rec* %743 to %struct.word_type*
  %745 = getelementptr inbounds %struct.word_type, %struct.word_type* %744, i32 0, i32 0
  %746 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %745, i32 0, i64 0
  %747 = getelementptr inbounds %struct.LIST, %struct.LIST* %746, i32 0, i32 0
  store %union.rec* %742, %union.rec** %747, align 8
  %748 = load %union.rec*, %union.rec** @zz_res, align 8
  %749 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %750 = bitcast %union.rec* %749 to %struct.word_type*
  %751 = getelementptr inbounds %struct.word_type, %struct.word_type* %750, i32 0, i32 0
  %752 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %751, i32 0, i64 0
  %753 = getelementptr inbounds %struct.LIST, %struct.LIST* %752, i32 0, i32 1
  store %union.rec* %748, %union.rec** %753, align 8
  br label %754

; <label>:754                                     ; preds = %713, %711
  %755 = phi %union.rec* [ %712, %711 ], [ %748, %713 ]
  br label %756

; <label>:756                                     ; preds = %754, %706
  %757 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %757, %union.rec** @zz_res, align 8
  %758 = load %union.rec*, %union.rec** %z, align 8
  store %union.rec* %758, %union.rec** @zz_hold, align 8
  %759 = load %union.rec*, %union.rec** @zz_hold, align 8
  %760 = icmp eq %union.rec* %759, null
  br i1 %760, label %761, label %763

; <label>:761                                     ; preds = %756
  %762 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %811

; <label>:763                                     ; preds = %756
  %764 = load %union.rec*, %union.rec** @zz_res, align 8
  %765 = icmp eq %union.rec* %764, null
  br i1 %765, label %766, label %768

; <label>:766                                     ; preds = %763
  %767 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %809

; <label>:768                                     ; preds = %763
  %769 = load %union.rec*, %union.rec** @zz_hold, align 8
  %770 = bitcast %union.rec* %769 to %struct.word_type*
  %771 = getelementptr inbounds %struct.word_type, %struct.word_type* %770, i32 0, i32 0
  %772 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %771, i32 0, i64 1
  %773 = getelementptr inbounds %struct.LIST, %struct.LIST* %772, i32 0, i32 0
  %774 = load %union.rec*, %union.rec** %773, align 8
  store %union.rec* %774, %union.rec** @zz_tmp, align 8
  %775 = load %union.rec*, %union.rec** @zz_res, align 8
  %776 = bitcast %union.rec* %775 to %struct.word_type*
  %777 = getelementptr inbounds %struct.word_type, %struct.word_type* %776, i32 0, i32 0
  %778 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %777, i32 0, i64 1
  %779 = getelementptr inbounds %struct.LIST, %struct.LIST* %778, i32 0, i32 0
  %780 = load %union.rec*, %union.rec** %779, align 8
  %781 = load %union.rec*, %union.rec** @zz_hold, align 8
  %782 = bitcast %union.rec* %781 to %struct.word_type*
  %783 = getelementptr inbounds %struct.word_type, %struct.word_type* %782, i32 0, i32 0
  %784 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %783, i32 0, i64 1
  %785 = getelementptr inbounds %struct.LIST, %struct.LIST* %784, i32 0, i32 0
  store %union.rec* %780, %union.rec** %785, align 8
  %786 = load %union.rec*, %union.rec** @zz_hold, align 8
  %787 = load %union.rec*, %union.rec** @zz_res, align 8
  %788 = bitcast %union.rec* %787 to %struct.word_type*
  %789 = getelementptr inbounds %struct.word_type, %struct.word_type* %788, i32 0, i32 0
  %790 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %789, i32 0, i64 1
  %791 = getelementptr inbounds %struct.LIST, %struct.LIST* %790, i32 0, i32 0
  %792 = load %union.rec*, %union.rec** %791, align 8
  %793 = bitcast %union.rec* %792 to %struct.word_type*
  %794 = getelementptr inbounds %struct.word_type, %struct.word_type* %793, i32 0, i32 0
  %795 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %794, i32 0, i64 1
  %796 = getelementptr inbounds %struct.LIST, %struct.LIST* %795, i32 0, i32 1
  store %union.rec* %786, %union.rec** %796, align 8
  %797 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %798 = load %union.rec*, %union.rec** @zz_res, align 8
  %799 = bitcast %union.rec* %798 to %struct.word_type*
  %800 = getelementptr inbounds %struct.word_type, %struct.word_type* %799, i32 0, i32 0
  %801 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %800, i32 0, i64 1
  %802 = getelementptr inbounds %struct.LIST, %struct.LIST* %801, i32 0, i32 0
  store %union.rec* %797, %union.rec** %802, align 8
  %803 = load %union.rec*, %union.rec** @zz_res, align 8
  %804 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %805 = bitcast %union.rec* %804 to %struct.word_type*
  %806 = getelementptr inbounds %struct.word_type, %struct.word_type* %805, i32 0, i32 0
  %807 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %806, i32 0, i64 1
  %808 = getelementptr inbounds %struct.LIST, %struct.LIST* %807, i32 0, i32 1
  store %union.rec* %803, %union.rec** %808, align 8
  br label %809

; <label>:809                                     ; preds = %768, %766
  %810 = phi %union.rec* [ %767, %766 ], [ %803, %768 ]
  br label %811

; <label>:811                                     ; preds = %809, %761
  %812 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 0), align 1
  %813 = zext i8 %812 to i32
  store i32 %813, i32* @zz_size, align 4
  %814 = sext i32 %813 to i64
  %815 = icmp uge i64 %814, 265
  br i1 %815, label %816, label %819

; <label>:816                                     ; preds = %811
  %817 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %818 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %817)
  br label %844

; <label>:819                                     ; preds = %811
  %820 = load i32, i32* @zz_size, align 4
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %821
  %823 = load %union.rec*, %union.rec** %822, align 8
  %824 = icmp eq %union.rec* %823, null
  br i1 %824, label %825, label %829

; <label>:825                                     ; preds = %819
  %826 = load i32, i32* @zz_size, align 4
  %827 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %828 = call %union.rec* @GetMemory(i32 %826, %struct.FILE_POS* %827)
  store %union.rec* %828, %union.rec** @zz_hold, align 8
  br label %843

; <label>:829                                     ; preds = %819
  %830 = load i32, i32* @zz_size, align 4
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %831
  %833 = load %union.rec*, %union.rec** %832, align 8
  store %union.rec* %833, %union.rec** @zz_hold, align 8
  store %union.rec* %833, %union.rec** @zz_hold, align 8
  %834 = load %union.rec*, %union.rec** @zz_hold, align 8
  %835 = bitcast %union.rec* %834 to %struct.word_type*
  %836 = getelementptr inbounds %struct.word_type, %struct.word_type* %835, i32 0, i32 0
  %837 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %836, i32 0, i64 0
  %838 = getelementptr inbounds %struct.LIST, %struct.LIST* %837, i32 0, i32 0
  %839 = load %union.rec*, %union.rec** %838, align 8
  %840 = load i32, i32* @zz_size, align 4
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %841
  store %union.rec* %839, %union.rec** %842, align 8
  br label %843

; <label>:843                                     ; preds = %829, %825
  br label %844

; <label>:844                                     ; preds = %843, %816
  %845 = load %union.rec*, %union.rec** @zz_hold, align 8
  %846 = bitcast %union.rec* %845 to %struct.word_type*
  %847 = getelementptr inbounds %struct.word_type, %struct.word_type* %846, i32 0, i32 1
  %848 = bitcast %union.FIRST_UNION* %847 to %struct.anon*
  %849 = getelementptr inbounds %struct.anon, %struct.anon* %848, i32 0, i32 0
  store i8 0, i8* %849, align 1
  %850 = load %union.rec*, %union.rec** @zz_hold, align 8
  %851 = load %union.rec*, %union.rec** @zz_hold, align 8
  %852 = bitcast %union.rec* %851 to %struct.word_type*
  %853 = getelementptr inbounds %struct.word_type, %struct.word_type* %852, i32 0, i32 0
  %854 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %853, i32 0, i64 1
  %855 = getelementptr inbounds %struct.LIST, %struct.LIST* %854, i32 0, i32 1
  store %union.rec* %850, %union.rec** %855, align 8
  %856 = load %union.rec*, %union.rec** @zz_hold, align 8
  %857 = bitcast %union.rec* %856 to %struct.word_type*
  %858 = getelementptr inbounds %struct.word_type, %struct.word_type* %857, i32 0, i32 0
  %859 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %858, i32 0, i64 1
  %860 = getelementptr inbounds %struct.LIST, %struct.LIST* %859, i32 0, i32 0
  store %union.rec* %850, %union.rec** %860, align 8
  %861 = load %union.rec*, %union.rec** @zz_hold, align 8
  %862 = bitcast %union.rec* %861 to %struct.word_type*
  %863 = getelementptr inbounds %struct.word_type, %struct.word_type* %862, i32 0, i32 0
  %864 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %863, i32 0, i64 0
  %865 = getelementptr inbounds %struct.LIST, %struct.LIST* %864, i32 0, i32 1
  store %union.rec* %850, %union.rec** %865, align 8
  %866 = load %union.rec*, %union.rec** @zz_hold, align 8
  %867 = bitcast %union.rec* %866 to %struct.word_type*
  %868 = getelementptr inbounds %struct.word_type, %struct.word_type* %867, i32 0, i32 0
  %869 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %868, i32 0, i64 0
  %870 = getelementptr inbounds %struct.LIST, %struct.LIST* %869, i32 0, i32 0
  store %union.rec* %850, %union.rec** %870, align 8
  store %union.rec* %850, %union.rec** @xx_link, align 8
  %871 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %871, %union.rec** @zz_res, align 8
  %872 = load %union.rec*, %union.rec** %z, align 8
  store %union.rec* %872, %union.rec** @zz_hold, align 8
  %873 = load %union.rec*, %union.rec** @zz_hold, align 8
  %874 = icmp eq %union.rec* %873, null
  br i1 %874, label %875, label %877

; <label>:875                                     ; preds = %844
  %876 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %925

; <label>:877                                     ; preds = %844
  %878 = load %union.rec*, %union.rec** @zz_res, align 8
  %879 = icmp eq %union.rec* %878, null
  br i1 %879, label %880, label %882

; <label>:880                                     ; preds = %877
  %881 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %923

; <label>:882                                     ; preds = %877
  %883 = load %union.rec*, %union.rec** @zz_hold, align 8
  %884 = bitcast %union.rec* %883 to %struct.word_type*
  %885 = getelementptr inbounds %struct.word_type, %struct.word_type* %884, i32 0, i32 0
  %886 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %885, i32 0, i64 0
  %887 = getelementptr inbounds %struct.LIST, %struct.LIST* %886, i32 0, i32 0
  %888 = load %union.rec*, %union.rec** %887, align 8
  store %union.rec* %888, %union.rec** @zz_tmp, align 8
  %889 = load %union.rec*, %union.rec** @zz_res, align 8
  %890 = bitcast %union.rec* %889 to %struct.word_type*
  %891 = getelementptr inbounds %struct.word_type, %struct.word_type* %890, i32 0, i32 0
  %892 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %891, i32 0, i64 0
  %893 = getelementptr inbounds %struct.LIST, %struct.LIST* %892, i32 0, i32 0
  %894 = load %union.rec*, %union.rec** %893, align 8
  %895 = load %union.rec*, %union.rec** @zz_hold, align 8
  %896 = bitcast %union.rec* %895 to %struct.word_type*
  %897 = getelementptr inbounds %struct.word_type, %struct.word_type* %896, i32 0, i32 0
  %898 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %897, i32 0, i64 0
  %899 = getelementptr inbounds %struct.LIST, %struct.LIST* %898, i32 0, i32 0
  store %union.rec* %894, %union.rec** %899, align 8
  %900 = load %union.rec*, %union.rec** @zz_hold, align 8
  %901 = load %union.rec*, %union.rec** @zz_res, align 8
  %902 = bitcast %union.rec* %901 to %struct.word_type*
  %903 = getelementptr inbounds %struct.word_type, %struct.word_type* %902, i32 0, i32 0
  %904 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %903, i32 0, i64 0
  %905 = getelementptr inbounds %struct.LIST, %struct.LIST* %904, i32 0, i32 0
  %906 = load %union.rec*, %union.rec** %905, align 8
  %907 = bitcast %union.rec* %906 to %struct.word_type*
  %908 = getelementptr inbounds %struct.word_type, %struct.word_type* %907, i32 0, i32 0
  %909 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %908, i32 0, i64 0
  %910 = getelementptr inbounds %struct.LIST, %struct.LIST* %909, i32 0, i32 1
  store %union.rec* %900, %union.rec** %910, align 8
  %911 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %912 = load %union.rec*, %union.rec** @zz_res, align 8
  %913 = bitcast %union.rec* %912 to %struct.word_type*
  %914 = getelementptr inbounds %struct.word_type, %struct.word_type* %913, i32 0, i32 0
  %915 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %914, i32 0, i64 0
  %916 = getelementptr inbounds %struct.LIST, %struct.LIST* %915, i32 0, i32 0
  store %union.rec* %911, %union.rec** %916, align 8
  %917 = load %union.rec*, %union.rec** @zz_res, align 8
  %918 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %919 = bitcast %union.rec* %918 to %struct.word_type*
  %920 = getelementptr inbounds %struct.word_type, %struct.word_type* %919, i32 0, i32 0
  %921 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %920, i32 0, i64 0
  %922 = getelementptr inbounds %struct.LIST, %struct.LIST* %921, i32 0, i32 1
  store %union.rec* %917, %union.rec** %922, align 8
  br label %923

; <label>:923                                     ; preds = %882, %880
  %924 = phi %union.rec* [ %881, %880 ], [ %917, %882 ]
  br label %925

; <label>:925                                     ; preds = %923, %875
  %926 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %926, %union.rec** @zz_res, align 8
  %927 = load %union.rec*, %union.rec** %y, align 8
  %928 = bitcast %union.rec* %927 to %struct.word_type*
  %929 = getelementptr inbounds %struct.word_type, %struct.word_type* %928, i32 0, i32 1
  %930 = bitcast %union.FIRST_UNION* %929 to %struct.FILE_POS*
  %931 = call %union.rec* @MakeWord(i32 11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), %struct.FILE_POS* %930)
  store %union.rec* %931, %union.rec** @zz_hold, align 8
  %932 = load %union.rec*, %union.rec** @zz_hold, align 8
  %933 = icmp eq %union.rec* %932, null
  br i1 %933, label %934, label %936

; <label>:934                                     ; preds = %925
  %935 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %984

; <label>:936                                     ; preds = %925
  %937 = load %union.rec*, %union.rec** @zz_res, align 8
  %938 = icmp eq %union.rec* %937, null
  br i1 %938, label %939, label %941

; <label>:939                                     ; preds = %936
  %940 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %982

; <label>:941                                     ; preds = %936
  %942 = load %union.rec*, %union.rec** @zz_hold, align 8
  %943 = bitcast %union.rec* %942 to %struct.word_type*
  %944 = getelementptr inbounds %struct.word_type, %struct.word_type* %943, i32 0, i32 0
  %945 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %944, i32 0, i64 1
  %946 = getelementptr inbounds %struct.LIST, %struct.LIST* %945, i32 0, i32 0
  %947 = load %union.rec*, %union.rec** %946, align 8
  store %union.rec* %947, %union.rec** @zz_tmp, align 8
  %948 = load %union.rec*, %union.rec** @zz_res, align 8
  %949 = bitcast %union.rec* %948 to %struct.word_type*
  %950 = getelementptr inbounds %struct.word_type, %struct.word_type* %949, i32 0, i32 0
  %951 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %950, i32 0, i64 1
  %952 = getelementptr inbounds %struct.LIST, %struct.LIST* %951, i32 0, i32 0
  %953 = load %union.rec*, %union.rec** %952, align 8
  %954 = load %union.rec*, %union.rec** @zz_hold, align 8
  %955 = bitcast %union.rec* %954 to %struct.word_type*
  %956 = getelementptr inbounds %struct.word_type, %struct.word_type* %955, i32 0, i32 0
  %957 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %956, i32 0, i64 1
  %958 = getelementptr inbounds %struct.LIST, %struct.LIST* %957, i32 0, i32 0
  store %union.rec* %953, %union.rec** %958, align 8
  %959 = load %union.rec*, %union.rec** @zz_hold, align 8
  %960 = load %union.rec*, %union.rec** @zz_res, align 8
  %961 = bitcast %union.rec* %960 to %struct.word_type*
  %962 = getelementptr inbounds %struct.word_type, %struct.word_type* %961, i32 0, i32 0
  %963 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %962, i32 0, i64 1
  %964 = getelementptr inbounds %struct.LIST, %struct.LIST* %963, i32 0, i32 0
  %965 = load %union.rec*, %union.rec** %964, align 8
  %966 = bitcast %union.rec* %965 to %struct.word_type*
  %967 = getelementptr inbounds %struct.word_type, %struct.word_type* %966, i32 0, i32 0
  %968 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %967, i32 0, i64 1
  %969 = getelementptr inbounds %struct.LIST, %struct.LIST* %968, i32 0, i32 1
  store %union.rec* %959, %union.rec** %969, align 8
  %970 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %971 = load %union.rec*, %union.rec** @zz_res, align 8
  %972 = bitcast %union.rec* %971 to %struct.word_type*
  %973 = getelementptr inbounds %struct.word_type, %struct.word_type* %972, i32 0, i32 0
  %974 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %973, i32 0, i64 1
  %975 = getelementptr inbounds %struct.LIST, %struct.LIST* %974, i32 0, i32 0
  store %union.rec* %970, %union.rec** %975, align 8
  %976 = load %union.rec*, %union.rec** @zz_res, align 8
  %977 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %978 = bitcast %union.rec* %977 to %struct.word_type*
  %979 = getelementptr inbounds %struct.word_type, %struct.word_type* %978, i32 0, i32 0
  %980 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %979, i32 0, i64 1
  %981 = getelementptr inbounds %struct.LIST, %struct.LIST* %980, i32 0, i32 1
  store %union.rec* %976, %union.rec** %981, align 8
  br label %982

; <label>:982                                     ; preds = %941, %939
  %983 = phi %union.rec* [ %940, %939 ], [ %976, %941 ]
  br label %984

; <label>:984                                     ; preds = %982, %934
  %985 = load i32, i32* %stop, align 4
  %986 = add nsw i32 %985, 1
  %987 = sext i32 %986 to i64
  %988 = load i8*, i8** %key, align 8
  %989 = getelementptr inbounds i8, i8* %988, i64 %987
  store i8 0, i8* %989, align 1
  %990 = load %union.rec*, %union.rec** %y, align 8
  call void @FontWordSize(%union.rec* %990)
  %991 = load %union.rec*, %union.rec** %link, align 8
  %992 = bitcast %union.rec* %991 to %struct.word_type*
  %993 = getelementptr inbounds %struct.word_type, %struct.word_type* %992, i32 0, i32 0
  %994 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %993, i32 0, i64 0
  %995 = getelementptr inbounds %struct.LIST, %struct.LIST* %994, i32 0, i32 1
  %996 = load %union.rec*, %union.rec** %995, align 8
  store %union.rec* %996, %union.rec** %link, align 8
  br label %2220

; <label>:997                                     ; preds = %199
  %998 = load i32, i32* %stop, align 4
  %999 = load i32, i32* %start, align 4
  %1000 = sub nsw i32 %998, %999
  %1001 = icmp slt i32 %1000, 5
  br i1 %1001, label %1002, label %1003

; <label>:1002                                    ; preds = %997
  br label %2220

; <label>:1003                                    ; preds = %997
  %1004 = load i32, i32* %stop, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = load i8*, i8** %key, align 8
  %1007 = getelementptr inbounds i8, i8* %1006, i64 %1005
  %1008 = load i8, i8* %1007, align 1
  %1009 = zext i8 %1008 to i32
  %1010 = icmp ne i32 %1009, 0
  br i1 %1010, label %1011, label %1024

; <label>:1011                                    ; preds = %1003
  %1012 = load i32, i32* %stop, align 4
  %1013 = sext i32 %1012 to i64
  %1014 = load i8*, i8** %key, align 8
  %1015 = getelementptr inbounds i8, i8* %1014, i64 %1013
  %1016 = load i8, i8* %1015, align 1
  %1017 = zext i8 %1016 to i64
  %1018 = load i8*, i8** %class, align 8
  %1019 = getelementptr inbounds i8, i8* %1018, i64 %1017
  %1020 = load i8, i8* %1019, align 1
  %1021 = zext i8 %1020 to i32
  %1022 = icmp eq i32 %1021, 0
  br i1 %1022, label %1023, label %1024

; <label>:1023                                    ; preds = %1011
  br label %2220

; <label>:1024                                    ; preds = %1011, %1003
  %1025 = getelementptr inbounds [2050 x i8], [2050 x i8]* %str, i32 0, i64 0
  store i8 1, i8* %1025, align 1
  %1026 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i64 0
  store i8 48, i8* %1026, align 1
  store i32 0, i32* %i, align 4
  br label %1027

; <label>:1027                                    ; preds = %1053, %1024
  %1028 = load i32, i32* %i, align 4
  %1029 = load i32, i32* %stop, align 4
  %1030 = load i32, i32* %start, align 4
  %1031 = sub nsw i32 %1029, %1030
  %1032 = icmp slt i32 %1028, %1031
  br i1 %1032, label %1033, label %1056

; <label>:1033                                    ; preds = %1027
  %1034 = load i32, i32* %start, align 4
  %1035 = load i32, i32* %i, align 4
  %1036 = add nsw i32 %1034, %1035
  %1037 = sext i32 %1036 to i64
  %1038 = load i8*, i8** %key, align 8
  %1039 = getelementptr inbounds i8, i8* %1038, i64 %1037
  %1040 = load i8, i8* %1039, align 1
  %1041 = zext i8 %1040 to i64
  %1042 = load i8*, i8** %class, align 8
  %1043 = getelementptr inbounds i8, i8* %1042, i64 %1041
  %1044 = load i8, i8* %1043, align 1
  %1045 = load i32, i32* %i, align 4
  %1046 = add nsw i32 %1045, 1
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds [2050 x i8], [2050 x i8]* %str, i32 0, i64 %1047
  store i8 %1044, i8* %1048, align 1
  %1049 = load i32, i32* %i, align 4
  %1050 = add nsw i32 %1049, 1
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i64 %1051
  store i8 48, i8* %1052, align 1
  br label %1053

; <label>:1053                                    ; preds = %1033
  %1054 = load i32, i32* %i, align 4
  %1055 = add nsw i32 %1054, 1
  store i32 %1055, i32* %i, align 4
  br label %1027

; <label>:1056                                    ; preds = %1027
  %1057 = load i32, i32* %i, align 4
  %1058 = add nsw i32 %1057, 1
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds [2050 x i8], [2050 x i8]* %str, i32 0, i64 %1059
  store i8 1, i8* %1060, align 1
  %1061 = load i32, i32* %i, align 4
  %1062 = add nsw i32 %1061, 1
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i64 %1063
  store i8 48, i8* %1064, align 1
  %1065 = load i32, i32* %i, align 4
  %1066 = add nsw i32 %1065, 2
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds [2050 x i8], [2050 x i8]* %str, i32 0, i64 %1067
  store i8 0, i8* %1068, align 1
  %1069 = load i32, i32* %i, align 4
  %1070 = add nsw i32 %1069, 2
  %1071 = sext i32 %1070 to i64
  %1072 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i64 %1071
  store i8 48, i8* %1072, align 1
  %1073 = load i32, i32* %i, align 4
  %1074 = add nsw i32 %1073, 3
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i64 %1075
  store i8 0, i8* %1076, align 1
  %1077 = getelementptr inbounds [2050 x i8], [2050 x i8]* %str, i32 0, i32 0
  store i8* %1077, i8** %ss, align 8
  br label %1078

; <label>:1078                                    ; preds = %1298, %1056
  store i32 0, i32* %curr_node, align 4
  %1079 = load i8*, i8** %ss, align 8
  store i8* %1079, i8** %s, align 8
  br label %1080

; <label>:1080                                    ; preds = %1292, %1078
  %1081 = load i32, i32* %curr_node, align 4
  %1082 = sext i32 %1081 to i64
  %1083 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1084 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1083, i32 0, i32 3
  %1085 = load i16*, i16** %1084, align 8
  %1086 = getelementptr inbounds i16, i16* %1085, i64 %1082
  %1087 = load i16, i16* %1086, align 2
  %1088 = sext i16 %1087 to i32
  store i32 %1088, i32* %pos, align 4
  %1089 = load i32, i32* %pos, align 4
  %1090 = icmp slt i32 %1089, 0
  br i1 %1090, label %1091, label %1169

; <label>:1091                                    ; preds = %1080
  %1092 = getelementptr inbounds [2051 x i8], [2051 x i8]* %val, i32 0, i32 0
  store i8* %1092, i8** %q, align 8
  %1093 = load i32, i32* %pos, align 4
  %1094 = sub nsw i32 0, %1093
  %1095 = sext i32 %1094 to i64
  %1096 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1097 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1096, i32 0, i32 6
  %1098 = load i8*, i8** %1097, align 8
  %1099 = getelementptr inbounds i8, i8* %1098, i64 %1095
  store i8* %1099, i8** %p1, align 8
  br label %1100

; <label>:1100                                    ; preds = %1133, %1091
  %1101 = load i8*, i8** %p1, align 8
  %1102 = load i8, i8* %1101, align 1
  %1103 = zext i8 %1102 to i32
  %1104 = icmp ne i32 %1103, 0
  br i1 %1104, label %1105, label %1136

; <label>:1105                                    ; preds = %1100
  %1106 = load i8*, i8** %p1, align 8
  %1107 = load i8, i8* %1106, align 1
  %1108 = zext i8 %1107 to i32
  %1109 = ashr i32 %1108, 4
  store i32 %1109, i32* %skip, align 4
  %1110 = load i8*, i8** %p1, align 8
  %1111 = load i8, i8* %1110, align 1
  %1112 = zext i8 %1111 to i32
  %1113 = and i32 %1112, 15
  %1114 = trunc i32 %1113 to i8
  store i8 %1114, i8* %xval, align 1
  store i32 0, i32* %i2, align 4
  br label %1115

; <label>:1115                                    ; preds = %1122, %1105
  %1116 = load i32, i32* %i2, align 4
  %1117 = load i32, i32* %skip, align 4
  %1118 = icmp slt i32 %1116, %1117
  br i1 %1118, label %1119, label %1125

; <label>:1119                                    ; preds = %1115
  %1120 = load i8*, i8** %q, align 8
  %1121 = getelementptr inbounds i8, i8* %1120, i32 1
  store i8* %1121, i8** %q, align 8
  store i8 48, i8* %1120, align 1
  br label %1122

; <label>:1122                                    ; preds = %1119
  %1123 = load i32, i32* %i2, align 4
  %1124 = add nsw i32 %1123, 1
  store i32 %1124, i32* %i2, align 4
  br label %1115

; <label>:1125                                    ; preds = %1115
  %1126 = load i8, i8* %xval, align 1
  %1127 = zext i8 %1126 to i32
  %1128 = add nsw i32 %1127, 48
  %1129 = sub nsw i32 %1128, 2
  %1130 = trunc i32 %1129 to i8
  %1131 = load i8*, i8** %q, align 8
  %1132 = getelementptr inbounds i8, i8* %1131, i32 1
  store i8* %1132, i8** %q, align 8
  store i8 %1130, i8* %1131, align 1
  br label %1133

; <label>:1133                                    ; preds = %1125
  %1134 = load i8*, i8** %p1, align 8
  %1135 = getelementptr inbounds i8, i8* %1134, i32 1
  store i8* %1135, i8** %p1, align 8
  br label %1100

; <label>:1136                                    ; preds = %1100
  %1137 = load i8*, i8** %q, align 8
  %1138 = getelementptr inbounds i8, i8* %1137, i32 1
  store i8* %1138, i8** %q, align 8
  store i8 0, i8* %1137, align 1
  %1139 = getelementptr inbounds [2051 x i8], [2051 x i8]* %val, i32 0, i32 0
  store i8* %1139, i8** %p3, align 8
  %1140 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i32 0
  %1141 = load i8*, i8** %ss, align 8
  %1142 = getelementptr inbounds [2050 x i8], [2050 x i8]* %str, i32 0, i32 0
  %1143 = ptrtoint i8* %1141 to i64
  %1144 = ptrtoint i8* %1142 to i64
  %1145 = sub i64 %1143, %1144
  %1146 = getelementptr inbounds i8, i8* %1140, i64 %1145
  store i8* %1146, i8** %q4, align 8
  br label %1147

; <label>:1147                                    ; preds = %1163, %1136
  %1148 = load i8*, i8** %p3, align 8
  %1149 = load i8, i8* %1148, align 1
  %1150 = icmp ne i8 %1149, 0
  br i1 %1150, label %1151, label %1168

; <label>:1151                                    ; preds = %1147
  %1152 = load i8*, i8** %p3, align 8
  %1153 = load i8, i8* %1152, align 1
  %1154 = zext i8 %1153 to i32
  %1155 = load i8*, i8** %q4, align 8
  %1156 = load i8, i8* %1155, align 1
  %1157 = zext i8 %1156 to i32
  %1158 = icmp sgt i32 %1154, %1157
  br i1 %1158, label %1159, label %1163

; <label>:1159                                    ; preds = %1151
  %1160 = load i8*, i8** %p3, align 8
  %1161 = load i8, i8* %1160, align 1
  %1162 = load i8*, i8** %q4, align 8
  store i8 %1161, i8* %1162, align 1
  br label %1163

; <label>:1163                                    ; preds = %1159, %1151
  %1164 = load i8*, i8** %p3, align 8
  %1165 = getelementptr inbounds i8, i8* %1164, i32 1
  store i8* %1165, i8** %p3, align 8
  %1166 = load i8*, i8** %q4, align 8
  %1167 = getelementptr inbounds i8, i8* %1166, i32 1
  store i8* %1167, i8** %q4, align 8
  br label %1147

; <label>:1168                                    ; preds = %1147
  br label %1169

; <label>:1169                                    ; preds = %1168, %1080
  %1170 = load i8*, i8** %s, align 8
  %1171 = load i8, i8* %1170, align 1
  %1172 = zext i8 %1171 to i32
  %1173 = icmp eq i32 %1172, 0
  br i1 %1173, label %1174, label %1175

; <label>:1174                                    ; preds = %1169
  br label %1297

; <label>:1175                                    ; preds = %1169
  %1176 = load i32, i32* %curr_node, align 4
  %1177 = load i8*, i8** %s, align 8
  %1178 = load i8, i8* %1177, align 1
  %1179 = zext i8 %1178 to i32
  %1180 = add nsw i32 %1176, %1179
  %1181 = sext i32 %1180 to i64
  %1182 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1183 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1182, i32 0, i32 3
  %1184 = load i16*, i16** %1183, align 8
  %1185 = getelementptr inbounds i16, i16* %1184, i64 %1181
  %1186 = load i16, i16* %1185, align 2
  %1187 = sext i16 %1186 to i32
  store i32 %1187, i32* %next_node, align 4
  %1188 = load i32, i32* %next_node, align 4
  %1189 = icmp eq i32 %1188, 0
  br i1 %1189, label %1190, label %1191

; <label>:1190                                    ; preds = %1175
  br label %1297

; <label>:1191                                    ; preds = %1175
  %1192 = load i32, i32* %next_node, align 4
  %1193 = icmp slt i32 %1192, 0
  br i1 %1193, label %1194, label %1292

; <label>:1194                                    ; preds = %1191
  %1195 = load i32, i32* %next_node, align 4
  %1196 = sub nsw i32 0, %1195
  %1197 = sext i32 %1196 to i64
  %1198 = load %struct.trie_rec*, %struct.trie_rec** %T, align 8
  %1199 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %1198, i32 0, i32 6
  %1200 = load i8*, i8** %1199, align 8
  %1201 = getelementptr inbounds i8, i8* %1200, i64 %1197
  store i8* %1201, i8** %rem, align 8
  br label %1202

; <label>:1202                                    ; preds = %1281, %1194
  %1203 = load i8*, i8** %rem, align 8
  %1204 = load i8, i8* %1203, align 1
  %1205 = zext i8 %1204 to i32
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1280

; <label>:1207                                    ; preds = %1202
  %1208 = getelementptr inbounds [2051 x i8], [2051 x i8]* %val, i32 0, i32 0
  store i8* %1208, i8** %q6, align 8
  %1209 = load i8*, i8** %rem, align 8
  %1210 = getelementptr inbounds i8, i8* %1209, i64 1
  store i8* %1210, i8** %p5, align 8
  br label %1211

; <label>:1211                                    ; preds = %1244, %1207
  %1212 = load i8*, i8** %p5, align 8
  %1213 = load i8, i8* %1212, align 1
  %1214 = zext i8 %1213 to i32
  %1215 = icmp ne i32 %1214, 0
  br i1 %1215, label %1216, label %1247

; <label>:1216                                    ; preds = %1211
  %1217 = load i8*, i8** %p5, align 8
  %1218 = load i8, i8* %1217, align 1
  %1219 = zext i8 %1218 to i32
  %1220 = ashr i32 %1219, 4
  store i32 %1220, i32* %skip9, align 4
  %1221 = load i8*, i8** %p5, align 8
  %1222 = load i8, i8* %1221, align 1
  %1223 = zext i8 %1222 to i32
  %1224 = and i32 %1223, 15
  %1225 = trunc i32 %1224 to i8
  store i8 %1225, i8* %xval7, align 1
  store i32 0, i32* %i8, align 4
  br label %1226

; <label>:1226                                    ; preds = %1233, %1216
  %1227 = load i32, i32* %i8, align 4
  %1228 = load i32, i32* %skip9, align 4
  %1229 = icmp slt i32 %1227, %1228
  br i1 %1229, label %1230, label %1236

; <label>:1230                                    ; preds = %1226
  %1231 = load i8*, i8** %q6, align 8
  %1232 = getelementptr inbounds i8, i8* %1231, i32 1
  store i8* %1232, i8** %q6, align 8
  store i8 48, i8* %1231, align 1
  br label %1233

; <label>:1233                                    ; preds = %1230
  %1234 = load i32, i32* %i8, align 4
  %1235 = add nsw i32 %1234, 1
  store i32 %1235, i32* %i8, align 4
  br label %1226

; <label>:1236                                    ; preds = %1226
  %1237 = load i8, i8* %xval7, align 1
  %1238 = zext i8 %1237 to i32
  %1239 = add nsw i32 %1238, 48
  %1240 = sub nsw i32 %1239, 2
  %1241 = trunc i32 %1240 to i8
  %1242 = load i8*, i8** %q6, align 8
  %1243 = getelementptr inbounds i8, i8* %1242, i32 1
  store i8* %1243, i8** %q6, align 8
  store i8 %1241, i8* %1242, align 1
  br label %1244

; <label>:1244                                    ; preds = %1236
  %1245 = load i8*, i8** %p5, align 8
  %1246 = getelementptr inbounds i8, i8* %1245, i32 1
  store i8* %1246, i8** %p5, align 8
  br label %1211

; <label>:1247                                    ; preds = %1211
  %1248 = load i8*, i8** %q6, align 8
  %1249 = getelementptr inbounds i8, i8* %1248, i32 1
  store i8* %1249, i8** %q6, align 8
  store i8 0, i8* %1248, align 1
  %1250 = getelementptr inbounds [2051 x i8], [2051 x i8]* %val, i32 0, i32 0
  store i8* %1250, i8** %p10, align 8
  %1251 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i32 0
  %1252 = load i8*, i8** %ss, align 8
  %1253 = getelementptr inbounds [2050 x i8], [2050 x i8]* %str, i32 0, i32 0
  %1254 = ptrtoint i8* %1252 to i64
  %1255 = ptrtoint i8* %1253 to i64
  %1256 = sub i64 %1254, %1255
  %1257 = getelementptr inbounds i8, i8* %1251, i64 %1256
  store i8* %1257, i8** %q11, align 8
  br label %1258

; <label>:1258                                    ; preds = %1274, %1247
  %1259 = load i8*, i8** %p10, align 8
  %1260 = load i8, i8* %1259, align 1
  %1261 = icmp ne i8 %1260, 0
  br i1 %1261, label %1262, label %1279

; <label>:1262                                    ; preds = %1258
  %1263 = load i8*, i8** %p10, align 8
  %1264 = load i8, i8* %1263, align 1
  %1265 = zext i8 %1264 to i32
  %1266 = load i8*, i8** %q11, align 8
  %1267 = load i8, i8* %1266, align 1
  %1268 = zext i8 %1267 to i32
  %1269 = icmp sgt i32 %1265, %1268
  br i1 %1269, label %1270, label %1274

; <label>:1270                                    ; preds = %1262
  %1271 = load i8*, i8** %p10, align 8
  %1272 = load i8, i8* %1271, align 1
  %1273 = load i8*, i8** %q11, align 8
  store i8 %1272, i8* %1273, align 1
  br label %1274

; <label>:1274                                    ; preds = %1270, %1262
  %1275 = load i8*, i8** %p10, align 8
  %1276 = getelementptr inbounds i8, i8* %1275, i32 1
  store i8* %1276, i8** %p10, align 8
  %1277 = load i8*, i8** %q11, align 8
  %1278 = getelementptr inbounds i8, i8* %1277, i32 1
  store i8* %1278, i8** %q11, align 8
  br label %1258

; <label>:1279                                    ; preds = %1258
  br label %1291

; <label>:1280                                    ; preds = %1202
  br label %1281

; <label>:1281                                    ; preds = %1280
  %1282 = load i8*, i8** %s, align 8
  %1283 = getelementptr inbounds i8, i8* %1282, i32 1
  store i8* %1283, i8** %s, align 8
  %1284 = load i8, i8* %1283, align 1
  %1285 = zext i8 %1284 to i32
  %1286 = load i8*, i8** %rem, align 8
  %1287 = getelementptr inbounds i8, i8* %1286, i32 1
  store i8* %1287, i8** %rem, align 8
  %1288 = load i8, i8* %1286, align 1
  %1289 = zext i8 %1288 to i32
  %1290 = icmp eq i32 %1285, %1289
  br i1 %1290, label %1202, label %1291

; <label>:1291                                    ; preds = %1281, %1279
  br label %1297

; <label>:1292                                    ; preds = %1191
  %1293 = load i32, i32* %next_node, align 4
  %1294 = mul nsw i32 4, %1293
  store i32 %1294, i32* %curr_node, align 4
  %1295 = load i8*, i8** %s, align 8
  %1296 = getelementptr inbounds i8, i8* %1295, i32 1
  store i8* %1296, i8** %s, align 8
  br label %1080

; <label>:1297                                    ; preds = %1291, %1190, %1174
  br label %1298

; <label>:1298                                    ; preds = %1297
  %1299 = load i8*, i8** %ss, align 8
  %1300 = getelementptr inbounds i8, i8* %1299, i32 1
  store i8* %1300, i8** %ss, align 8
  %1301 = getelementptr inbounds i8, i8* %1300, i64 1
  %1302 = load i8, i8* %1301, align 1
  %1303 = zext i8 %1302 to i32
  %1304 = icmp ne i32 %1303, 1
  br i1 %1304, label %1078, label %1305

; <label>:1305                                    ; preds = %1298
  %1306 = load %union.rec*, %union.rec** %y, align 8
  %1307 = bitcast %union.rec* %1306 to %struct.word_type*
  %1308 = getelementptr inbounds %struct.word_type, %struct.word_type* %1307, i32 0, i32 2
  %1309 = bitcast %union.SECOND_UNION* %1308 to %struct.anon.1*
  %1310 = bitcast %struct.anon.1* %1309 to i32*
  %1311 = load i32, i32* %1310, align 4
  %1312 = and i32 %1311, 4095
  %1313 = zext i32 %1312 to i64
  %1314 = load %struct.font_rec*, %struct.font_rec** @finfo, align 8
  %1315 = getelementptr inbounds %struct.font_rec, %struct.font_rec* %1314, i64 %1313
  %1316 = getelementptr inbounds %struct.font_rec, %struct.font_rec* %1315, i32 0, i32 1
  %1317 = load i8*, i8** %1316, align 8
  store i8* %1317, i8** %lig, align 8
  %1318 = load i8*, i8** %key, align 8
  store i8* %1318, i8** %p, align 8
  store i32 2, i32* %i, align 4
  br label %1319

; <label>:1319                                    ; preds = %1406, %1305
  %1320 = load i8*, i8** %p, align 8
  %1321 = load i8, i8* %1320, align 1
  %1322 = zext i8 %1321 to i32
  %1323 = icmp ne i32 %1322, 0
  br i1 %1323, label %1324, label %1411

; <label>:1324                                    ; preds = %1319
  %1325 = load i8*, i8** %p, align 8
  %1326 = load i8, i8* %1325, align 1
  %1327 = zext i8 %1326 to i64
  %1328 = load i8*, i8** %lig, align 8
  %1329 = getelementptr inbounds i8, i8* %1328, i64 %1327
  %1330 = load i8, i8* %1329, align 1
  %1331 = zext i8 %1330 to i32
  %1332 = icmp sgt i32 %1331, 1
  br i1 %1332, label %1333, label %1405

; <label>:1333                                    ; preds = %1324
  %1334 = load i8*, i8** %p, align 8
  %1335 = load i8, i8* %1334, align 1
  %1336 = zext i8 %1335 to i64
  %1337 = load i8*, i8** %lig, align 8
  %1338 = getelementptr inbounds i8, i8* %1337, i64 %1336
  %1339 = load i8, i8* %1338, align 1
  %1340 = zext i8 %1339 to i32
  %1341 = add nsw i32 %1340, 256
  %1342 = sext i32 %1341 to i64
  %1343 = load i8*, i8** %lig, align 8
  %1344 = getelementptr inbounds i8, i8* %1343, i64 %1342
  store i8* %1344, i8** %a, align 8
  br label %1345

; <label>:1345                                    ; preds = %1403, %1333
  %1346 = load i8*, i8** %a, align 8
  %1347 = getelementptr inbounds i8, i8* %1346, i32 1
  store i8* %1347, i8** %a, align 8
  %1348 = load i8, i8* %1346, align 1
  %1349 = zext i8 %1348 to i32
  %1350 = load i8*, i8** %p, align 8
  %1351 = load i8, i8* %1350, align 1
  %1352 = zext i8 %1351 to i32
  %1353 = icmp eq i32 %1349, %1352
  br i1 %1353, label %1354, label %1404

; <label>:1354                                    ; preds = %1345
  %1355 = load i8*, i8** %p, align 8
  %1356 = getelementptr inbounds i8, i8* %1355, i64 1
  store i8* %1356, i8** %b, align 8
  br label %1357

; <label>:1357                                    ; preds = %1378, %1354
  %1358 = load i8*, i8** %a, align 8
  %1359 = load i8, i8* %1358, align 1
  %1360 = zext i8 %1359 to i32
  %1361 = load i8*, i8** %b, align 8
  %1362 = load i8, i8* %1361, align 1
  %1363 = zext i8 %1362 to i32
  %1364 = icmp eq i32 %1360, %1363
  br i1 %1364, label %1365, label %1376

; <label>:1365                                    ; preds = %1357
  %1366 = load i8*, i8** %a, align 8
  %1367 = getelementptr inbounds i8, i8* %1366, i64 1
  %1368 = load i8, i8* %1367, align 1
  %1369 = zext i8 %1368 to i32
  %1370 = icmp ne i32 %1369, 0
  br i1 %1370, label %1371, label %1376

; <label>:1371                                    ; preds = %1365
  %1372 = load i8*, i8** %b, align 8
  %1373 = load i8, i8* %1372, align 1
  %1374 = zext i8 %1373 to i32
  %1375 = icmp ne i32 %1374, 0
  br label %1376

; <label>:1376                                    ; preds = %1371, %1365, %1357
  %1377 = phi i1 [ false, %1365 ], [ false, %1357 ], [ %1375, %1371 ]
  br i1 %1377, label %1378, label %1383

; <label>:1378                                    ; preds = %1376
  %1379 = load i8*, i8** %a, align 8
  %1380 = getelementptr inbounds i8, i8* %1379, i32 1
  store i8* %1380, i8** %a, align 8
  %1381 = load i8*, i8** %b, align 8
  %1382 = getelementptr inbounds i8, i8* %1381, i32 1
  store i8* %1382, i8** %b, align 8
  br label %1357

; <label>:1383                                    ; preds = %1376
  %1384 = load i8*, i8** %a, align 8
  %1385 = getelementptr inbounds i8, i8* %1384, i64 1
  %1386 = load i8, i8* %1385, align 1
  %1387 = zext i8 %1386 to i32
  %1388 = icmp eq i32 %1387, 0
  br i1 %1388, label %1389, label %1393

; <label>:1389                                    ; preds = %1383
  %1390 = load i32, i32* %i, align 4
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i64 %1391
  store i8 48, i8* %1392, align 1
  br label %1404

; <label>:1393                                    ; preds = %1383
  br label %1394

; <label>:1394                                    ; preds = %1399, %1393
  %1395 = load i8*, i8** %a, align 8
  %1396 = getelementptr inbounds i8, i8* %1395, i32 1
  store i8* %1396, i8** %a, align 8
  %1397 = load i8, i8* %1396, align 1
  %1398 = icmp ne i8 %1397, 0
  br i1 %1398, label %1399, label %1400

; <label>:1399                                    ; preds = %1394
  br label %1394

; <label>:1400                                    ; preds = %1394
  %1401 = load i8*, i8** %a, align 8
  %1402 = getelementptr inbounds i8, i8* %1401, i32 1
  store i8* %1402, i8** %a, align 8
  br label %1403

; <label>:1403                                    ; preds = %1400
  br label %1345

; <label>:1404                                    ; preds = %1389, %1345
  br label %1405

; <label>:1405                                    ; preds = %1404, %1324
  br label %1406

; <label>:1406                                    ; preds = %1405
  %1407 = load i8*, i8** %p, align 8
  %1408 = getelementptr inbounds i8, i8* %1407, i32 1
  store i8* %1408, i8** %p, align 8
  %1409 = load i32, i32* %i, align 4
  %1410 = add nsw i32 %1409, 1
  store i32 %1410, i32* %i, align 4
  br label %1319

; <label>:1411                                    ; preds = %1319
  store i32 0, i32* %hyphenated, align 4
  %1412 = load %union.rec*, %union.rec** %link, align 8
  %1413 = bitcast %union.rec* %1412 to %struct.word_type*
  %1414 = getelementptr inbounds %struct.word_type, %struct.word_type* %1413, i32 0, i32 0
  %1415 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1414, i32 0, i64 0
  %1416 = getelementptr inbounds %struct.LIST, %struct.LIST* %1415, i32 0, i32 1
  %1417 = load %union.rec*, %union.rec** %1416, align 8
  store %union.rec* %1417, %union.rec** %next_link, align 8
  %1418 = load i32, i32* %stop, align 4
  %1419 = load i32, i32* %start, align 4
  %1420 = sub nsw i32 %1418, %1419
  %1421 = sub nsw i32 %1420, 1
  store i32 %1421, i32* %i, align 4
  br label %1422

; <label>:1422                                    ; preds = %2205, %1411
  %1423 = load i32, i32* %i, align 4
  %1424 = icmp sge i32 %1423, 3
  br i1 %1424, label %1425, label %2208

; <label>:1425                                    ; preds = %1422
  %1426 = load i32, i32* %i, align 4
  %1427 = sext i32 %1426 to i64
  %1428 = getelementptr inbounds [2051 x i8], [2051 x i8]* %rate, i32 0, i64 %1427
  %1429 = load i8, i8* %1428, align 1
  %1430 = zext i8 %1429 to i32
  %1431 = and i32 %1430, 1
  %1432 = icmp ne i32 %1431, 0
  br i1 %1432, label %1433, label %2204

; <label>:1433                                    ; preds = %1425
  %1434 = load i32, i32* %start, align 4
  %1435 = load i32, i32* %i, align 4
  %1436 = add nsw i32 %1434, %1435
  %1437 = sub nsw i32 %1436, 1
  %1438 = sext i32 %1437 to i64
  %1439 = load i8*, i8** %key, align 8
  %1440 = getelementptr inbounds i8, i8* %1439, i64 %1438
  %1441 = load %union.rec*, %union.rec** %y, align 8
  %1442 = bitcast %union.rec* %1441 to %struct.word_type*
  %1443 = getelementptr inbounds %struct.word_type, %struct.word_type* %1442, i32 0, i32 1
  %1444 = bitcast %union.FIRST_UNION* %1443 to %struct.FILE_POS*
  %1445 = call %union.rec* @MakeWord(i32 11, i8* %1440, %struct.FILE_POS* %1444)
  store %union.rec* %1445, %union.rec** %z, align 8
  %1446 = load %union.rec*, %union.rec** %y, align 8
  %1447 = bitcast %union.rec* %1446 to %struct.word_type*
  %1448 = getelementptr inbounds %struct.word_type, %struct.word_type* %1447, i32 0, i32 2
  %1449 = bitcast %union.SECOND_UNION* %1448 to %struct.anon.1*
  %1450 = bitcast %struct.anon.1* %1449 to i32*
  %1451 = load i32, i32* %1450, align 4
  %1452 = and i32 %1451, 4095
  %1453 = load %union.rec*, %union.rec** %z, align 8
  %1454 = bitcast %union.rec* %1453 to %struct.word_type*
  %1455 = getelementptr inbounds %struct.word_type, %struct.word_type* %1454, i32 0, i32 2
  %1456 = bitcast %union.SECOND_UNION* %1455 to %struct.anon.1*
  %1457 = bitcast %struct.anon.1* %1456 to i32*
  %1458 = load i32, i32* %1457, align 4
  %1459 = and i32 %1452, 4095
  %1460 = and i32 %1458, -4096
  %1461 = or i32 %1460, %1459
  store i32 %1461, i32* %1457, align 4
  %1462 = load %union.rec*, %union.rec** %y, align 8
  %1463 = bitcast %union.rec* %1462 to %struct.word_type*
  %1464 = getelementptr inbounds %struct.word_type, %struct.word_type* %1463, i32 0, i32 2
  %1465 = bitcast %union.SECOND_UNION* %1464 to %struct.anon.1*
  %1466 = bitcast %struct.anon.1* %1465 to i32*
  %1467 = load i32, i32* %1466, align 4
  %1468 = lshr i32 %1467, 12
  %1469 = and i32 %1468, 1023
  %1470 = load %union.rec*, %union.rec** %z, align 8
  %1471 = bitcast %union.rec* %1470 to %struct.word_type*
  %1472 = getelementptr inbounds %struct.word_type, %struct.word_type* %1471, i32 0, i32 2
  %1473 = bitcast %union.SECOND_UNION* %1472 to %struct.anon.1*
  %1474 = bitcast %struct.anon.1* %1473 to i32*
  %1475 = load i32, i32* %1474, align 4
  %1476 = and i32 %1469, 1023
  %1477 = shl i32 %1476, 12
  %1478 = and i32 %1475, -4190209
  %1479 = or i32 %1478, %1477
  store i32 %1479, i32* %1474, align 4
  %1480 = load %union.rec*, %union.rec** %y, align 8
  %1481 = bitcast %union.rec* %1480 to %struct.word_type*
  %1482 = getelementptr inbounds %struct.word_type, %struct.word_type* %1481, i32 0, i32 2
  %1483 = bitcast %union.SECOND_UNION* %1482 to %struct.anon.1*
  %1484 = bitcast %struct.anon.1* %1483 to i32*
  %1485 = load i32, i32* %1484, align 4
  %1486 = lshr i32 %1485, 22
  %1487 = and i32 %1486, 1
  %1488 = load %union.rec*, %union.rec** %z, align 8
  %1489 = bitcast %union.rec* %1488 to %struct.word_type*
  %1490 = getelementptr inbounds %struct.word_type, %struct.word_type* %1489, i32 0, i32 2
  %1491 = bitcast %union.SECOND_UNION* %1490 to %struct.anon.1*
  %1492 = bitcast %struct.anon.1* %1491 to i32*
  %1493 = load i32, i32* %1492, align 4
  %1494 = and i32 %1487, 1
  %1495 = shl i32 %1494, 22
  %1496 = and i32 %1493, -4194305
  %1497 = or i32 %1496, %1495
  store i32 %1497, i32* %1492, align 4
  %1498 = load %union.rec*, %union.rec** %y, align 8
  %1499 = bitcast %union.rec* %1498 to %struct.word_type*
  %1500 = getelementptr inbounds %struct.word_type, %struct.word_type* %1499, i32 0, i32 2
  %1501 = bitcast %union.SECOND_UNION* %1500 to %struct.anon.1*
  %1502 = bitcast %struct.anon.1* %1501 to i32*
  %1503 = load i32, i32* %1502, align 4
  %1504 = lshr i32 %1503, 23
  %1505 = and i32 %1504, 63
  %1506 = load %union.rec*, %union.rec** %z, align 8
  %1507 = bitcast %union.rec* %1506 to %struct.word_type*
  %1508 = getelementptr inbounds %struct.word_type, %struct.word_type* %1507, i32 0, i32 2
  %1509 = bitcast %union.SECOND_UNION* %1508 to %struct.anon.1*
  %1510 = bitcast %struct.anon.1* %1509 to i32*
  %1511 = load i32, i32* %1510, align 4
  %1512 = and i32 %1505, 63
  %1513 = shl i32 %1512, 23
  %1514 = and i32 %1511, -528482305
  %1515 = or i32 %1514, %1513
  store i32 %1515, i32* %1510, align 4
  %1516 = load %union.rec*, %union.rec** %y, align 8
  %1517 = bitcast %union.rec* %1516 to %struct.word_type*
  %1518 = getelementptr inbounds %struct.word_type, %struct.word_type* %1517, i32 0, i32 2
  %1519 = bitcast %union.SECOND_UNION* %1518 to %struct.anon.1*
  %1520 = bitcast %struct.anon.1* %1519 to i32*
  %1521 = load i32, i32* %1520, align 4
  %1522 = lshr i32 %1521, 31
  %1523 = load %union.rec*, %union.rec** %z, align 8
  %1524 = bitcast %union.rec* %1523 to %struct.word_type*
  %1525 = getelementptr inbounds %struct.word_type, %struct.word_type* %1524, i32 0, i32 2
  %1526 = bitcast %union.SECOND_UNION* %1525 to %struct.anon.1*
  %1527 = bitcast %struct.anon.1* %1526 to i32*
  %1528 = load i32, i32* %1527, align 4
  %1529 = and i32 %1522, 1
  %1530 = shl i32 %1529, 31
  %1531 = and i32 %1528, 2147483647
  %1532 = or i32 %1531, %1530
  store i32 %1532, i32* %1527, align 4
  %1533 = load %union.rec*, %union.rec** %y, align 8
  %1534 = bitcast %union.rec* %1533 to %struct.word_type*
  %1535 = getelementptr inbounds %struct.word_type, %struct.word_type* %1534, i32 0, i32 2
  %1536 = bitcast %union.SECOND_UNION* %1535 to %struct.anon.1*
  %1537 = bitcast %struct.anon.1* %1536 to i32*
  %1538 = load i32, i32* %1537, align 4
  %1539 = lshr i32 %1538, 29
  %1540 = and i32 %1539, 3
  %1541 = load %union.rec*, %union.rec** %z, align 8
  %1542 = bitcast %union.rec* %1541 to %struct.word_type*
  %1543 = getelementptr inbounds %struct.word_type, %struct.word_type* %1542, i32 0, i32 2
  %1544 = bitcast %union.SECOND_UNION* %1543 to %struct.anon.1*
  %1545 = bitcast %struct.anon.1* %1544 to i32*
  %1546 = load i32, i32* %1545, align 4
  %1547 = and i32 %1540, 3
  %1548 = shl i32 %1547, 29
  %1549 = and i32 %1546, -1610612737
  %1550 = or i32 %1549, %1548
  store i32 %1550, i32* %1545, align 4
  %1551 = load %union.rec*, %union.rec** %z, align 8
  call void @FontWordSize(%union.rec* %1551)
  %1552 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 0), align 1
  %1553 = zext i8 %1552 to i32
  store i32 %1553, i32* @zz_size, align 4
  %1554 = sext i32 %1553 to i64
  %1555 = icmp uge i64 %1554, 265
  br i1 %1555, label %1556, label %1559

; <label>:1556                                    ; preds = %1433
  %1557 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1558 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %1557)
  br label %1584

; <label>:1559                                    ; preds = %1433
  %1560 = load i32, i32* @zz_size, align 4
  %1561 = sext i32 %1560 to i64
  %1562 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1561
  %1563 = load %union.rec*, %union.rec** %1562, align 8
  %1564 = icmp eq %union.rec* %1563, null
  br i1 %1564, label %1565, label %1569

; <label>:1565                                    ; preds = %1559
  %1566 = load i32, i32* @zz_size, align 4
  %1567 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1568 = call %union.rec* @GetMemory(i32 %1566, %struct.FILE_POS* %1567)
  store %union.rec* %1568, %union.rec** @zz_hold, align 8
  br label %1583

; <label>:1569                                    ; preds = %1559
  %1570 = load i32, i32* @zz_size, align 4
  %1571 = sext i32 %1570 to i64
  %1572 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1571
  %1573 = load %union.rec*, %union.rec** %1572, align 8
  store %union.rec* %1573, %union.rec** @zz_hold, align 8
  store %union.rec* %1573, %union.rec** @zz_hold, align 8
  %1574 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1575 = bitcast %union.rec* %1574 to %struct.word_type*
  %1576 = getelementptr inbounds %struct.word_type, %struct.word_type* %1575, i32 0, i32 0
  %1577 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1576, i32 0, i64 0
  %1578 = getelementptr inbounds %struct.LIST, %struct.LIST* %1577, i32 0, i32 0
  %1579 = load %union.rec*, %union.rec** %1578, align 8
  %1580 = load i32, i32* @zz_size, align 4
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1581
  store %union.rec* %1579, %union.rec** %1582, align 8
  br label %1583

; <label>:1583                                    ; preds = %1569, %1565
  br label %1584

; <label>:1584                                    ; preds = %1583, %1556
  %1585 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1586 = bitcast %union.rec* %1585 to %struct.word_type*
  %1587 = getelementptr inbounds %struct.word_type, %struct.word_type* %1586, i32 0, i32 1
  %1588 = bitcast %union.FIRST_UNION* %1587 to %struct.anon*
  %1589 = getelementptr inbounds %struct.anon, %struct.anon* %1588, i32 0, i32 0
  store i8 0, i8* %1589, align 1
  %1590 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1591 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1592 = bitcast %union.rec* %1591 to %struct.word_type*
  %1593 = getelementptr inbounds %struct.word_type, %struct.word_type* %1592, i32 0, i32 0
  %1594 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1593, i32 0, i64 1
  %1595 = getelementptr inbounds %struct.LIST, %struct.LIST* %1594, i32 0, i32 1
  store %union.rec* %1590, %union.rec** %1595, align 8
  %1596 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1597 = bitcast %union.rec* %1596 to %struct.word_type*
  %1598 = getelementptr inbounds %struct.word_type, %struct.word_type* %1597, i32 0, i32 0
  %1599 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1598, i32 0, i64 1
  %1600 = getelementptr inbounds %struct.LIST, %struct.LIST* %1599, i32 0, i32 0
  store %union.rec* %1590, %union.rec** %1600, align 8
  %1601 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1602 = bitcast %union.rec* %1601 to %struct.word_type*
  %1603 = getelementptr inbounds %struct.word_type, %struct.word_type* %1602, i32 0, i32 0
  %1604 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1603, i32 0, i64 0
  %1605 = getelementptr inbounds %struct.LIST, %struct.LIST* %1604, i32 0, i32 1
  store %union.rec* %1590, %union.rec** %1605, align 8
  %1606 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1607 = bitcast %union.rec* %1606 to %struct.word_type*
  %1608 = getelementptr inbounds %struct.word_type, %struct.word_type* %1607, i32 0, i32 0
  %1609 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1608, i32 0, i64 0
  %1610 = getelementptr inbounds %struct.LIST, %struct.LIST* %1609, i32 0, i32 0
  store %union.rec* %1590, %union.rec** %1610, align 8
  store %union.rec* %1590, %union.rec** @xx_link, align 8
  %1611 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %1611, %union.rec** @zz_res, align 8
  %1612 = load %union.rec*, %union.rec** %link, align 8
  %1613 = bitcast %union.rec* %1612 to %struct.word_type*
  %1614 = getelementptr inbounds %struct.word_type, %struct.word_type* %1613, i32 0, i32 0
  %1615 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1614, i32 0, i64 0
  %1616 = getelementptr inbounds %struct.LIST, %struct.LIST* %1615, i32 0, i32 1
  %1617 = load %union.rec*, %union.rec** %1616, align 8
  store %union.rec* %1617, %union.rec** @zz_hold, align 8
  %1618 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1619 = icmp eq %union.rec* %1618, null
  br i1 %1619, label %1620, label %1622

; <label>:1620                                    ; preds = %1584
  %1621 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %1670

; <label>:1622                                    ; preds = %1584
  %1623 = load %union.rec*, %union.rec** @zz_res, align 8
  %1624 = icmp eq %union.rec* %1623, null
  br i1 %1624, label %1625, label %1627

; <label>:1625                                    ; preds = %1622
  %1626 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %1668

; <label>:1627                                    ; preds = %1622
  %1628 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1629 = bitcast %union.rec* %1628 to %struct.word_type*
  %1630 = getelementptr inbounds %struct.word_type, %struct.word_type* %1629, i32 0, i32 0
  %1631 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1630, i32 0, i64 0
  %1632 = getelementptr inbounds %struct.LIST, %struct.LIST* %1631, i32 0, i32 0
  %1633 = load %union.rec*, %union.rec** %1632, align 8
  store %union.rec* %1633, %union.rec** @zz_tmp, align 8
  %1634 = load %union.rec*, %union.rec** @zz_res, align 8
  %1635 = bitcast %union.rec* %1634 to %struct.word_type*
  %1636 = getelementptr inbounds %struct.word_type, %struct.word_type* %1635, i32 0, i32 0
  %1637 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1636, i32 0, i64 0
  %1638 = getelementptr inbounds %struct.LIST, %struct.LIST* %1637, i32 0, i32 0
  %1639 = load %union.rec*, %union.rec** %1638, align 8
  %1640 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1641 = bitcast %union.rec* %1640 to %struct.word_type*
  %1642 = getelementptr inbounds %struct.word_type, %struct.word_type* %1641, i32 0, i32 0
  %1643 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1642, i32 0, i64 0
  %1644 = getelementptr inbounds %struct.LIST, %struct.LIST* %1643, i32 0, i32 0
  store %union.rec* %1639, %union.rec** %1644, align 8
  %1645 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1646 = load %union.rec*, %union.rec** @zz_res, align 8
  %1647 = bitcast %union.rec* %1646 to %struct.word_type*
  %1648 = getelementptr inbounds %struct.word_type, %struct.word_type* %1647, i32 0, i32 0
  %1649 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1648, i32 0, i64 0
  %1650 = getelementptr inbounds %struct.LIST, %struct.LIST* %1649, i32 0, i32 0
  %1651 = load %union.rec*, %union.rec** %1650, align 8
  %1652 = bitcast %union.rec* %1651 to %struct.word_type*
  %1653 = getelementptr inbounds %struct.word_type, %struct.word_type* %1652, i32 0, i32 0
  %1654 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1653, i32 0, i64 0
  %1655 = getelementptr inbounds %struct.LIST, %struct.LIST* %1654, i32 0, i32 1
  store %union.rec* %1645, %union.rec** %1655, align 8
  %1656 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %1657 = load %union.rec*, %union.rec** @zz_res, align 8
  %1658 = bitcast %union.rec* %1657 to %struct.word_type*
  %1659 = getelementptr inbounds %struct.word_type, %struct.word_type* %1658, i32 0, i32 0
  %1660 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1659, i32 0, i64 0
  %1661 = getelementptr inbounds %struct.LIST, %struct.LIST* %1660, i32 0, i32 0
  store %union.rec* %1656, %union.rec** %1661, align 8
  %1662 = load %union.rec*, %union.rec** @zz_res, align 8
  %1663 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %1664 = bitcast %union.rec* %1663 to %struct.word_type*
  %1665 = getelementptr inbounds %struct.word_type, %struct.word_type* %1664, i32 0, i32 0
  %1666 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1665, i32 0, i64 0
  %1667 = getelementptr inbounds %struct.LIST, %struct.LIST* %1666, i32 0, i32 1
  store %union.rec* %1662, %union.rec** %1667, align 8
  br label %1668

; <label>:1668                                    ; preds = %1627, %1625
  %1669 = phi %union.rec* [ %1626, %1625 ], [ %1662, %1627 ]
  br label %1670

; <label>:1670                                    ; preds = %1668, %1620
  %1671 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %1671, %union.rec** @zz_res, align 8
  %1672 = load %union.rec*, %union.rec** %z, align 8
  store %union.rec* %1672, %union.rec** @zz_hold, align 8
  %1673 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1674 = icmp eq %union.rec* %1673, null
  br i1 %1674, label %1675, label %1677

; <label>:1675                                    ; preds = %1670
  %1676 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %1725

; <label>:1677                                    ; preds = %1670
  %1678 = load %union.rec*, %union.rec** @zz_res, align 8
  %1679 = icmp eq %union.rec* %1678, null
  br i1 %1679, label %1680, label %1682

; <label>:1680                                    ; preds = %1677
  %1681 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %1723

; <label>:1682                                    ; preds = %1677
  %1683 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1684 = bitcast %union.rec* %1683 to %struct.word_type*
  %1685 = getelementptr inbounds %struct.word_type, %struct.word_type* %1684, i32 0, i32 0
  %1686 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1685, i32 0, i64 1
  %1687 = getelementptr inbounds %struct.LIST, %struct.LIST* %1686, i32 0, i32 0
  %1688 = load %union.rec*, %union.rec** %1687, align 8
  store %union.rec* %1688, %union.rec** @zz_tmp, align 8
  %1689 = load %union.rec*, %union.rec** @zz_res, align 8
  %1690 = bitcast %union.rec* %1689 to %struct.word_type*
  %1691 = getelementptr inbounds %struct.word_type, %struct.word_type* %1690, i32 0, i32 0
  %1692 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1691, i32 0, i64 1
  %1693 = getelementptr inbounds %struct.LIST, %struct.LIST* %1692, i32 0, i32 0
  %1694 = load %union.rec*, %union.rec** %1693, align 8
  %1695 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1696 = bitcast %union.rec* %1695 to %struct.word_type*
  %1697 = getelementptr inbounds %struct.word_type, %struct.word_type* %1696, i32 0, i32 0
  %1698 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1697, i32 0, i64 1
  %1699 = getelementptr inbounds %struct.LIST, %struct.LIST* %1698, i32 0, i32 0
  store %union.rec* %1694, %union.rec** %1699, align 8
  %1700 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1701 = load %union.rec*, %union.rec** @zz_res, align 8
  %1702 = bitcast %union.rec* %1701 to %struct.word_type*
  %1703 = getelementptr inbounds %struct.word_type, %struct.word_type* %1702, i32 0, i32 0
  %1704 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1703, i32 0, i64 1
  %1705 = getelementptr inbounds %struct.LIST, %struct.LIST* %1704, i32 0, i32 0
  %1706 = load %union.rec*, %union.rec** %1705, align 8
  %1707 = bitcast %union.rec* %1706 to %struct.word_type*
  %1708 = getelementptr inbounds %struct.word_type, %struct.word_type* %1707, i32 0, i32 0
  %1709 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1708, i32 0, i64 1
  %1710 = getelementptr inbounds %struct.LIST, %struct.LIST* %1709, i32 0, i32 1
  store %union.rec* %1700, %union.rec** %1710, align 8
  %1711 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %1712 = load %union.rec*, %union.rec** @zz_res, align 8
  %1713 = bitcast %union.rec* %1712 to %struct.word_type*
  %1714 = getelementptr inbounds %struct.word_type, %struct.word_type* %1713, i32 0, i32 0
  %1715 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1714, i32 0, i64 1
  %1716 = getelementptr inbounds %struct.LIST, %struct.LIST* %1715, i32 0, i32 0
  store %union.rec* %1711, %union.rec** %1716, align 8
  %1717 = load %union.rec*, %union.rec** @zz_res, align 8
  %1718 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %1719 = bitcast %union.rec* %1718 to %struct.word_type*
  %1720 = getelementptr inbounds %struct.word_type, %struct.word_type* %1719, i32 0, i32 0
  %1721 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1720, i32 0, i64 1
  %1722 = getelementptr inbounds %struct.LIST, %struct.LIST* %1721, i32 0, i32 1
  store %union.rec* %1717, %union.rec** %1722, align 8
  br label %1723

; <label>:1723                                    ; preds = %1682, %1680
  %1724 = phi %union.rec* [ %1681, %1680 ], [ %1717, %1682 ]
  br label %1725

; <label>:1725                                    ; preds = %1723, %1675
  %1726 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 1), align 1
  %1727 = zext i8 %1726 to i32
  store i32 %1727, i32* @zz_size, align 4
  %1728 = sext i32 %1727 to i64
  %1729 = icmp uge i64 %1728, 265
  br i1 %1729, label %1730, label %1733

; <label>:1730                                    ; preds = %1725
  %1731 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1732 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %1731)
  br label %1758

; <label>:1733                                    ; preds = %1725
  %1734 = load i32, i32* @zz_size, align 4
  %1735 = sext i32 %1734 to i64
  %1736 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1735
  %1737 = load %union.rec*, %union.rec** %1736, align 8
  %1738 = icmp eq %union.rec* %1737, null
  br i1 %1738, label %1739, label %1743

; <label>:1739                                    ; preds = %1733
  %1740 = load i32, i32* @zz_size, align 4
  %1741 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1742 = call %union.rec* @GetMemory(i32 %1740, %struct.FILE_POS* %1741)
  store %union.rec* %1742, %union.rec** @zz_hold, align 8
  br label %1757

; <label>:1743                                    ; preds = %1733
  %1744 = load i32, i32* @zz_size, align 4
  %1745 = sext i32 %1744 to i64
  %1746 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1745
  %1747 = load %union.rec*, %union.rec** %1746, align 8
  store %union.rec* %1747, %union.rec** @zz_hold, align 8
  store %union.rec* %1747, %union.rec** @zz_hold, align 8
  %1748 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1749 = bitcast %union.rec* %1748 to %struct.word_type*
  %1750 = getelementptr inbounds %struct.word_type, %struct.word_type* %1749, i32 0, i32 0
  %1751 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1750, i32 0, i64 0
  %1752 = getelementptr inbounds %struct.LIST, %struct.LIST* %1751, i32 0, i32 0
  %1753 = load %union.rec*, %union.rec** %1752, align 8
  %1754 = load i32, i32* @zz_size, align 4
  %1755 = sext i32 %1754 to i64
  %1756 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1755
  store %union.rec* %1753, %union.rec** %1756, align 8
  br label %1757

; <label>:1757                                    ; preds = %1743, %1739
  br label %1758

; <label>:1758                                    ; preds = %1757, %1730
  %1759 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1760 = bitcast %union.rec* %1759 to %struct.word_type*
  %1761 = getelementptr inbounds %struct.word_type, %struct.word_type* %1760, i32 0, i32 1
  %1762 = bitcast %union.FIRST_UNION* %1761 to %struct.anon*
  %1763 = getelementptr inbounds %struct.anon, %struct.anon* %1762, i32 0, i32 0
  store i8 1, i8* %1763, align 1
  %1764 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1765 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1766 = bitcast %union.rec* %1765 to %struct.word_type*
  %1767 = getelementptr inbounds %struct.word_type, %struct.word_type* %1766, i32 0, i32 0
  %1768 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1767, i32 0, i64 1
  %1769 = getelementptr inbounds %struct.LIST, %struct.LIST* %1768, i32 0, i32 1
  store %union.rec* %1764, %union.rec** %1769, align 8
  %1770 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1771 = bitcast %union.rec* %1770 to %struct.word_type*
  %1772 = getelementptr inbounds %struct.word_type, %struct.word_type* %1771, i32 0, i32 0
  %1773 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1772, i32 0, i64 1
  %1774 = getelementptr inbounds %struct.LIST, %struct.LIST* %1773, i32 0, i32 0
  store %union.rec* %1764, %union.rec** %1774, align 8
  %1775 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1776 = bitcast %union.rec* %1775 to %struct.word_type*
  %1777 = getelementptr inbounds %struct.word_type, %struct.word_type* %1776, i32 0, i32 0
  %1778 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1777, i32 0, i64 0
  %1779 = getelementptr inbounds %struct.LIST, %struct.LIST* %1778, i32 0, i32 1
  store %union.rec* %1764, %union.rec** %1779, align 8
  %1780 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1781 = bitcast %union.rec* %1780 to %struct.word_type*
  %1782 = getelementptr inbounds %struct.word_type, %struct.word_type* %1781, i32 0, i32 0
  %1783 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1782, i32 0, i64 0
  %1784 = getelementptr inbounds %struct.LIST, %struct.LIST* %1783, i32 0, i32 0
  store %union.rec* %1764, %union.rec** %1784, align 8
  store %union.rec* %1764, %union.rec** %z, align 8
  %1785 = load %union.rec*, %union.rec** %z, align 8
  %1786 = bitcast %union.rec* %1785 to %struct.word_type*
  %1787 = getelementptr inbounds %struct.word_type, %struct.word_type* %1786, i32 0, i32 2
  %1788 = bitcast %union.SECOND_UNION* %1787 to %struct.anon.0*
  %1789 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %1788, i32 0, i32 2
  store i8 0, i8* %1789, align 1
  %1790 = load %union.rec*, %union.rec** %z, align 8
  %1791 = bitcast %union.rec* %1790 to %struct.word_type*
  %1792 = getelementptr inbounds %struct.word_type, %struct.word_type* %1791, i32 0, i32 2
  %1793 = bitcast %union.SECOND_UNION* %1792 to %struct.anon.0*
  %1794 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %1793, i32 0, i32 1
  store i8 0, i8* %1794, align 1
  %1795 = load %union.rec*, %union.rec** %z, align 8
  %1796 = bitcast %union.rec* %1795 to %struct.gapobj_type*
  %1797 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %1796, i32 0, i32 3
  %1798 = bitcast %struct.GAP* %1797 to i16*
  %1799 = load i16, i16* %1798, align 4
  %1800 = and i16 %1799, -129
  store i16 %1800, i16* %1798, align 4
  %1801 = load %union.rec*, %union.rec** %z, align 8
  %1802 = bitcast %union.rec* %1801 to %struct.gapobj_type*
  %1803 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %1802, i32 0, i32 3
  %1804 = bitcast %struct.GAP* %1803 to i16*
  %1805 = load i16, i16* %1804, align 4
  %1806 = and i16 %1805, -257
  store i16 %1806, i16* %1804, align 4
  %1807 = load %union.rec*, %union.rec** %z, align 8
  %1808 = bitcast %union.rec* %1807 to %struct.gapobj_type*
  %1809 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %1808, i32 0, i32 3
  %1810 = bitcast %struct.GAP* %1809 to i16*
  %1811 = load i16, i16* %1810, align 4
  %1812 = and i16 %1811, -513
  %1813 = or i16 %1812, 512
  store i16 %1813, i16* %1810, align 4
  %1814 = load %union.rec*, %union.rec** %z, align 8
  %1815 = bitcast %union.rec* %1814 to %struct.gapobj_type*
  %1816 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %1815, i32 0, i32 3
  %1817 = bitcast %struct.GAP* %1816 to i16*
  %1818 = load i16, i16* %1817, align 4
  %1819 = and i16 %1818, -7169
  %1820 = or i16 %1819, 1024
  store i16 %1820, i16* %1817, align 4
  %1821 = load %union.rec*, %union.rec** %z, align 8
  %1822 = bitcast %union.rec* %1821 to %struct.gapobj_type*
  %1823 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %1822, i32 0, i32 3
  %1824 = bitcast %struct.GAP* %1823 to i16*
  %1825 = load i16, i16* %1824, align 4
  %1826 = and i16 %1825, 8191
  %1827 = or i16 %1826, 16384
  store i16 %1827, i16* %1824, align 4
  %1828 = load %union.rec*, %union.rec** %z, align 8
  %1829 = bitcast %union.rec* %1828 to %struct.gapobj_type*
  %1830 = getelementptr inbounds %struct.gapobj_type, %struct.gapobj_type* %1829, i32 0, i32 3
  %1831 = getelementptr inbounds %struct.GAP, %struct.GAP* %1830, i32 0, i32 1
  store i16 0, i16* %1831, align 2
  %1832 = load %union.rec*, %union.rec** %y, align 8
  %1833 = bitcast %union.rec* %1832 to %struct.word_type*
  %1834 = getelementptr inbounds %struct.word_type, %struct.word_type* %1833, i32 0, i32 2
  %1835 = bitcast %union.SECOND_UNION* %1834 to %struct.anon.1*
  %1836 = bitcast %struct.anon.1* %1835 to i32*
  %1837 = load i32, i32* %1836, align 4
  %1838 = lshr i32 %1837, 29
  %1839 = and i32 %1838, 3
  %1840 = load %union.rec*, %union.rec** %z, align 8
  %1841 = bitcast %union.rec* %1840 to %struct.word_type*
  %1842 = getelementptr inbounds %struct.word_type, %struct.word_type* %1841, i32 0, i32 2
  %1843 = bitcast %union.SECOND_UNION* %1842 to %struct.anon.1*
  %1844 = bitcast %struct.anon.1* %1843 to i32*
  %1845 = load i32, i32* %1844, align 4
  %1846 = and i32 %1839, 3
  %1847 = shl i32 %1846, 29
  %1848 = and i32 %1845, -1610612737
  %1849 = or i32 %1848, %1847
  store i32 %1849, i32* %1844, align 4
  %1850 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 0), align 1
  %1851 = zext i8 %1850 to i32
  store i32 %1851, i32* @zz_size, align 4
  %1852 = sext i32 %1851 to i64
  %1853 = icmp uge i64 %1852, 265
  br i1 %1853, label %1854, label %1857

; <label>:1854                                    ; preds = %1758
  %1855 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1856 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %1855)
  br label %1882

; <label>:1857                                    ; preds = %1758
  %1858 = load i32, i32* @zz_size, align 4
  %1859 = sext i32 %1858 to i64
  %1860 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1859
  %1861 = load %union.rec*, %union.rec** %1860, align 8
  %1862 = icmp eq %union.rec* %1861, null
  br i1 %1862, label %1863, label %1867

; <label>:1863                                    ; preds = %1857
  %1864 = load i32, i32* @zz_size, align 4
  %1865 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %1866 = call %union.rec* @GetMemory(i32 %1864, %struct.FILE_POS* %1865)
  store %union.rec* %1866, %union.rec** @zz_hold, align 8
  br label %1881

; <label>:1867                                    ; preds = %1857
  %1868 = load i32, i32* @zz_size, align 4
  %1869 = sext i32 %1868 to i64
  %1870 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1869
  %1871 = load %union.rec*, %union.rec** %1870, align 8
  store %union.rec* %1871, %union.rec** @zz_hold, align 8
  store %union.rec* %1871, %union.rec** @zz_hold, align 8
  %1872 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1873 = bitcast %union.rec* %1872 to %struct.word_type*
  %1874 = getelementptr inbounds %struct.word_type, %struct.word_type* %1873, i32 0, i32 0
  %1875 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1874, i32 0, i64 0
  %1876 = getelementptr inbounds %struct.LIST, %struct.LIST* %1875, i32 0, i32 0
  %1877 = load %union.rec*, %union.rec** %1876, align 8
  %1878 = load i32, i32* @zz_size, align 4
  %1879 = sext i32 %1878 to i64
  %1880 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %1879
  store %union.rec* %1877, %union.rec** %1880, align 8
  br label %1881

; <label>:1881                                    ; preds = %1867, %1863
  br label %1882

; <label>:1882                                    ; preds = %1881, %1854
  %1883 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1884 = bitcast %union.rec* %1883 to %struct.word_type*
  %1885 = getelementptr inbounds %struct.word_type, %struct.word_type* %1884, i32 0, i32 1
  %1886 = bitcast %union.FIRST_UNION* %1885 to %struct.anon*
  %1887 = getelementptr inbounds %struct.anon, %struct.anon* %1886, i32 0, i32 0
  store i8 0, i8* %1887, align 1
  %1888 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1889 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1890 = bitcast %union.rec* %1889 to %struct.word_type*
  %1891 = getelementptr inbounds %struct.word_type, %struct.word_type* %1890, i32 0, i32 0
  %1892 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1891, i32 0, i64 1
  %1893 = getelementptr inbounds %struct.LIST, %struct.LIST* %1892, i32 0, i32 1
  store %union.rec* %1888, %union.rec** %1893, align 8
  %1894 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1895 = bitcast %union.rec* %1894 to %struct.word_type*
  %1896 = getelementptr inbounds %struct.word_type, %struct.word_type* %1895, i32 0, i32 0
  %1897 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1896, i32 0, i64 1
  %1898 = getelementptr inbounds %struct.LIST, %struct.LIST* %1897, i32 0, i32 0
  store %union.rec* %1888, %union.rec** %1898, align 8
  %1899 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1900 = bitcast %union.rec* %1899 to %struct.word_type*
  %1901 = getelementptr inbounds %struct.word_type, %struct.word_type* %1900, i32 0, i32 0
  %1902 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1901, i32 0, i64 0
  %1903 = getelementptr inbounds %struct.LIST, %struct.LIST* %1902, i32 0, i32 1
  store %union.rec* %1888, %union.rec** %1903, align 8
  %1904 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1905 = bitcast %union.rec* %1904 to %struct.word_type*
  %1906 = getelementptr inbounds %struct.word_type, %struct.word_type* %1905, i32 0, i32 0
  %1907 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1906, i32 0, i64 0
  %1908 = getelementptr inbounds %struct.LIST, %struct.LIST* %1907, i32 0, i32 0
  store %union.rec* %1888, %union.rec** %1908, align 8
  store %union.rec* %1888, %union.rec** @xx_link, align 8
  %1909 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %1909, %union.rec** @zz_res, align 8
  %1910 = load %union.rec*, %union.rec** %link, align 8
  %1911 = bitcast %union.rec* %1910 to %struct.word_type*
  %1912 = getelementptr inbounds %struct.word_type, %struct.word_type* %1911, i32 0, i32 0
  %1913 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1912, i32 0, i64 0
  %1914 = getelementptr inbounds %struct.LIST, %struct.LIST* %1913, i32 0, i32 1
  %1915 = load %union.rec*, %union.rec** %1914, align 8
  store %union.rec* %1915, %union.rec** @zz_hold, align 8
  %1916 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1917 = icmp eq %union.rec* %1916, null
  br i1 %1917, label %1918, label %1920

; <label>:1918                                    ; preds = %1882
  %1919 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %1968

; <label>:1920                                    ; preds = %1882
  %1921 = load %union.rec*, %union.rec** @zz_res, align 8
  %1922 = icmp eq %union.rec* %1921, null
  br i1 %1922, label %1923, label %1925

; <label>:1923                                    ; preds = %1920
  %1924 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %1966

; <label>:1925                                    ; preds = %1920
  %1926 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1927 = bitcast %union.rec* %1926 to %struct.word_type*
  %1928 = getelementptr inbounds %struct.word_type, %struct.word_type* %1927, i32 0, i32 0
  %1929 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1928, i32 0, i64 0
  %1930 = getelementptr inbounds %struct.LIST, %struct.LIST* %1929, i32 0, i32 0
  %1931 = load %union.rec*, %union.rec** %1930, align 8
  store %union.rec* %1931, %union.rec** @zz_tmp, align 8
  %1932 = load %union.rec*, %union.rec** @zz_res, align 8
  %1933 = bitcast %union.rec* %1932 to %struct.word_type*
  %1934 = getelementptr inbounds %struct.word_type, %struct.word_type* %1933, i32 0, i32 0
  %1935 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1934, i32 0, i64 0
  %1936 = getelementptr inbounds %struct.LIST, %struct.LIST* %1935, i32 0, i32 0
  %1937 = load %union.rec*, %union.rec** %1936, align 8
  %1938 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1939 = bitcast %union.rec* %1938 to %struct.word_type*
  %1940 = getelementptr inbounds %struct.word_type, %struct.word_type* %1939, i32 0, i32 0
  %1941 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1940, i32 0, i64 0
  %1942 = getelementptr inbounds %struct.LIST, %struct.LIST* %1941, i32 0, i32 0
  store %union.rec* %1937, %union.rec** %1942, align 8
  %1943 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1944 = load %union.rec*, %union.rec** @zz_res, align 8
  %1945 = bitcast %union.rec* %1944 to %struct.word_type*
  %1946 = getelementptr inbounds %struct.word_type, %struct.word_type* %1945, i32 0, i32 0
  %1947 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1946, i32 0, i64 0
  %1948 = getelementptr inbounds %struct.LIST, %struct.LIST* %1947, i32 0, i32 0
  %1949 = load %union.rec*, %union.rec** %1948, align 8
  %1950 = bitcast %union.rec* %1949 to %struct.word_type*
  %1951 = getelementptr inbounds %struct.word_type, %struct.word_type* %1950, i32 0, i32 0
  %1952 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1951, i32 0, i64 0
  %1953 = getelementptr inbounds %struct.LIST, %struct.LIST* %1952, i32 0, i32 1
  store %union.rec* %1943, %union.rec** %1953, align 8
  %1954 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %1955 = load %union.rec*, %union.rec** @zz_res, align 8
  %1956 = bitcast %union.rec* %1955 to %struct.word_type*
  %1957 = getelementptr inbounds %struct.word_type, %struct.word_type* %1956, i32 0, i32 0
  %1958 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1957, i32 0, i64 0
  %1959 = getelementptr inbounds %struct.LIST, %struct.LIST* %1958, i32 0, i32 0
  store %union.rec* %1954, %union.rec** %1959, align 8
  %1960 = load %union.rec*, %union.rec** @zz_res, align 8
  %1961 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %1962 = bitcast %union.rec* %1961 to %struct.word_type*
  %1963 = getelementptr inbounds %struct.word_type, %struct.word_type* %1962, i32 0, i32 0
  %1964 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1963, i32 0, i64 0
  %1965 = getelementptr inbounds %struct.LIST, %struct.LIST* %1964, i32 0, i32 1
  store %union.rec* %1960, %union.rec** %1965, align 8
  br label %1966

; <label>:1966                                    ; preds = %1925, %1923
  %1967 = phi %union.rec* [ %1924, %1923 ], [ %1960, %1925 ]
  br label %1968

; <label>:1968                                    ; preds = %1966, %1918
  %1969 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %1969, %union.rec** @zz_res, align 8
  %1970 = load %union.rec*, %union.rec** %z, align 8
  store %union.rec* %1970, %union.rec** @zz_hold, align 8
  %1971 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1972 = icmp eq %union.rec* %1971, null
  br i1 %1972, label %1973, label %1975

; <label>:1973                                    ; preds = %1968
  %1974 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %2023

; <label>:1975                                    ; preds = %1968
  %1976 = load %union.rec*, %union.rec** @zz_res, align 8
  %1977 = icmp eq %union.rec* %1976, null
  br i1 %1977, label %1978, label %1980

; <label>:1978                                    ; preds = %1975
  %1979 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %2021

; <label>:1980                                    ; preds = %1975
  %1981 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1982 = bitcast %union.rec* %1981 to %struct.word_type*
  %1983 = getelementptr inbounds %struct.word_type, %struct.word_type* %1982, i32 0, i32 0
  %1984 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1983, i32 0, i64 1
  %1985 = getelementptr inbounds %struct.LIST, %struct.LIST* %1984, i32 0, i32 0
  %1986 = load %union.rec*, %union.rec** %1985, align 8
  store %union.rec* %1986, %union.rec** @zz_tmp, align 8
  %1987 = load %union.rec*, %union.rec** @zz_res, align 8
  %1988 = bitcast %union.rec* %1987 to %struct.word_type*
  %1989 = getelementptr inbounds %struct.word_type, %struct.word_type* %1988, i32 0, i32 0
  %1990 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1989, i32 0, i64 1
  %1991 = getelementptr inbounds %struct.LIST, %struct.LIST* %1990, i32 0, i32 0
  %1992 = load %union.rec*, %union.rec** %1991, align 8
  %1993 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1994 = bitcast %union.rec* %1993 to %struct.word_type*
  %1995 = getelementptr inbounds %struct.word_type, %struct.word_type* %1994, i32 0, i32 0
  %1996 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %1995, i32 0, i64 1
  %1997 = getelementptr inbounds %struct.LIST, %struct.LIST* %1996, i32 0, i32 0
  store %union.rec* %1992, %union.rec** %1997, align 8
  %1998 = load %union.rec*, %union.rec** @zz_hold, align 8
  %1999 = load %union.rec*, %union.rec** @zz_res, align 8
  %2000 = bitcast %union.rec* %1999 to %struct.word_type*
  %2001 = getelementptr inbounds %struct.word_type, %struct.word_type* %2000, i32 0, i32 0
  %2002 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2001, i32 0, i64 1
  %2003 = getelementptr inbounds %struct.LIST, %struct.LIST* %2002, i32 0, i32 0
  %2004 = load %union.rec*, %union.rec** %2003, align 8
  %2005 = bitcast %union.rec* %2004 to %struct.word_type*
  %2006 = getelementptr inbounds %struct.word_type, %struct.word_type* %2005, i32 0, i32 0
  %2007 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2006, i32 0, i64 1
  %2008 = getelementptr inbounds %struct.LIST, %struct.LIST* %2007, i32 0, i32 1
  store %union.rec* %1998, %union.rec** %2008, align 8
  %2009 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %2010 = load %union.rec*, %union.rec** @zz_res, align 8
  %2011 = bitcast %union.rec* %2010 to %struct.word_type*
  %2012 = getelementptr inbounds %struct.word_type, %struct.word_type* %2011, i32 0, i32 0
  %2013 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2012, i32 0, i64 1
  %2014 = getelementptr inbounds %struct.LIST, %struct.LIST* %2013, i32 0, i32 0
  store %union.rec* %2009, %union.rec** %2014, align 8
  %2015 = load %union.rec*, %union.rec** @zz_res, align 8
  %2016 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %2017 = bitcast %union.rec* %2016 to %struct.word_type*
  %2018 = getelementptr inbounds %struct.word_type, %struct.word_type* %2017, i32 0, i32 0
  %2019 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2018, i32 0, i64 1
  %2020 = getelementptr inbounds %struct.LIST, %struct.LIST* %2019, i32 0, i32 1
  store %union.rec* %2015, %union.rec** %2020, align 8
  br label %2021

; <label>:2021                                    ; preds = %1980, %1978
  %2022 = phi %union.rec* [ %1979, %1978 ], [ %2015, %1980 ]
  br label %2023

; <label>:2023                                    ; preds = %2021, %1973
  %2024 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 0), align 1
  %2025 = zext i8 %2024 to i32
  store i32 %2025, i32* @zz_size, align 4
  %2026 = sext i32 %2025 to i64
  %2027 = icmp uge i64 %2026, 265
  br i1 %2027, label %2028, label %2031

; <label>:2028                                    ; preds = %2023
  %2029 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %2030 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i32 1, %struct.FILE_POS* %2029)
  br label %2056

; <label>:2031                                    ; preds = %2023
  %2032 = load i32, i32* @zz_size, align 4
  %2033 = sext i32 %2032 to i64
  %2034 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %2033
  %2035 = load %union.rec*, %union.rec** %2034, align 8
  %2036 = icmp eq %union.rec* %2035, null
  br i1 %2036, label %2037, label %2041

; <label>:2037                                    ; preds = %2031
  %2038 = load i32, i32* @zz_size, align 4
  %2039 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %2040 = call %union.rec* @GetMemory(i32 %2038, %struct.FILE_POS* %2039)
  store %union.rec* %2040, %union.rec** @zz_hold, align 8
  br label %2055

; <label>:2041                                    ; preds = %2031
  %2042 = load i32, i32* @zz_size, align 4
  %2043 = sext i32 %2042 to i64
  %2044 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %2043
  %2045 = load %union.rec*, %union.rec** %2044, align 8
  store %union.rec* %2045, %union.rec** @zz_hold, align 8
  store %union.rec* %2045, %union.rec** @zz_hold, align 8
  %2046 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2047 = bitcast %union.rec* %2046 to %struct.word_type*
  %2048 = getelementptr inbounds %struct.word_type, %struct.word_type* %2047, i32 0, i32 0
  %2049 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2048, i32 0, i64 0
  %2050 = getelementptr inbounds %struct.LIST, %struct.LIST* %2049, i32 0, i32 0
  %2051 = load %union.rec*, %union.rec** %2050, align 8
  %2052 = load i32, i32* @zz_size, align 4
  %2053 = sext i32 %2052 to i64
  %2054 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %2053
  store %union.rec* %2051, %union.rec** %2054, align 8
  br label %2055

; <label>:2055                                    ; preds = %2041, %2037
  br label %2056

; <label>:2056                                    ; preds = %2055, %2028
  %2057 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2058 = bitcast %union.rec* %2057 to %struct.word_type*
  %2059 = getelementptr inbounds %struct.word_type, %struct.word_type* %2058, i32 0, i32 1
  %2060 = bitcast %union.FIRST_UNION* %2059 to %struct.anon*
  %2061 = getelementptr inbounds %struct.anon, %struct.anon* %2060, i32 0, i32 0
  store i8 0, i8* %2061, align 1
  %2062 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2063 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2064 = bitcast %union.rec* %2063 to %struct.word_type*
  %2065 = getelementptr inbounds %struct.word_type, %struct.word_type* %2064, i32 0, i32 0
  %2066 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2065, i32 0, i64 1
  %2067 = getelementptr inbounds %struct.LIST, %struct.LIST* %2066, i32 0, i32 1
  store %union.rec* %2062, %union.rec** %2067, align 8
  %2068 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2069 = bitcast %union.rec* %2068 to %struct.word_type*
  %2070 = getelementptr inbounds %struct.word_type, %struct.word_type* %2069, i32 0, i32 0
  %2071 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2070, i32 0, i64 1
  %2072 = getelementptr inbounds %struct.LIST, %struct.LIST* %2071, i32 0, i32 0
  store %union.rec* %2062, %union.rec** %2072, align 8
  %2073 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2074 = bitcast %union.rec* %2073 to %struct.word_type*
  %2075 = getelementptr inbounds %struct.word_type, %struct.word_type* %2074, i32 0, i32 0
  %2076 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2075, i32 0, i64 0
  %2077 = getelementptr inbounds %struct.LIST, %struct.LIST* %2076, i32 0, i32 1
  store %union.rec* %2062, %union.rec** %2077, align 8
  %2078 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2079 = bitcast %union.rec* %2078 to %struct.word_type*
  %2080 = getelementptr inbounds %struct.word_type, %struct.word_type* %2079, i32 0, i32 0
  %2081 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2080, i32 0, i64 0
  %2082 = getelementptr inbounds %struct.LIST, %struct.LIST* %2081, i32 0, i32 0
  store %union.rec* %2062, %union.rec** %2082, align 8
  store %union.rec* %2062, %union.rec** @xx_link, align 8
  %2083 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %2083, %union.rec** @zz_res, align 8
  %2084 = load %union.rec*, %union.rec** %z, align 8
  store %union.rec* %2084, %union.rec** @zz_hold, align 8
  %2085 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2086 = icmp eq %union.rec* %2085, null
  br i1 %2086, label %2087, label %2089

; <label>:2087                                    ; preds = %2056
  %2088 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %2137

; <label>:2089                                    ; preds = %2056
  %2090 = load %union.rec*, %union.rec** @zz_res, align 8
  %2091 = icmp eq %union.rec* %2090, null
  br i1 %2091, label %2092, label %2094

; <label>:2092                                    ; preds = %2089
  %2093 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %2135

; <label>:2094                                    ; preds = %2089
  %2095 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2096 = bitcast %union.rec* %2095 to %struct.word_type*
  %2097 = getelementptr inbounds %struct.word_type, %struct.word_type* %2096, i32 0, i32 0
  %2098 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2097, i32 0, i64 0
  %2099 = getelementptr inbounds %struct.LIST, %struct.LIST* %2098, i32 0, i32 0
  %2100 = load %union.rec*, %union.rec** %2099, align 8
  store %union.rec* %2100, %union.rec** @zz_tmp, align 8
  %2101 = load %union.rec*, %union.rec** @zz_res, align 8
  %2102 = bitcast %union.rec* %2101 to %struct.word_type*
  %2103 = getelementptr inbounds %struct.word_type, %struct.word_type* %2102, i32 0, i32 0
  %2104 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2103, i32 0, i64 0
  %2105 = getelementptr inbounds %struct.LIST, %struct.LIST* %2104, i32 0, i32 0
  %2106 = load %union.rec*, %union.rec** %2105, align 8
  %2107 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2108 = bitcast %union.rec* %2107 to %struct.word_type*
  %2109 = getelementptr inbounds %struct.word_type, %struct.word_type* %2108, i32 0, i32 0
  %2110 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2109, i32 0, i64 0
  %2111 = getelementptr inbounds %struct.LIST, %struct.LIST* %2110, i32 0, i32 0
  store %union.rec* %2106, %union.rec** %2111, align 8
  %2112 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2113 = load %union.rec*, %union.rec** @zz_res, align 8
  %2114 = bitcast %union.rec* %2113 to %struct.word_type*
  %2115 = getelementptr inbounds %struct.word_type, %struct.word_type* %2114, i32 0, i32 0
  %2116 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2115, i32 0, i64 0
  %2117 = getelementptr inbounds %struct.LIST, %struct.LIST* %2116, i32 0, i32 0
  %2118 = load %union.rec*, %union.rec** %2117, align 8
  %2119 = bitcast %union.rec* %2118 to %struct.word_type*
  %2120 = getelementptr inbounds %struct.word_type, %struct.word_type* %2119, i32 0, i32 0
  %2121 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2120, i32 0, i64 0
  %2122 = getelementptr inbounds %struct.LIST, %struct.LIST* %2121, i32 0, i32 1
  store %union.rec* %2112, %union.rec** %2122, align 8
  %2123 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %2124 = load %union.rec*, %union.rec** @zz_res, align 8
  %2125 = bitcast %union.rec* %2124 to %struct.word_type*
  %2126 = getelementptr inbounds %struct.word_type, %struct.word_type* %2125, i32 0, i32 0
  %2127 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2126, i32 0, i64 0
  %2128 = getelementptr inbounds %struct.LIST, %struct.LIST* %2127, i32 0, i32 0
  store %union.rec* %2123, %union.rec** %2128, align 8
  %2129 = load %union.rec*, %union.rec** @zz_res, align 8
  %2130 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %2131 = bitcast %union.rec* %2130 to %struct.word_type*
  %2132 = getelementptr inbounds %struct.word_type, %struct.word_type* %2131, i32 0, i32 0
  %2133 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2132, i32 0, i64 0
  %2134 = getelementptr inbounds %struct.LIST, %struct.LIST* %2133, i32 0, i32 1
  store %union.rec* %2129, %union.rec** %2134, align 8
  br label %2135

; <label>:2135                                    ; preds = %2094, %2092
  %2136 = phi %union.rec* [ %2093, %2092 ], [ %2129, %2094 ]
  br label %2137

; <label>:2137                                    ; preds = %2135, %2087
  %2138 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %2138, %union.rec** @zz_res, align 8
  %2139 = load %union.rec*, %union.rec** %y, align 8
  %2140 = bitcast %union.rec* %2139 to %struct.word_type*
  %2141 = getelementptr inbounds %struct.word_type, %struct.word_type* %2140, i32 0, i32 1
  %2142 = bitcast %union.FIRST_UNION* %2141 to %struct.FILE_POS*
  %2143 = call %union.rec* @MakeWord(i32 11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), %struct.FILE_POS* %2142)
  store %union.rec* %2143, %union.rec** @zz_hold, align 8
  %2144 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2145 = icmp eq %union.rec* %2144, null
  br i1 %2145, label %2146, label %2148

; <label>:2146                                    ; preds = %2137
  %2147 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %2196

; <label>:2148                                    ; preds = %2137
  %2149 = load %union.rec*, %union.rec** @zz_res, align 8
  %2150 = icmp eq %union.rec* %2149, null
  br i1 %2150, label %2151, label %2153

; <label>:2151                                    ; preds = %2148
  %2152 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %2194

; <label>:2153                                    ; preds = %2148
  %2154 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2155 = bitcast %union.rec* %2154 to %struct.word_type*
  %2156 = getelementptr inbounds %struct.word_type, %struct.word_type* %2155, i32 0, i32 0
  %2157 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2156, i32 0, i64 1
  %2158 = getelementptr inbounds %struct.LIST, %struct.LIST* %2157, i32 0, i32 0
  %2159 = load %union.rec*, %union.rec** %2158, align 8
  store %union.rec* %2159, %union.rec** @zz_tmp, align 8
  %2160 = load %union.rec*, %union.rec** @zz_res, align 8
  %2161 = bitcast %union.rec* %2160 to %struct.word_type*
  %2162 = getelementptr inbounds %struct.word_type, %struct.word_type* %2161, i32 0, i32 0
  %2163 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2162, i32 0, i64 1
  %2164 = getelementptr inbounds %struct.LIST, %struct.LIST* %2163, i32 0, i32 0
  %2165 = load %union.rec*, %union.rec** %2164, align 8
  %2166 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2167 = bitcast %union.rec* %2166 to %struct.word_type*
  %2168 = getelementptr inbounds %struct.word_type, %struct.word_type* %2167, i32 0, i32 0
  %2169 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2168, i32 0, i64 1
  %2170 = getelementptr inbounds %struct.LIST, %struct.LIST* %2169, i32 0, i32 0
  store %union.rec* %2165, %union.rec** %2170, align 8
  %2171 = load %union.rec*, %union.rec** @zz_hold, align 8
  %2172 = load %union.rec*, %union.rec** @zz_res, align 8
  %2173 = bitcast %union.rec* %2172 to %struct.word_type*
  %2174 = getelementptr inbounds %struct.word_type, %struct.word_type* %2173, i32 0, i32 0
  %2175 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2174, i32 0, i64 1
  %2176 = getelementptr inbounds %struct.LIST, %struct.LIST* %2175, i32 0, i32 0
  %2177 = load %union.rec*, %union.rec** %2176, align 8
  %2178 = bitcast %union.rec* %2177 to %struct.word_type*
  %2179 = getelementptr inbounds %struct.word_type, %struct.word_type* %2178, i32 0, i32 0
  %2180 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2179, i32 0, i64 1
  %2181 = getelementptr inbounds %struct.LIST, %struct.LIST* %2180, i32 0, i32 1
  store %union.rec* %2171, %union.rec** %2181, align 8
  %2182 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %2183 = load %union.rec*, %union.rec** @zz_res, align 8
  %2184 = bitcast %union.rec* %2183 to %struct.word_type*
  %2185 = getelementptr inbounds %struct.word_type, %struct.word_type* %2184, i32 0, i32 0
  %2186 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2185, i32 0, i64 1
  %2187 = getelementptr inbounds %struct.LIST, %struct.LIST* %2186, i32 0, i32 0
  store %union.rec* %2182, %union.rec** %2187, align 8
  %2188 = load %union.rec*, %union.rec** @zz_res, align 8
  %2189 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %2190 = bitcast %union.rec* %2189 to %struct.word_type*
  %2191 = getelementptr inbounds %struct.word_type, %struct.word_type* %2190, i32 0, i32 0
  %2192 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2191, i32 0, i64 1
  %2193 = getelementptr inbounds %struct.LIST, %struct.LIST* %2192, i32 0, i32 1
  store %union.rec* %2188, %union.rec** %2193, align 8
  br label %2194

; <label>:2194                                    ; preds = %2153, %2151
  %2195 = phi %union.rec* [ %2152, %2151 ], [ %2188, %2153 ]
  br label %2196

; <label>:2196                                    ; preds = %2194, %2146
  %2197 = load i32, i32* %start, align 4
  %2198 = load i32, i32* %i, align 4
  %2199 = add nsw i32 %2197, %2198
  %2200 = sub nsw i32 %2199, 1
  %2201 = sext i32 %2200 to i64
  %2202 = load i8*, i8** %key, align 8
  %2203 = getelementptr inbounds i8, i8* %2202, i64 %2201
  store i8 0, i8* %2203, align 1
  store i32 1, i32* %hyphenated, align 4
  br label %2204

; <label>:2204                                    ; preds = %2196, %1425
  br label %2205

; <label>:2205                                    ; preds = %2204
  %2206 = load i32, i32* %i, align 4
  %2207 = add nsw i32 %2206, -1
  store i32 %2207, i32* %i, align 4
  br label %1422

; <label>:2208                                    ; preds = %1422
  %2209 = load i32, i32* %hyphenated, align 4
  %2210 = icmp ne i32 %2209, 0
  br i1 %2210, label %2211, label %2219

; <label>:2211                                    ; preds = %2208
  %2212 = load %union.rec*, %union.rec** %y, align 8
  call void @FontWordSize(%union.rec* %2212)
  %2213 = load %union.rec*, %union.rec** %next_link, align 8
  %2214 = bitcast %union.rec* %2213 to %struct.word_type*
  %2215 = getelementptr inbounds %struct.word_type, %struct.word_type* %2214, i32 0, i32 0
  %2216 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2215, i32 0, i64 0
  %2217 = getelementptr inbounds %struct.LIST, %struct.LIST* %2216, i32 0, i32 0
  %2218 = load %union.rec*, %union.rec** %2217, align 8
  store %union.rec* %2218, %union.rec** %link, align 8
  br label %2219

; <label>:2219                                    ; preds = %2211, %2208
  br label %2220

; <label>:2220                                    ; preds = %2219, %1023, %1002, %984, %216, %155, %108
  %2221 = load %union.rec*, %union.rec** %link, align 8
  %2222 = bitcast %union.rec* %2221 to %struct.word_type*
  %2223 = getelementptr inbounds %struct.word_type, %struct.word_type* %2222, i32 0, i32 0
  %2224 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %2223, i32 0, i64 0
  %2225 = getelementptr inbounds %struct.LIST, %struct.LIST* %2224, i32 0, i32 1
  %2226 = load %union.rec*, %union.rec** %2225, align 8
  store %union.rec* %2226, %union.rec** %link, align 8
  br label %20

; <label>:2227                                    ; preds = %20
  %2228 = load %union.rec*, %union.rec** %1, align 8
  ret %union.rec* %2228
}

declare %union.rec* @MakeWord(i32, i8*, %struct.FILE_POS*) #1

declare void @FontWordSize(%union.rec*) #1

declare %union.rec* @GetMemory(i32, %struct.FILE_POS*) #1

declare %union.rec* @LanguageHyph(i32) #1

declare zeroext i16 @DefineFile(i8*, i8*, %struct.FILE_POS*, i32, i32) #1

declare %struct._IO_FILE* @OpenFile(i16 zeroext, i32, i32) #1

declare i8* @FileName(i16 zeroext) #1

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @TrieInsert(i8* %key, i8* %value, %struct.trie_rec* %T, i8* %fname, i32 %hline_num) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.trie_rec*, align 8
  %res.i.3 = alloca i16, align 2
  %3 = alloca i8*, align 8
  %4 = alloca %struct.trie_rec*, align 8
  %res.i.1 = alloca i16, align 2
  %5 = alloca i8*, align 8
  %6 = alloca %struct.trie_rec*, align 8
  %res.i = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.trie_rec*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %str = alloca [512 x i8], align 16
  %compressed_value = alloca [512 x i8], align 16
  %i = alloca i32, align 4
  %curr_node = alloca i32, align 4
  %next_node = alloca i32, align 4
  %pos = alloca i32, align 4
  %ch = alloca i32, align 4
  %strpos = alloca i16, align 2
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %prev = alloca i8*, align 8
  %i1 = alloca i32, align 4
  store i8* %key, i8** %8, align 8
  store i8* %value, i8** %9, align 8
  store %struct.trie_rec* %T, %struct.trie_rec** %10, align 8
  store i8* %fname, i8** %11, align 8
  store i32 %hline_num, i32* %12, align 4
  %13 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %14 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

; <label>:17                                      ; preds = %0
  %18 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %19 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %20, 1
  %22 = sdiv i32 %21, 4
  %23 = add nsw i32 %22, 1
  %24 = mul nsw i32 4, %23
  %25 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %26 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %25, i32 0, i32 1
  store i32 %24, i32* %26, align 4
  %27 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %28 = call i32 @NewTrieNode(%struct.trie_rec* %27)
  store i32 %28, i32* %ch, align 4
  br label %29

; <label>:29                                      ; preds = %17, %0
  %30 = load i8*, i8** %9, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 -1
  store i8* %31, i8** %prev, align 8
  %32 = getelementptr inbounds [512 x i8], [512 x i8]* %compressed_value, i32 0, i32 0
  store i8* %32, i8** %p, align 8
  %33 = load i8*, i8** %9, align 8
  store i8* %33, i8** %q, align 8
  br label %34

; <label>:34                                      ; preds = %72, %29
  %35 = load i8*, i8** %q, align 8
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %75

; <label>:39                                      ; preds = %34
  %40 = load i8*, i8** %q, align 8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp ne i32 %42, 48
  br i1 %43, label %52, label %44

; <label>:44                                      ; preds = %39
  %45 = load i8*, i8** %q, align 8
  %46 = load i8*, i8** %prev, align 8
  %47 = ptrtoint i8* %45 to i64
  %48 = ptrtoint i8* %46 to i64
  %49 = sub i64 %47, %48
  %50 = sub nsw i64 %49, 1
  %51 = icmp sge i64 %50, 15
  br i1 %51, label %52, label %71

; <label>:52                                      ; preds = %44, %39
  %53 = load i8*, i8** %q, align 8
  %54 = load i8*, i8** %prev, align 8
  %55 = ptrtoint i8* %53 to i64
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub nsw i64 %57, 1
  %59 = shl i64 %58, 4
  %60 = load i8*, i8** %q, align 8
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 %62, 48
  %64 = add nsw i32 %63, 2
  %65 = sext i32 %64 to i64
  %66 = or i64 %59, %65
  %67 = trunc i64 %66 to i8
  %68 = load i8*, i8** %p, align 8
  %69 = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %69, i8** %p, align 8
  store i8 %67, i8* %68, align 1
  %70 = load i8*, i8** %q, align 8
  store i8* %70, i8** %prev, align 8
  br label %71

; <label>:71                                      ; preds = %52, %44
  br label %72

; <label>:72                                      ; preds = %71
  %73 = load i8*, i8** %q, align 8
  %74 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %74, i8** %q, align 8
  br label %34

; <label>:75                                      ; preds = %34
  %76 = load i8*, i8** %p, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %p, align 8
  store i8 0, i8* %76, align 1
  store i32 0, i32* %i1, align 4
  br label %78

; <label>:78                                      ; preds = %125, %75
  %79 = load i32, i32* %i1, align 4
  %80 = sext i32 %79 to i64
  %81 = load i8*, i8** %8, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %80
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %128

; <label>:86                                      ; preds = %78
  %87 = load i32, i32* %i1, align 4
  %88 = sext i32 %87 to i64
  %89 = load i8*, i8** %8, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %94 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %93, i32 0, i32 2
  %95 = getelementptr inbounds [256 x i8], [256 x i8]* %94, i32 0, i64 %92
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %113

; <label>:99                                      ; preds = %86
  %100 = load i32, i32* %i1, align 4
  %101 = sext i32 %100 to i64
  %102 = load i8*, i8** %8, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %101
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %107 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %106, i32 0, i32 2
  %108 = getelementptr inbounds [256 x i8], [256 x i8]* %107, i32 0, i64 %105
  %109 = load i8, i8* %108, align 1
  %110 = load i32, i32* %i1, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %111
  store i8 %109, i8* %112, align 1
  br label %124

; <label>:113                                     ; preds = %86
  %114 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %115 = load i8*, i8** %11, align 8
  %116 = load i32, i32* %12, align 4
  %117 = load i32, i32* %i1, align 4
  %118 = sext i32 %117 to i64
  %119 = load i8*, i8** %8, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %118
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.170, i32 0, i32 0), i32 1, %struct.FILE_POS* %114, i8* %115, i32 %116, i32 %122)
  br label %124

; <label>:124                                     ; preds = %113, %99
  br label %125

; <label>:125                                     ; preds = %124
  %126 = load i32, i32* %i1, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %i1, align 4
  br label %78

; <label>:128                                     ; preds = %78
  %129 = load i32, i32* %i1, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %130
  store i8 0, i8* %131, align 1
  store i32 0, i32* %i, align 4
  store i32 0, i32* %curr_node, align 4
  br label %132

; <label>:132                                     ; preds = %373, %128
  %133 = load i32, i32* %i, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %204

; <label>:139                                     ; preds = %132
  %140 = load i32, i32* %curr_node, align 4
  %141 = sext i32 %140 to i64
  %142 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %143 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %142, i32 0, i32 3
  %144 = load i16*, i16** %143, align 8
  %145 = getelementptr inbounds i16, i16* %144, i64 %141
  %146 = load i16, i16* %145, align 2
  %147 = sext i16 %146 to i32
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %153

; <label>:149                                     ; preds = %139
  %150 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %151 = load i8*, i8** %8, align 8
  %152 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.171, i32 0, i32 0), i32 0, %struct.FILE_POS* %150, i8* %151)
  br label %203

; <label>:153                                     ; preds = %139
  %154 = getelementptr inbounds [512 x i8], [512 x i8]* %compressed_value, i32 0, i32 0
  %155 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %156 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %156)
  %157 = bitcast %struct.trie_rec** %6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %157)
  %158 = bitcast i16* %res.i to i8*
  call void @llvm.lifetime.start(i64 2, i8* %158)
  store i8* %154, i8** %5, align 8
  store %struct.trie_rec* %155, %struct.trie_rec** %6, align 8
  %159 = load %struct.trie_rec*, %struct.trie_rec** %6, align 8
  %160 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %159, i32 0, i32 8
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = load i8*, i8** %5, align 8
  %164 = call i64 @strlen(i8* %163) #5
  %165 = sub i64 %162, %164
  %166 = sub i64 %165, 1
  %167 = trunc i64 %166 to i16
  store i16 %167, i16* %res.i, align 2
  %168 = load i16, i16* %res.i, align 2
  %169 = sext i16 %168 to i32
  %170 = icmp sge i32 %169, 0
  br i1 %170, label %171, label %NewTrieString.exit

; <label>:171                                     ; preds = %153
  %172 = load i16, i16* %res.i, align 2
  %173 = sext i16 %172 to i32
  %174 = load %struct.trie_rec*, %struct.trie_rec** %6, align 8
  %175 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %174, i32 0, i32 8
  store i32 %173, i32* %175, align 4
  %176 = load i16, i16* %res.i, align 2
  %177 = sext i16 %176 to i64
  %178 = load %struct.trie_rec*, %struct.trie_rec** %6, align 8
  %179 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %178, i32 0, i32 6
  %180 = load i8*, i8** %179, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 %177
  %182 = load i8*, i8** %5, align 8
  %183 = call i8* @strcpy(i8* %181, i8* %182) #4
  br label %NewTrieString.exit

NewTrieString.exit:                               ; preds = %171, %153
  %184 = load i16, i16* %res.i, align 2
  %185 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %185)
  %186 = bitcast %struct.trie_rec** %6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %186)
  %187 = bitcast i16* %res.i to i8*
  call void @llvm.lifetime.end(i64 2, i8* %187)
  store i16 %184, i16* %strpos, align 2
  %188 = load i16, i16* %strpos, align 2
  %189 = sext i16 %188 to i32
  %190 = icmp slt i32 %189, 0
  br i1 %190, label %191, label %192

; <label>:191                                     ; preds = %NewTrieString.exit
  store i32 0, i32* %7
  br label %378

; <label>:192                                     ; preds = %NewTrieString.exit
  %193 = load i16, i16* %strpos, align 2
  %194 = sext i16 %193 to i32
  %195 = sub nsw i32 0, %194
  %196 = trunc i32 %195 to i16
  %197 = load i32, i32* %curr_node, align 4
  %198 = sext i32 %197 to i64
  %199 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %200 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %199, i32 0, i32 3
  %201 = load i16*, i16** %200, align 8
  %202 = getelementptr inbounds i16, i16* %201, i64 %198
  store i16 %196, i16* %202, align 2
  br label %203

; <label>:203                                     ; preds = %192, %149
  store i32 1, i32* %7
  br label %378

; <label>:204                                     ; preds = %132
  %205 = load i32, i32* %curr_node, align 4
  %206 = load i32, i32* %i, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = add nsw i32 %205, %210
  %212 = sext i32 %211 to i64
  %213 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %214 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %213, i32 0, i32 3
  %215 = load i16*, i16** %214, align 8
  %216 = getelementptr inbounds i16, i16* %215, i64 %212
  %217 = load i16, i16* %216, align 2
  %218 = sext i16 %217 to i32
  store i32 %218, i32* %next_node, align 4
  %219 = load i32, i32* %next_node, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %319

; <label>:221                                     ; preds = %204
  %222 = getelementptr inbounds [512 x i8], [512 x i8]* %compressed_value, i32 0, i32 0
  %223 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %224 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %224)
  %225 = bitcast %struct.trie_rec** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %225)
  %226 = bitcast i16* %res.i.1 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %226)
  store i8* %222, i8** %3, align 8
  store %struct.trie_rec* %223, %struct.trie_rec** %4, align 8
  %227 = load %struct.trie_rec*, %struct.trie_rec** %4, align 8
  %228 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %227, i32 0, i32 8
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = load i8*, i8** %3, align 8
  %232 = call i64 @strlen(i8* %231) #5
  %233 = sub i64 %230, %232
  %234 = sub i64 %233, 1
  %235 = trunc i64 %234 to i16
  store i16 %235, i16* %res.i.1, align 2
  %236 = load i16, i16* %res.i.1, align 2
  %237 = sext i16 %236 to i32
  %238 = icmp sge i32 %237, 0
  br i1 %238, label %239, label %NewTrieString.exit2

; <label>:239                                     ; preds = %221
  %240 = load i16, i16* %res.i.1, align 2
  %241 = sext i16 %240 to i32
  %242 = load %struct.trie_rec*, %struct.trie_rec** %4, align 8
  %243 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %242, i32 0, i32 8
  store i32 %241, i32* %243, align 4
  %244 = load i16, i16* %res.i.1, align 2
  %245 = sext i16 %244 to i64
  %246 = load %struct.trie_rec*, %struct.trie_rec** %4, align 8
  %247 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %246, i32 0, i32 6
  %248 = load i8*, i8** %247, align 8
  %249 = getelementptr inbounds i8, i8* %248, i64 %245
  %250 = load i8*, i8** %3, align 8
  %251 = call i8* @strcpy(i8* %249, i8* %250) #4
  br label %NewTrieString.exit2

NewTrieString.exit2:                              ; preds = %239, %221
  %252 = load i16, i16* %res.i.1, align 2
  %253 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %253)
  %254 = bitcast %struct.trie_rec** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %254)
  %255 = bitcast i16* %res.i.1 to i8*
  call void @llvm.lifetime.end(i64 2, i8* %255)
  %256 = sext i16 %252 to i32
  store i32 %256, i32* %ch, align 4
  %257 = load i32, i32* %ch, align 4
  %258 = icmp slt i32 %257, 0
  br i1 %258, label %259, label %260

; <label>:259                                     ; preds = %NewTrieString.exit2
  store i32 0, i32* %7
  br label %378

; <label>:260                                     ; preds = %NewTrieString.exit2
  %261 = load i32, i32* %i, align 4
  %262 = add nsw i32 %261, 1
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %263
  %265 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %266 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %266)
  %267 = bitcast %struct.trie_rec** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %267)
  %268 = bitcast i16* %res.i.3 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %268)
  store i8* %264, i8** %1, align 8
  store %struct.trie_rec* %265, %struct.trie_rec** %2, align 8
  %269 = load %struct.trie_rec*, %struct.trie_rec** %2, align 8
  %270 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %269, i32 0, i32 8
  %271 = load i32, i32* %270, align 4
  %272 = sext i32 %271 to i64
  %273 = load i8*, i8** %1, align 8
  %274 = call i64 @strlen(i8* %273) #5
  %275 = sub i64 %272, %274
  %276 = sub i64 %275, 1
  %277 = trunc i64 %276 to i16
  store i16 %277, i16* %res.i.3, align 2
  %278 = load i16, i16* %res.i.3, align 2
  %279 = sext i16 %278 to i32
  %280 = icmp sge i32 %279, 0
  br i1 %280, label %281, label %NewTrieString.exit4

; <label>:281                                     ; preds = %260
  %282 = load i16, i16* %res.i.3, align 2
  %283 = sext i16 %282 to i32
  %284 = load %struct.trie_rec*, %struct.trie_rec** %2, align 8
  %285 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %284, i32 0, i32 8
  store i32 %283, i32* %285, align 4
  %286 = load i16, i16* %res.i.3, align 2
  %287 = sext i16 %286 to i64
  %288 = load %struct.trie_rec*, %struct.trie_rec** %2, align 8
  %289 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %288, i32 0, i32 6
  %290 = load i8*, i8** %289, align 8
  %291 = getelementptr inbounds i8, i8* %290, i64 %287
  %292 = load i8*, i8** %1, align 8
  %293 = call i8* @strcpy(i8* %291, i8* %292) #4
  br label %NewTrieString.exit4

NewTrieString.exit4:                              ; preds = %281, %260
  %294 = load i16, i16* %res.i.3, align 2
  %295 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %295)
  %296 = bitcast %struct.trie_rec** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %296)
  %297 = bitcast i16* %res.i.3 to i8*
  call void @llvm.lifetime.end(i64 2, i8* %297)
  store i16 %294, i16* %strpos, align 2
  %298 = load i16, i16* %strpos, align 2
  %299 = sext i16 %298 to i32
  %300 = icmp slt i32 %299, 0
  br i1 %300, label %301, label %302

; <label>:301                                     ; preds = %NewTrieString.exit4
  store i32 0, i32* %7
  br label %378

; <label>:302                                     ; preds = %NewTrieString.exit4
  %303 = load i16, i16* %strpos, align 2
  %304 = sext i16 %303 to i32
  %305 = sub nsw i32 0, %304
  %306 = trunc i32 %305 to i16
  %307 = load i32, i32* %curr_node, align 4
  %308 = load i32, i32* %i, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = add nsw i32 %307, %312
  %314 = sext i32 %313 to i64
  %315 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %316 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %315, i32 0, i32 3
  %317 = load i16*, i16** %316, align 8
  %318 = getelementptr inbounds i16, i16* %317, i64 %314
  store i16 %306, i16* %318, align 2
  store i32 1, i32* %7
  br label %378

; <label>:319                                     ; preds = %204
  %320 = load i32, i32* %next_node, align 4
  %321 = icmp slt i32 %320, 0
  br i1 %321, label %322, label %373

; <label>:322                                     ; preds = %319
  %323 = load i32, i32* %next_node, align 4
  %324 = sub nsw i32 0, %323
  store i32 %324, i32* %pos, align 4
  %325 = load i32, i32* %pos, align 4
  %326 = sext i32 %325 to i64
  %327 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %328 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %327, i32 0, i32 6
  %329 = load i8*, i8** %328, align 8
  %330 = getelementptr inbounds i8, i8* %329, i64 %326
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %331 to i32
  store i32 %332, i32* %ch, align 4
  %333 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %334 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %333, i32 0, i32 8
  %335 = load i32, i32* %334, align 4
  %336 = load i32, i32* %pos, align 4
  %337 = icmp eq i32 %335, %336
  br i1 %337, label %338, label %343

; <label>:338                                     ; preds = %322
  %339 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %340 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %339, i32 0, i32 8
  %341 = load i32, i32* %340, align 4
  %342 = add nsw i32 %341, 1
  store i32 %342, i32* %340, align 4
  br label %343

; <label>:343                                     ; preds = %338, %322
  %344 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %345 = call i32 @NewTrieNode(%struct.trie_rec* %344)
  %346 = sdiv i32 %345, 4
  store i32 %346, i32* %next_node, align 4
  %347 = trunc i32 %346 to i16
  %348 = load i32, i32* %curr_node, align 4
  %349 = load i32, i32* %i, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = add nsw i32 %348, %353
  %355 = sext i32 %354 to i64
  %356 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %357 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %356, i32 0, i32 3
  %358 = load i16*, i16** %357, align 8
  %359 = getelementptr inbounds i16, i16* %358, i64 %355
  store i16 %347, i16* %359, align 2
  %360 = load i32, i32* %pos, align 4
  %361 = add nsw i32 %360, 1
  %362 = sub nsw i32 0, %361
  %363 = trunc i32 %362 to i16
  %364 = load i32, i32* %next_node, align 4
  %365 = mul nsw i32 4, %364
  %366 = load i32, i32* %ch, align 4
  %367 = add nsw i32 %365, %366
  %368 = sext i32 %367 to i64
  %369 = load %struct.trie_rec*, %struct.trie_rec** %10, align 8
  %370 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %369, i32 0, i32 3
  %371 = load i16*, i16** %370, align 8
  %372 = getelementptr inbounds i16, i16* %371, i64 %368
  store i16 %363, i16* %372, align 2
  br label %373

; <label>:373                                     ; preds = %343, %319
  %374 = load i32, i32* %next_node, align 4
  %375 = mul nsw i32 4, %374
  store i32 %375, i32* %curr_node, align 4
  %376 = load i32, i32* %i, align 4
  %377 = add nsw i32 %376, 1
  store i32 %377, i32* %i, align 4
  br label %132

; <label>:378                                     ; preds = %302, %301, %259, %203, %191
  %379 = load i32, i32* %7
  ret i32 %379
}

declare i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

declare i32 @_IO_putc(i32, %struct._IO_FILE*) #1

; Function Attrs: nounwind
declare void @free(i8*) #3

declare i32 @fseek(%struct._IO_FILE*, i64, i32) #1

declare i64 @ftell(%struct._IO_FILE*) #1

declare void @rewind(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @BeGetInt(%struct._IO_FILE* %fp, i32* %pv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32*, align 8
  %c = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %2, align 8
  store i32* %pv, i32** %3, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %5 = call i32 @_IO_getc(%struct._IO_FILE* %4)
  store i32 %5, i32* %c, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i32 -1, i32* %1
  br label %45

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %c, align 4
  %10 = and i32 %9, 255
  %11 = shl i32 %10, 24
  %12 = load i32*, i32** %3, align 8
  store i32 %11, i32* %12, align 4
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %14 = call i32 @_IO_getc(%struct._IO_FILE* %13)
  store i32 %14, i32* %c, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %8
  store i32 -1, i32* %1
  br label %45

; <label>:17                                      ; preds = %8
  %18 = load i32, i32* %c, align 4
  %19 = and i32 %18, 255
  %20 = shl i32 %19, 16
  %21 = load i32*, i32** %3, align 8
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %22, %20
  store i32 %23, i32* %21, align 4
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %25 = call i32 @_IO_getc(%struct._IO_FILE* %24)
  store i32 %25, i32* %c, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %17
  store i32 -1, i32* %1
  br label %45

; <label>:28                                      ; preds = %17
  %29 = load i32, i32* %c, align 4
  %30 = and i32 %29, 255
  %31 = shl i32 %30, 8
  %32 = load i32*, i32** %3, align 8
  %33 = load i32, i32* %32, align 4
  %34 = or i32 %33, %31
  store i32 %34, i32* %32, align 4
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %36 = call i32 @_IO_getc(%struct._IO_FILE* %35)
  store i32 %36, i32* %c, align 4
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %39

; <label>:38                                      ; preds = %28
  store i32 -1, i32* %1
  br label %45

; <label>:39                                      ; preds = %28
  %40 = load i32, i32* %c, align 4
  %41 = and i32 %40, 255
  %42 = load i32*, i32** %3, align 8
  %43 = load i32, i32* %42, align 4
  %44 = or i32 %43, %41
  store i32 %44, i32* %42, align 4
  store i32 0, i32* %1
  br label %45

; <label>:45                                      ; preds = %39, %38, %27, %16, %7
  %46 = load i32, i32* %1
  ret i32 %46
}

declare i32 @_IO_getc(%struct._IO_FILE*) #1

declare i32 @StringBeginsWith(i8*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @NewTrieNode(%struct.trie_rec* %T) #0 {
  %1 = alloca %struct.trie_rec*, align 8
  %i = alloca i32, align 4
  %res = alloca i32, align 4
  store %struct.trie_rec* %T, %struct.trie_rec** %1, align 8
  %2 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %3 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %2, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %6 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %4, %7
  %9 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %10 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %8, %11
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %0
  %14 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %15 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 36, i32 5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.172, i32 0, i32 0), i32 0, %struct.FILE_POS* %14)
  br label %16

; <label>:16                                      ; preds = %13, %0
  %17 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %18 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %17, i32 0, i32 5
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %res, align 4
  %20 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %21 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %24 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %23, i32 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, %22
  store i32 %26, i32* %24, align 4
  %27 = load i32, i32* %res, align 4
  store i32 %27, i32* %i, align 4
  br label %28

; <label>:28                                      ; preds = %41, %16
  %29 = load i32, i32* %i, align 4
  %30 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %31 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %30, i32 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %29, %32
  br i1 %33, label %34, label %44

; <label>:34                                      ; preds = %28
  %35 = load i32, i32* %i, align 4
  %36 = sext i32 %35 to i64
  %37 = load %struct.trie_rec*, %struct.trie_rec** %1, align 8
  %38 = getelementptr inbounds %struct.trie_rec, %struct.trie_rec* %37, i32 0, i32 3
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds i16, i16* %39, i64 %36
  store i16 0, i16* %40, align 2
  br label %41

; <label>:41                                      ; preds = %34
  %42 = load i32, i32* %i, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %i, align 4
  br label %28

; <label>:44                                      ; preds = %28
  %45 = load i32, i32* %res, align 4
  ret i32 %45
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
