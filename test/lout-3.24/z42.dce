; ModuleID = 'z42.opt'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.anon = type { i32, i32, [1 x %struct.coltab_rec] }
%struct.coltab_rec = type { %union.rec*, %union.rec* }
%union.rec = type { %struct.head_type }
%struct.head_type = type { [2 x %struct.LIST], %union.FIRST_UNION, %union.SECOND_UNION, %union.THIRD_UNION, %union.FOURTH_UNION, %union.rec*, %union.anon.14, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, %union.rec*, i32 }
%struct.LIST = type { %union.rec*, %union.rec* }
%union.FIRST_UNION = type { %struct.FILE_POS }
%struct.FILE_POS = type { i8, i8, i16, i32 }
%union.SECOND_UNION = type { %struct.anon.2 }
%struct.anon.2 = type { i32 }
%union.THIRD_UNION = type { %struct._IO_FILE*, [8 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%union.FOURTH_UNION = type { %struct.STYLE }
%struct.STYLE = type { %union.anon, %union.anon.11, i16, i16, i32 }
%union.anon = type { %struct.GAP }
%struct.GAP = type { i16, i16 }
%union.anon.11 = type { %struct.GAP }
%union.anon.14 = type { %union.rec* }
%struct.back_end_rec = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct._IO_FILE*)*, void (i8*, i32, i32)*, void (%union.rec*, i32, i8*, i8*)*, void (i8*, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32, i8*)*, void ()*, void (%union.rec*, i32, i32)*, void (%union.rec*, i32, i32, %union.rec*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32)*, void (float, float)*, void (%union.rec*)*, void ()*, void (%union.rec*)*, void (%union.rec*)*, void (%union.rec*, i32, i32)*, void (%union.rec*, i32, i32)*, void (%union.rec*, i32, i32, i32, i32)*, void (%union.rec*, i32, i32, i32, i32)*, void (...)* }
%struct.word_type = type { [2 x %struct.LIST], %union.FIRST_UNION, %union.SECOND_UNION, %union.THIRD_UNION, [4 x i8] }
%struct.anon.0 = type { i8, i8, i32 }

@col_tab = internal global %struct.anon* null, align 8
@.str = private unnamed_addr constant [36 x i8] c"%s ignored (illegal left parameter)\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"@SetColour\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@BackEnd = external global %struct.back_end_rec*, align 8
@.str.3 = private unnamed_addr constant [34 x i8] c"%s ignored (empty left parameter)\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"nochange\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"assert failed in %s\00", align 1
@no_fpos = external global %struct.FILE_POS*, align 8
@.str.6 = private unnamed_addr constant [22 x i8] c"ColourCommand: number\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"ran out of memory when enlarging colour table\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"too many colours (maximum is %d)\00", align 1
@zz_lengths = external global [0 x i8], align 1
@zz_size = external global i32, align 4
@.str.9 = private unnamed_addr constant [17 x i8] c"word is too long\00", align 1
@zz_free = external global [0 x %union.rec*], align 8
@zz_hold = external global %union.rec*, align 8
@xx_link = external global %union.rec*, align 8
@zz_res = external global %union.rec*, align 8
@zz_tmp = external global %union.rec*, align 8

; Function Attrs: nounwind uwtable
define void @ColourInit() #0 {
  %1 = call %struct.anon* @ctab_new(i32 100)
  store %struct.anon* %1, %struct.anon** @col_tab, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.anon* @ctab_new(i32 %newsize) #0 {
  %1 = alloca i32, align 4
  %S = alloca %struct.anon*, align 8
  %i = alloca i32, align 4
  store i32 %newsize, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = sext i32 %2 to i64
  %4 = mul i64 %3, 16
  %5 = add i64 8, %4
  %6 = call noalias i8* @malloc(i64 %5) #4
  %7 = bitcast i8* %6 to %struct.anon*
  store %struct.anon* %7, %struct.anon** %S, align 8
  %8 = load %struct.anon*, %struct.anon** %S, align 8
  %9 = icmp eq %struct.anon* %8, null
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %0
  %11 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %12 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 42, i32 1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i32 0, i32 0), i32 1, %struct.FILE_POS* %11)
  br label %13

; <label>:13                                      ; preds = %10, %0
  %14 = load i32, i32* %1, align 4
  %15 = load %struct.anon*, %struct.anon** %S, align 8
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i32 0, i32 0
  store i32 %14, i32* %16, align 4
  %17 = load %struct.anon*, %struct.anon** %S, align 8
  %18 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 1
  store i32 0, i32* %18, align 4
  store i32 0, i32* %i, align 4
  br label %19

; <label>:19                                      ; preds = %36, %13
  %20 = load i32, i32* %i, align 4
  %21 = load i32, i32* %1, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %39

; <label>:23                                      ; preds = %19
  %24 = load i32, i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = load %struct.anon*, %struct.anon** %S, align 8
  %27 = getelementptr inbounds %struct.anon, %struct.anon* %26, i32 0, i32 2
  %28 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %27, i32 0, i64 %25
  %29 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %28, i32 0, i32 1
  store %union.rec* null, %union.rec** %29, align 8
  %30 = load i32, i32* %i, align 4
  %31 = sext i32 %30 to i64
  %32 = load %struct.anon*, %struct.anon** %S, align 8
  %33 = getelementptr inbounds %struct.anon, %struct.anon* %32, i32 0, i32 2
  %34 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %33, i32 0, i64 %31
  %35 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %34, i32 0, i32 0
  store %union.rec* null, %union.rec** %35, align 8
  br label %36

; <label>:36                                      ; preds = %23
  %37 = load i32, i32* %i, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %i, align 4
  br label %19

; <label>:39                                      ; preds = %19
  %40 = load %struct.anon*, %struct.anon** %S, align 8
  ret %struct.anon* %40
}

; Function Attrs: nounwind uwtable
define void @ColourChange(%struct.STYLE* %style, %union.rec* %x) #0 {
  %1 = alloca %union.rec*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca %struct.anon*, align 8
  %x.i = alloca %union.rec*, align 8
  %link.i = alloca %union.rec*, align 8
  %y.i = alloca %union.rec*, align 8
  %pos.i = alloca i32, align 4
  %p.i = alloca i8*, align 8
  %4 = alloca %struct.STYLE*, align 8
  %5 = alloca %union.rec*, align 8
  %cname = alloca %union.rec*, align 8
  store %struct.STYLE* %style, %struct.STYLE** %4, align 8
  store %union.rec* %x, %union.rec** %5, align 8
  %6 = load %union.rec*, %union.rec** %5, align 8
  %7 = bitcast %union.rec* %6 to %struct.word_type*
  %8 = getelementptr inbounds %struct.word_type, %struct.word_type* %7, i32 0, i32 1
  %9 = bitcast %union.FIRST_UNION* %8 to %struct.anon.0*
  %10 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %9, i32 0, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 11
  br i1 %13, label %29, label %14

; <label>:14                                      ; preds = %0
  %15 = load %union.rec*, %union.rec** %5, align 8
  %16 = bitcast %union.rec* %15 to %struct.word_type*
  %17 = getelementptr inbounds %struct.word_type, %struct.word_type* %16, i32 0, i32 1
  %18 = bitcast %union.FIRST_UNION* %17 to %struct.anon.0*
  %19 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %18, i32 0, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 12
  br i1 %22, label %29, label %23

; <label>:23                                      ; preds = %14
  %24 = load %union.rec*, %union.rec** %5, align 8
  %25 = bitcast %union.rec* %24 to %struct.word_type*
  %26 = getelementptr inbounds %struct.word_type, %struct.word_type* %25, i32 0, i32 1
  %27 = bitcast %union.FIRST_UNION* %26 to %struct.FILE_POS*
  %28 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 42, i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i32 0, i32 0), i32 2, %struct.FILE_POS* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0))
  br label %214

; <label>:29                                      ; preds = %14, %0
  %30 = load %union.rec*, %union.rec** %5, align 8
  %31 = bitcast %union.rec* %30 to %struct.word_type*
  %32 = getelementptr inbounds %struct.word_type, %struct.word_type* %31, i32 0, i32 4
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* %32, i32 0, i32 0
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0)) #5
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

; <label>:36                                      ; preds = %29
  %37 = load %struct.back_end_rec*, %struct.back_end_rec** @BackEnd, align 8
  %38 = getelementptr inbounds %struct.back_end_rec, %struct.back_end_rec* %37, i32 0, i32 9
  %39 = load i32, i32* %38, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %47

; <label>:41                                      ; preds = %36
  %42 = load %union.rec*, %union.rec** %5, align 8
  %43 = bitcast %union.rec* %42 to %struct.word_type*
  %44 = getelementptr inbounds %struct.word_type, %struct.word_type* %43, i32 0, i32 1
  %45 = bitcast %union.FIRST_UNION* %44 to %struct.FILE_POS*
  %46 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 42, i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 2, %struct.FILE_POS* %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0))
  br label %47

; <label>:47                                      ; preds = %41, %36
  br label %214

; <label>:48                                      ; preds = %29
  %49 = load %union.rec*, %union.rec** %5, align 8
  %50 = bitcast %union.rec* %49 to %struct.word_type*
  %51 = getelementptr inbounds %struct.word_type, %struct.word_type* %50, i32 0, i32 4
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %51, i32 0, i32 0
  %53 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0)) #5
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

; <label>:55                                      ; preds = %48
  br label %214

; <label>:56                                      ; preds = %48
  %57 = load %union.rec*, %union.rec** %5, align 8
  %58 = bitcast %union.rec* %57 to %struct.word_type*
  %59 = getelementptr inbounds %struct.word_type, %struct.word_type* %58, i32 0, i32 4
  %60 = getelementptr inbounds [4 x i8], [4 x i8]* %59, i32 0, i32 0
  %61 = load %struct.anon*, %struct.anon** @col_tab, align 8
  %62 = bitcast %union.rec** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %62)
  %63 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %63)
  %64 = bitcast %struct.anon** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %64)
  %65 = bitcast %union.rec** %x.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %65)
  %66 = bitcast %union.rec** %link.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %66)
  %67 = bitcast %union.rec** %y.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %67)
  %68 = bitcast i32* %pos.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68)
  %69 = bitcast i8** %p.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %69)
  store i8* %60, i8** %2, align 8
  store %struct.anon* %61, %struct.anon** %3, align 8
  %70 = load i8*, i8** %2, align 8
  store i8* %70, i8** %p.i, align 8
  %71 = load i8*, i8** %p.i, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %p.i, align 8
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i32
  store i32 %74, i32* %pos.i, align 4
  br label %75

; <label>:75                                      ; preds = %79, %56
  %76 = load i8*, i8** %p.i, align 8
  %77 = load i8, i8* %76, align 1
  %78 = icmp ne i8 %77, 0
  br i1 %78, label %79, label %86

; <label>:79                                      ; preds = %75
  %80 = load i8*, i8** %p.i, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %p.i, align 8
  %82 = load i8, i8* %80, align 1
  %83 = zext i8 %82 to i32
  %84 = load i32, i32* %pos.i, align 4
  %85 = add nsw i32 %84, %83
  store i32 %85, i32* %pos.i, align 4
  br label %75

; <label>:86                                      ; preds = %75
  %87 = load i32, i32* %pos.i, align 4
  %88 = load %struct.anon*, %struct.anon** %3, align 8
  %89 = getelementptr inbounds %struct.anon, %struct.anon* %88, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = srem i32 %87, %90
  store i32 %91, i32* %pos.i, align 4
  %92 = load i32, i32* %pos.i, align 4
  %93 = sext i32 %92 to i64
  %94 = load %struct.anon*, %struct.anon** %3, align 8
  %95 = getelementptr inbounds %struct.anon, %struct.anon* %94, i32 0, i32 2
  %96 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %95, i32 0, i64 %93
  %97 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %96, i32 0, i32 1
  %98 = load %union.rec*, %union.rec** %97, align 8
  store %union.rec* %98, %union.rec** %x.i, align 8
  %99 = load %union.rec*, %union.rec** %x.i, align 8
  %100 = icmp eq %union.rec* %99, null
  br i1 %100, label %101, label %102

; <label>:101                                     ; preds = %86
  store %union.rec* null, %union.rec** %1
  br label %ctab_retrieve.exit

; <label>:102                                     ; preds = %86
  %103 = load %union.rec*, %union.rec** %x.i, align 8
  %104 = bitcast %union.rec* %103 to %struct.word_type*
  %105 = getelementptr inbounds %struct.word_type, %struct.word_type* %104, i32 0, i32 0
  %106 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %105, i32 0, i64 0
  %107 = getelementptr inbounds %struct.LIST, %struct.LIST* %106, i32 0, i32 1
  %108 = load %union.rec*, %union.rec** %107, align 8
  store %union.rec* %108, %union.rec** %link.i, align 8
  br label %109

; <label>:109                                     ; preds = %146, %102
  %110 = load %union.rec*, %union.rec** %link.i, align 8
  %111 = load %union.rec*, %union.rec** %x.i, align 8
  %112 = icmp ne %union.rec* %110, %111
  br i1 %112, label %113, label %153

; <label>:113                                     ; preds = %109
  %114 = load %union.rec*, %union.rec** %link.i, align 8
  %115 = bitcast %union.rec* %114 to %struct.word_type*
  %116 = getelementptr inbounds %struct.word_type, %struct.word_type* %115, i32 0, i32 0
  %117 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %116, i32 0, i64 1
  %118 = getelementptr inbounds %struct.LIST, %struct.LIST* %117, i32 0, i32 0
  %119 = load %union.rec*, %union.rec** %118, align 8
  store %union.rec* %119, %union.rec** %y.i, align 8
  br label %120

; <label>:120                                     ; preds = %129, %113
  %121 = load %union.rec*, %union.rec** %y.i, align 8
  %122 = bitcast %union.rec* %121 to %struct.word_type*
  %123 = getelementptr inbounds %struct.word_type, %struct.word_type* %122, i32 0, i32 1
  %124 = bitcast %union.FIRST_UNION* %123 to %struct.anon.0*
  %125 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %124, i32 0, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %136

; <label>:129                                     ; preds = %120
  %130 = load %union.rec*, %union.rec** %y.i, align 8
  %131 = bitcast %union.rec* %130 to %struct.word_type*
  %132 = getelementptr inbounds %struct.word_type, %struct.word_type* %131, i32 0, i32 0
  %133 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %132, i32 0, i64 1
  %134 = getelementptr inbounds %struct.LIST, %struct.LIST* %133, i32 0, i32 0
  %135 = load %union.rec*, %union.rec** %134, align 8
  store %union.rec* %135, %union.rec** %y.i, align 8
  br label %120

; <label>:136                                     ; preds = %120
  %137 = load i8*, i8** %2, align 8
  %138 = load %union.rec*, %union.rec** %y.i, align 8
  %139 = bitcast %union.rec* %138 to %struct.word_type*
  %140 = getelementptr inbounds %struct.word_type, %struct.word_type* %139, i32 0, i32 4
  %141 = getelementptr inbounds [4 x i8], [4 x i8]* %140, i32 0, i32 0
  %142 = call i32 @strcmp(i8* %137, i8* %141) #5
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %146

; <label>:144                                     ; preds = %136
  %145 = load %union.rec*, %union.rec** %y.i, align 8
  store %union.rec* %145, %union.rec** %1
  br label %ctab_retrieve.exit

; <label>:146                                     ; preds = %136
  %147 = load %union.rec*, %union.rec** %link.i, align 8
  %148 = bitcast %union.rec* %147 to %struct.word_type*
  %149 = getelementptr inbounds %struct.word_type, %struct.word_type* %148, i32 0, i32 0
  %150 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %149, i32 0, i64 0
  %151 = getelementptr inbounds %struct.LIST, %struct.LIST* %150, i32 0, i32 1
  %152 = load %union.rec*, %union.rec** %151, align 8
  store %union.rec* %152, %union.rec** %link.i, align 8
  br label %109

; <label>:153                                     ; preds = %109
  store %union.rec* null, %union.rec** %1
  br label %ctab_retrieve.exit

ctab_retrieve.exit:                               ; preds = %153, %144, %101
  %154 = load %union.rec*, %union.rec** %1
  %155 = bitcast %union.rec** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %155)
  %156 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %156)
  %157 = bitcast %struct.anon** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %157)
  %158 = bitcast %union.rec** %x.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %158)
  %159 = bitcast %union.rec** %link.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %159)
  %160 = bitcast %union.rec** %y.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %160)
  %161 = bitcast i32* %pos.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %161)
  %162 = bitcast i8** %p.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %162)
  store %union.rec* %154, %union.rec** %cname, align 8
  %163 = load %union.rec*, %union.rec** %cname, align 8
  %164 = icmp eq %union.rec* %163, null
  br i1 %164, label %165, label %198

; <label>:165                                     ; preds = %ctab_retrieve.exit
  %166 = load %union.rec*, %union.rec** %5, align 8
  %167 = bitcast %union.rec* %166 to %struct.word_type*
  %168 = getelementptr inbounds %struct.word_type, %struct.word_type* %167, i32 0, i32 1
  %169 = bitcast %union.FIRST_UNION* %168 to %struct.anon.0*
  %170 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %169, i32 0, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = load %union.rec*, %union.rec** %5, align 8
  %174 = bitcast %union.rec* %173 to %struct.word_type*
  %175 = getelementptr inbounds %struct.word_type, %struct.word_type* %174, i32 0, i32 4
  %176 = getelementptr inbounds [4 x i8], [4 x i8]* %175, i32 0, i32 0
  %177 = load %union.rec*, %union.rec** %5, align 8
  %178 = bitcast %union.rec* %177 to %struct.word_type*
  %179 = getelementptr inbounds %struct.word_type, %struct.word_type* %178, i32 0, i32 1
  %180 = bitcast %union.FIRST_UNION* %179 to %struct.FILE_POS*
  %181 = call %union.rec* @MakeWord(i32 %172, i8* %176, %struct.FILE_POS* %180)
  store %union.rec* %181, %union.rec** %cname, align 8
  %182 = load %union.rec*, %union.rec** %cname, align 8
  call void @ctab_insert(%union.rec* %182, %struct.anon** @col_tab)
  %183 = load %union.rec*, %union.rec** %cname, align 8
  %184 = bitcast %union.rec* %183 to %struct.word_type*
  %185 = getelementptr inbounds %struct.word_type, %struct.word_type* %184, i32 0, i32 2
  %186 = bitcast %union.SECOND_UNION* %185 to %struct.anon.2*
  %187 = bitcast %struct.anon.2* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = lshr i32 %188, 12
  %190 = and i32 %189, 1023
  %191 = load %struct.STYLE*, %struct.STYLE** %4, align 8
  %192 = getelementptr inbounds %struct.STYLE, %struct.STYLE* %191, i32 0, i32 4
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %190, 1023
  %195 = shl i32 %194, 12
  %196 = and i32 %193, -4190209
  %197 = or i32 %196, %195
  store i32 %197, i32* %192, align 4
  br label %214

; <label>:198                                     ; preds = %ctab_retrieve.exit
  %199 = load %union.rec*, %union.rec** %cname, align 8
  %200 = bitcast %union.rec* %199 to %struct.word_type*
  %201 = getelementptr inbounds %struct.word_type, %struct.word_type* %200, i32 0, i32 2
  %202 = bitcast %union.SECOND_UNION* %201 to %struct.anon.2*
  %203 = bitcast %struct.anon.2* %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = lshr i32 %204, 12
  %206 = and i32 %205, 1023
  %207 = load %struct.STYLE*, %struct.STYLE** %4, align 8
  %208 = getelementptr inbounds %struct.STYLE, %struct.STYLE* %207, i32 0, i32 4
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %206, 1023
  %211 = shl i32 %210, 12
  %212 = and i32 %209, -4190209
  %213 = or i32 %212, %211
  store i32 %213, i32* %208, align 4
  br label %214

; <label>:214                                     ; preds = %198, %165, %55, %47, %23
  ret void
}

declare i8* @Error(i32, i32, i8*, i32, %struct.FILE_POS*, ...) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

declare %union.rec* @MakeWord(i32, i8*, %struct.FILE_POS*) #1

; Function Attrs: nounwind uwtable
define internal void @ctab_insert(%union.rec* %x, %struct.anon** %S) #0 {
  %1 = alloca %struct.anon*, align 8
  %2 = alloca i32, align 4
  %NewS.i = alloca %struct.anon*, align 8
  %i.i = alloca i32, align 4
  %3 = alloca %union.rec*, align 8
  %4 = alloca %struct.anon**, align 8
  %pos = alloca i32, align 4
  %num = alloca i32, align 4
  %p = alloca i8*, align 8
  store %union.rec* %x, %union.rec** %3, align 8
  store %struct.anon** %S, %struct.anon*** %4, align 8
  %5 = load %struct.anon**, %struct.anon*** %4, align 8
  %6 = load %struct.anon*, %struct.anon** %5, align 8
  %7 = getelementptr inbounds %struct.anon, %struct.anon* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = load %struct.anon**, %struct.anon*** %4, align 8
  %10 = load %struct.anon*, %struct.anon** %9, align 8
  %11 = getelementptr inbounds %struct.anon, %struct.anon* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sub nsw i32 %12, 1
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %81

; <label>:15                                      ; preds = %0
  %16 = load %struct.anon**, %struct.anon*** %4, align 8
  %17 = load %struct.anon*, %struct.anon** %16, align 8
  %18 = load %struct.anon**, %struct.anon*** %4, align 8
  %19 = load %struct.anon*, %struct.anon** %18, align 8
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = mul nsw i32 2, %21
  %23 = bitcast %struct.anon** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23)
  %24 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24)
  %25 = bitcast %struct.anon** %NewS.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %25)
  %26 = bitcast i32* %i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26)
  store %struct.anon* %17, %struct.anon** %1, align 8
  store i32 %22, i32* %2, align 4
  %27 = load i32, i32* %2, align 4
  %28 = call %struct.anon* @ctab_new(i32 %27) #4
  store %struct.anon* %28, %struct.anon** %NewS.i, align 8
  store i32 1, i32* %i.i, align 4
  br label %29

; <label>:29                                      ; preds = %35, %15
  %30 = load i32, i32* %i.i, align 4
  %31 = load %struct.anon*, %struct.anon** %1, align 8
  %32 = getelementptr inbounds %struct.anon, %struct.anon* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp sle i32 %30, %33
  br i1 %34, label %35, label %45

; <label>:35                                      ; preds = %29
  %36 = load i32, i32* %i.i, align 4
  %37 = sext i32 %36 to i64
  %38 = load %struct.anon*, %struct.anon** %1, align 8
  %39 = getelementptr inbounds %struct.anon, %struct.anon* %38, i32 0, i32 2
  %40 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %39, i32 0, i64 %37
  %41 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %40, i32 0, i32 0
  %42 = load %union.rec*, %union.rec** %41, align 8
  call void @ctab_insert(%union.rec* %42, %struct.anon** %NewS.i) #4
  %43 = load i32, i32* %i.i, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %i.i, align 4
  br label %29

; <label>:45                                      ; preds = %29
  store i32 0, i32* %i.i, align 4
  br label %46

; <label>:46                                      ; preds = %70, %45
  %47 = load i32, i32* %i.i, align 4
  %48 = load %struct.anon*, %struct.anon** %1, align 8
  %49 = getelementptr inbounds %struct.anon, %struct.anon* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %47, %50
  br i1 %51, label %52, label %ctab_rehash.exit

; <label>:52                                      ; preds = %46
  %53 = load i32, i32* %i.i, align 4
  %54 = sext i32 %53 to i64
  %55 = load %struct.anon*, %struct.anon** %1, align 8
  %56 = getelementptr inbounds %struct.anon, %struct.anon* %55, i32 0, i32 2
  %57 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %56, i32 0, i64 %54
  %58 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %57, i32 0, i32 1
  %59 = load %union.rec*, %union.rec** %58, align 8
  %60 = icmp ne %union.rec* %59, null
  br i1 %60, label %61, label %70

; <label>:61                                      ; preds = %52
  %62 = load i32, i32* %i.i, align 4
  %63 = sext i32 %62 to i64
  %64 = load %struct.anon*, %struct.anon** %1, align 8
  %65 = getelementptr inbounds %struct.anon, %struct.anon* %64, i32 0, i32 2
  %66 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %65, i32 0, i64 %63
  %67 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %66, i32 0, i32 1
  %68 = load %union.rec*, %union.rec** %67, align 8
  %69 = call i32 @DisposeObject(%union.rec* %68) #4
  br label %70

; <label>:70                                      ; preds = %61, %52
  %71 = load i32, i32* %i.i, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %i.i, align 4
  br label %46

ctab_rehash.exit:                                 ; preds = %46
  %73 = load %struct.anon*, %struct.anon** %1, align 8
  %74 = bitcast %struct.anon* %73 to i8*
  call void @free(i8* %74) #4
  %75 = load %struct.anon*, %struct.anon** %NewS.i, align 8
  %76 = bitcast %struct.anon** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76)
  %77 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77)
  %78 = bitcast %struct.anon** %NewS.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %78)
  %79 = bitcast i32* %i.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79)
  %80 = load %struct.anon**, %struct.anon*** %4, align 8
  store %struct.anon* %75, %struct.anon** %80, align 8
  br label %81

; <label>:81                                      ; preds = %ctab_rehash.exit, %0
  %82 = load %struct.anon**, %struct.anon*** %4, align 8
  %83 = load %struct.anon*, %struct.anon** %82, align 8
  %84 = getelementptr inbounds %struct.anon, %struct.anon* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %84, align 4
  store i32 %86, i32* %num, align 4
  %87 = load i32, i32* %num, align 4
  %88 = icmp sgt i32 %87, 4096
  br i1 %88, label %89, label %95

; <label>:89                                      ; preds = %81
  %90 = load %union.rec*, %union.rec** %3, align 8
  %91 = bitcast %union.rec* %90 to %struct.word_type*
  %92 = getelementptr inbounds %struct.word_type, %struct.word_type* %91, i32 0, i32 1
  %93 = bitcast %union.FIRST_UNION* %92 to %struct.FILE_POS*
  %94 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 42, i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0), i32 1, %struct.FILE_POS* %93, i32 4096)
  br label %95

; <label>:95                                      ; preds = %89, %81
  %96 = load %union.rec*, %union.rec** %3, align 8
  %97 = bitcast %union.rec* %96 to %struct.word_type*
  %98 = getelementptr inbounds %struct.word_type, %struct.word_type* %97, i32 0, i32 4
  %99 = getelementptr inbounds [4 x i8], [4 x i8]* %98, i32 0, i32 0
  store i8* %99, i8** %p, align 8
  %100 = load i8*, i8** %p, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %p, align 8
  %102 = load i8, i8* %100, align 1
  %103 = zext i8 %102 to i32
  store i32 %103, i32* %pos, align 4
  br label %104

; <label>:104                                     ; preds = %108, %95
  %105 = load i8*, i8** %p, align 8
  %106 = load i8, i8* %105, align 1
  %107 = icmp ne i8 %106, 0
  br i1 %107, label %108, label %115

; <label>:108                                     ; preds = %104
  %109 = load i8*, i8** %p, align 8
  %110 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %110, i8** %p, align 8
  %111 = load i8, i8* %109, align 1
  %112 = zext i8 %111 to i32
  %113 = load i32, i32* %pos, align 4
  %114 = add nsw i32 %113, %112
  store i32 %114, i32* %pos, align 4
  br label %104

; <label>:115                                     ; preds = %104
  %116 = load i32, i32* %pos, align 4
  %117 = load %struct.anon**, %struct.anon*** %4, align 8
  %118 = load %struct.anon*, %struct.anon** %117, align 8
  %119 = getelementptr inbounds %struct.anon, %struct.anon* %118, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = srem i32 %116, %120
  store i32 %121, i32* %pos, align 4
  %122 = load i32, i32* %pos, align 4
  %123 = sext i32 %122 to i64
  %124 = load %struct.anon**, %struct.anon*** %4, align 8
  %125 = load %struct.anon*, %struct.anon** %124, align 8
  %126 = getelementptr inbounds %struct.anon, %struct.anon* %125, i32 0, i32 2
  %127 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %126, i32 0, i64 %123
  %128 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %127, i32 0, i32 1
  %129 = load %union.rec*, %union.rec** %128, align 8
  %130 = icmp eq %union.rec* %129, null
  br i1 %130, label %131, label %198

; <label>:131                                     ; preds = %115
  %132 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 17), align 1
  %133 = zext i8 %132 to i32
  store i32 %133, i32* @zz_size, align 4
  %134 = sext i32 %133 to i64
  %135 = icmp uge i64 %134, 265
  br i1 %135, label %136, label %139

; <label>:136                                     ; preds = %131
  %137 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %138 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i32 0, i32 0), i32 1, %struct.FILE_POS* %137)
  br label %164

; <label>:139                                     ; preds = %131
  %140 = load i32, i32* @zz_size, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %141
  %143 = load %union.rec*, %union.rec** %142, align 8
  %144 = icmp eq %union.rec* %143, null
  br i1 %144, label %145, label %149

; <label>:145                                     ; preds = %139
  %146 = load i32, i32* @zz_size, align 4
  %147 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %148 = call %union.rec* @GetMemory(i32 %146, %struct.FILE_POS* %147)
  store %union.rec* %148, %union.rec** @zz_hold, align 8
  br label %163

; <label>:149                                     ; preds = %139
  %150 = load i32, i32* @zz_size, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %151
  %153 = load %union.rec*, %union.rec** %152, align 8
  store %union.rec* %153, %union.rec** @zz_hold, align 8
  store %union.rec* %153, %union.rec** @zz_hold, align 8
  %154 = load %union.rec*, %union.rec** @zz_hold, align 8
  %155 = bitcast %union.rec* %154 to %struct.word_type*
  %156 = getelementptr inbounds %struct.word_type, %struct.word_type* %155, i32 0, i32 0
  %157 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %156, i32 0, i64 0
  %158 = getelementptr inbounds %struct.LIST, %struct.LIST* %157, i32 0, i32 0
  %159 = load %union.rec*, %union.rec** %158, align 8
  %160 = load i32, i32* @zz_size, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %161
  store %union.rec* %159, %union.rec** %162, align 8
  br label %163

; <label>:163                                     ; preds = %149, %145
  br label %164

; <label>:164                                     ; preds = %163, %136
  %165 = load %union.rec*, %union.rec** @zz_hold, align 8
  %166 = bitcast %union.rec* %165 to %struct.word_type*
  %167 = getelementptr inbounds %struct.word_type, %struct.word_type* %166, i32 0, i32 1
  %168 = bitcast %union.FIRST_UNION* %167 to %struct.anon.0*
  %169 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %168, i32 0, i32 0
  store i8 17, i8* %169, align 1
  %170 = load %union.rec*, %union.rec** @zz_hold, align 8
  %171 = load %union.rec*, %union.rec** @zz_hold, align 8
  %172 = bitcast %union.rec* %171 to %struct.word_type*
  %173 = getelementptr inbounds %struct.word_type, %struct.word_type* %172, i32 0, i32 0
  %174 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %173, i32 0, i64 1
  %175 = getelementptr inbounds %struct.LIST, %struct.LIST* %174, i32 0, i32 1
  store %union.rec* %170, %union.rec** %175, align 8
  %176 = load %union.rec*, %union.rec** @zz_hold, align 8
  %177 = bitcast %union.rec* %176 to %struct.word_type*
  %178 = getelementptr inbounds %struct.word_type, %struct.word_type* %177, i32 0, i32 0
  %179 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %178, i32 0, i64 1
  %180 = getelementptr inbounds %struct.LIST, %struct.LIST* %179, i32 0, i32 0
  store %union.rec* %170, %union.rec** %180, align 8
  %181 = load %union.rec*, %union.rec** @zz_hold, align 8
  %182 = bitcast %union.rec* %181 to %struct.word_type*
  %183 = getelementptr inbounds %struct.word_type, %struct.word_type* %182, i32 0, i32 0
  %184 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %183, i32 0, i64 0
  %185 = getelementptr inbounds %struct.LIST, %struct.LIST* %184, i32 0, i32 1
  store %union.rec* %170, %union.rec** %185, align 8
  %186 = load %union.rec*, %union.rec** @zz_hold, align 8
  %187 = bitcast %union.rec* %186 to %struct.word_type*
  %188 = getelementptr inbounds %struct.word_type, %struct.word_type* %187, i32 0, i32 0
  %189 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %188, i32 0, i64 0
  %190 = getelementptr inbounds %struct.LIST, %struct.LIST* %189, i32 0, i32 0
  store %union.rec* %170, %union.rec** %190, align 8
  %191 = load i32, i32* %pos, align 4
  %192 = sext i32 %191 to i64
  %193 = load %struct.anon**, %struct.anon*** %4, align 8
  %194 = load %struct.anon*, %struct.anon** %193, align 8
  %195 = getelementptr inbounds %struct.anon, %struct.anon* %194, i32 0, i32 2
  %196 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %195, i32 0, i64 %192
  %197 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %196, i32 0, i32 1
  store %union.rec* %170, %union.rec** %197, align 8
  br label %198

; <label>:198                                     ; preds = %164, %115
  %199 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @zz_lengths, i32 0, i64 0), align 1
  %200 = zext i8 %199 to i32
  store i32 %200, i32* @zz_size, align 4
  %201 = sext i32 %200 to i64
  %202 = icmp uge i64 %201, 265
  br i1 %202, label %203, label %206

; <label>:203                                     ; preds = %198
  %204 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %205 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i32 0, i32 0), i32 1, %struct.FILE_POS* %204)
  br label %231

; <label>:206                                     ; preds = %198
  %207 = load i32, i32* @zz_size, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %208
  %210 = load %union.rec*, %union.rec** %209, align 8
  %211 = icmp eq %union.rec* %210, null
  br i1 %211, label %212, label %216

; <label>:212                                     ; preds = %206
  %213 = load i32, i32* @zz_size, align 4
  %214 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %215 = call %union.rec* @GetMemory(i32 %213, %struct.FILE_POS* %214)
  store %union.rec* %215, %union.rec** @zz_hold, align 8
  br label %230

; <label>:216                                     ; preds = %206
  %217 = load i32, i32* @zz_size, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %218
  %220 = load %union.rec*, %union.rec** %219, align 8
  store %union.rec* %220, %union.rec** @zz_hold, align 8
  store %union.rec* %220, %union.rec** @zz_hold, align 8
  %221 = load %union.rec*, %union.rec** @zz_hold, align 8
  %222 = bitcast %union.rec* %221 to %struct.word_type*
  %223 = getelementptr inbounds %struct.word_type, %struct.word_type* %222, i32 0, i32 0
  %224 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %223, i32 0, i64 0
  %225 = getelementptr inbounds %struct.LIST, %struct.LIST* %224, i32 0, i32 0
  %226 = load %union.rec*, %union.rec** %225, align 8
  %227 = load i32, i32* @zz_size, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [0 x %union.rec*], [0 x %union.rec*]* @zz_free, i32 0, i64 %228
  store %union.rec* %226, %union.rec** %229, align 8
  br label %230

; <label>:230                                     ; preds = %216, %212
  br label %231

; <label>:231                                     ; preds = %230, %203
  %232 = load %union.rec*, %union.rec** @zz_hold, align 8
  %233 = bitcast %union.rec* %232 to %struct.word_type*
  %234 = getelementptr inbounds %struct.word_type, %struct.word_type* %233, i32 0, i32 1
  %235 = bitcast %union.FIRST_UNION* %234 to %struct.anon.0*
  %236 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %235, i32 0, i32 0
  store i8 0, i8* %236, align 1
  %237 = load %union.rec*, %union.rec** @zz_hold, align 8
  %238 = load %union.rec*, %union.rec** @zz_hold, align 8
  %239 = bitcast %union.rec* %238 to %struct.word_type*
  %240 = getelementptr inbounds %struct.word_type, %struct.word_type* %239, i32 0, i32 0
  %241 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %240, i32 0, i64 1
  %242 = getelementptr inbounds %struct.LIST, %struct.LIST* %241, i32 0, i32 1
  store %union.rec* %237, %union.rec** %242, align 8
  %243 = load %union.rec*, %union.rec** @zz_hold, align 8
  %244 = bitcast %union.rec* %243 to %struct.word_type*
  %245 = getelementptr inbounds %struct.word_type, %struct.word_type* %244, i32 0, i32 0
  %246 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %245, i32 0, i64 1
  %247 = getelementptr inbounds %struct.LIST, %struct.LIST* %246, i32 0, i32 0
  store %union.rec* %237, %union.rec** %247, align 8
  %248 = load %union.rec*, %union.rec** @zz_hold, align 8
  %249 = bitcast %union.rec* %248 to %struct.word_type*
  %250 = getelementptr inbounds %struct.word_type, %struct.word_type* %249, i32 0, i32 0
  %251 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %250, i32 0, i64 0
  %252 = getelementptr inbounds %struct.LIST, %struct.LIST* %251, i32 0, i32 1
  store %union.rec* %237, %union.rec** %252, align 8
  %253 = load %union.rec*, %union.rec** @zz_hold, align 8
  %254 = bitcast %union.rec* %253 to %struct.word_type*
  %255 = getelementptr inbounds %struct.word_type, %struct.word_type* %254, i32 0, i32 0
  %256 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %255, i32 0, i64 0
  %257 = getelementptr inbounds %struct.LIST, %struct.LIST* %256, i32 0, i32 0
  store %union.rec* %237, %union.rec** %257, align 8
  store %union.rec* %237, %union.rec** @xx_link, align 8
  %258 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %258, %union.rec** @zz_res, align 8
  %259 = load i32, i32* %pos, align 4
  %260 = sext i32 %259 to i64
  %261 = load %struct.anon**, %struct.anon*** %4, align 8
  %262 = load %struct.anon*, %struct.anon** %261, align 8
  %263 = getelementptr inbounds %struct.anon, %struct.anon* %262, i32 0, i32 2
  %264 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %263, i32 0, i64 %260
  %265 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %264, i32 0, i32 1
  %266 = load %union.rec*, %union.rec** %265, align 8
  store %union.rec* %266, %union.rec** @zz_hold, align 8
  %267 = load %union.rec*, %union.rec** @zz_hold, align 8
  %268 = icmp eq %union.rec* %267, null
  br i1 %268, label %269, label %271

; <label>:269                                     ; preds = %231
  %270 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %319

; <label>:271                                     ; preds = %231
  %272 = load %union.rec*, %union.rec** @zz_res, align 8
  %273 = icmp eq %union.rec* %272, null
  br i1 %273, label %274, label %276

; <label>:274                                     ; preds = %271
  %275 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %317

; <label>:276                                     ; preds = %271
  %277 = load %union.rec*, %union.rec** @zz_hold, align 8
  %278 = bitcast %union.rec* %277 to %struct.word_type*
  %279 = getelementptr inbounds %struct.word_type, %struct.word_type* %278, i32 0, i32 0
  %280 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %279, i32 0, i64 0
  %281 = getelementptr inbounds %struct.LIST, %struct.LIST* %280, i32 0, i32 0
  %282 = load %union.rec*, %union.rec** %281, align 8
  store %union.rec* %282, %union.rec** @zz_tmp, align 8
  %283 = load %union.rec*, %union.rec** @zz_res, align 8
  %284 = bitcast %union.rec* %283 to %struct.word_type*
  %285 = getelementptr inbounds %struct.word_type, %struct.word_type* %284, i32 0, i32 0
  %286 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %285, i32 0, i64 0
  %287 = getelementptr inbounds %struct.LIST, %struct.LIST* %286, i32 0, i32 0
  %288 = load %union.rec*, %union.rec** %287, align 8
  %289 = load %union.rec*, %union.rec** @zz_hold, align 8
  %290 = bitcast %union.rec* %289 to %struct.word_type*
  %291 = getelementptr inbounds %struct.word_type, %struct.word_type* %290, i32 0, i32 0
  %292 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %291, i32 0, i64 0
  %293 = getelementptr inbounds %struct.LIST, %struct.LIST* %292, i32 0, i32 0
  store %union.rec* %288, %union.rec** %293, align 8
  %294 = load %union.rec*, %union.rec** @zz_hold, align 8
  %295 = load %union.rec*, %union.rec** @zz_res, align 8
  %296 = bitcast %union.rec* %295 to %struct.word_type*
  %297 = getelementptr inbounds %struct.word_type, %struct.word_type* %296, i32 0, i32 0
  %298 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %297, i32 0, i64 0
  %299 = getelementptr inbounds %struct.LIST, %struct.LIST* %298, i32 0, i32 0
  %300 = load %union.rec*, %union.rec** %299, align 8
  %301 = bitcast %union.rec* %300 to %struct.word_type*
  %302 = getelementptr inbounds %struct.word_type, %struct.word_type* %301, i32 0, i32 0
  %303 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %302, i32 0, i64 0
  %304 = getelementptr inbounds %struct.LIST, %struct.LIST* %303, i32 0, i32 1
  store %union.rec* %294, %union.rec** %304, align 8
  %305 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %306 = load %union.rec*, %union.rec** @zz_res, align 8
  %307 = bitcast %union.rec* %306 to %struct.word_type*
  %308 = getelementptr inbounds %struct.word_type, %struct.word_type* %307, i32 0, i32 0
  %309 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %308, i32 0, i64 0
  %310 = getelementptr inbounds %struct.LIST, %struct.LIST* %309, i32 0, i32 0
  store %union.rec* %305, %union.rec** %310, align 8
  %311 = load %union.rec*, %union.rec** @zz_res, align 8
  %312 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %313 = bitcast %union.rec* %312 to %struct.word_type*
  %314 = getelementptr inbounds %struct.word_type, %struct.word_type* %313, i32 0, i32 0
  %315 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %314, i32 0, i64 0
  %316 = getelementptr inbounds %struct.LIST, %struct.LIST* %315, i32 0, i32 1
  store %union.rec* %311, %union.rec** %316, align 8
  br label %317

; <label>:317                                     ; preds = %276, %274
  %318 = phi %union.rec* [ %275, %274 ], [ %311, %276 ]
  br label %319

; <label>:319                                     ; preds = %317, %269
  %320 = load %union.rec*, %union.rec** @xx_link, align 8
  store %union.rec* %320, %union.rec** @zz_res, align 8
  %321 = load %union.rec*, %union.rec** %3, align 8
  store %union.rec* %321, %union.rec** @zz_hold, align 8
  %322 = load %union.rec*, %union.rec** @zz_hold, align 8
  %323 = icmp eq %union.rec* %322, null
  br i1 %323, label %324, label %326

; <label>:324                                     ; preds = %319
  %325 = load %union.rec*, %union.rec** @zz_res, align 8
  br label %374

; <label>:326                                     ; preds = %319
  %327 = load %union.rec*, %union.rec** @zz_res, align 8
  %328 = icmp eq %union.rec* %327, null
  br i1 %328, label %329, label %331

; <label>:329                                     ; preds = %326
  %330 = load %union.rec*, %union.rec** @zz_hold, align 8
  br label %372

; <label>:331                                     ; preds = %326
  %332 = load %union.rec*, %union.rec** @zz_hold, align 8
  %333 = bitcast %union.rec* %332 to %struct.word_type*
  %334 = getelementptr inbounds %struct.word_type, %struct.word_type* %333, i32 0, i32 0
  %335 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %334, i32 0, i64 1
  %336 = getelementptr inbounds %struct.LIST, %struct.LIST* %335, i32 0, i32 0
  %337 = load %union.rec*, %union.rec** %336, align 8
  store %union.rec* %337, %union.rec** @zz_tmp, align 8
  %338 = load %union.rec*, %union.rec** @zz_res, align 8
  %339 = bitcast %union.rec* %338 to %struct.word_type*
  %340 = getelementptr inbounds %struct.word_type, %struct.word_type* %339, i32 0, i32 0
  %341 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %340, i32 0, i64 1
  %342 = getelementptr inbounds %struct.LIST, %struct.LIST* %341, i32 0, i32 0
  %343 = load %union.rec*, %union.rec** %342, align 8
  %344 = load %union.rec*, %union.rec** @zz_hold, align 8
  %345 = bitcast %union.rec* %344 to %struct.word_type*
  %346 = getelementptr inbounds %struct.word_type, %struct.word_type* %345, i32 0, i32 0
  %347 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %346, i32 0, i64 1
  %348 = getelementptr inbounds %struct.LIST, %struct.LIST* %347, i32 0, i32 0
  store %union.rec* %343, %union.rec** %348, align 8
  %349 = load %union.rec*, %union.rec** @zz_hold, align 8
  %350 = load %union.rec*, %union.rec** @zz_res, align 8
  %351 = bitcast %union.rec* %350 to %struct.word_type*
  %352 = getelementptr inbounds %struct.word_type, %struct.word_type* %351, i32 0, i32 0
  %353 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %352, i32 0, i64 1
  %354 = getelementptr inbounds %struct.LIST, %struct.LIST* %353, i32 0, i32 0
  %355 = load %union.rec*, %union.rec** %354, align 8
  %356 = bitcast %union.rec* %355 to %struct.word_type*
  %357 = getelementptr inbounds %struct.word_type, %struct.word_type* %356, i32 0, i32 0
  %358 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %357, i32 0, i64 1
  %359 = getelementptr inbounds %struct.LIST, %struct.LIST* %358, i32 0, i32 1
  store %union.rec* %349, %union.rec** %359, align 8
  %360 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %361 = load %union.rec*, %union.rec** @zz_res, align 8
  %362 = bitcast %union.rec* %361 to %struct.word_type*
  %363 = getelementptr inbounds %struct.word_type, %struct.word_type* %362, i32 0, i32 0
  %364 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %363, i32 0, i64 1
  %365 = getelementptr inbounds %struct.LIST, %struct.LIST* %364, i32 0, i32 0
  store %union.rec* %360, %union.rec** %365, align 8
  %366 = load %union.rec*, %union.rec** @zz_res, align 8
  %367 = load %union.rec*, %union.rec** @zz_tmp, align 8
  %368 = bitcast %union.rec* %367 to %struct.word_type*
  %369 = getelementptr inbounds %struct.word_type, %struct.word_type* %368, i32 0, i32 0
  %370 = getelementptr inbounds [2 x %struct.LIST], [2 x %struct.LIST]* %369, i32 0, i64 1
  %371 = getelementptr inbounds %struct.LIST, %struct.LIST* %370, i32 0, i32 1
  store %union.rec* %366, %union.rec** %371, align 8
  br label %372

; <label>:372                                     ; preds = %331, %329
  %373 = phi %union.rec* [ %330, %329 ], [ %366, %331 ]
  br label %374

; <label>:374                                     ; preds = %372, %324
  %375 = load i32, i32* %num, align 4
  %376 = load %union.rec*, %union.rec** %3, align 8
  %377 = bitcast %union.rec* %376 to %struct.word_type*
  %378 = getelementptr inbounds %struct.word_type, %struct.word_type* %377, i32 0, i32 2
  %379 = bitcast %union.SECOND_UNION* %378 to %struct.anon.2*
  %380 = bitcast %struct.anon.2* %379 to i32*
  %381 = load i32, i32* %380, align 4
  %382 = and i32 %375, 1023
  %383 = shl i32 %382, 12
  %384 = and i32 %381, -4190209
  %385 = or i32 %384, %383
  store i32 %385, i32* %380, align 4
  %386 = load %union.rec*, %union.rec** %3, align 8
  %387 = load i32, i32* %num, align 4
  %388 = sext i32 %387 to i64
  %389 = load %struct.anon**, %struct.anon*** %4, align 8
  %390 = load %struct.anon*, %struct.anon** %389, align 8
  %391 = getelementptr inbounds %struct.anon, %struct.anon* %390, i32 0, i32 2
  %392 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %391, i32 0, i64 %388
  %393 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %392, i32 0, i32 0
  store %union.rec* %386, %union.rec** %393, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @ColourCommand(i32 %cnum) #0 {
  %1 = alloca i32, align 4
  %res = alloca i8*, align 8
  store i32 %cnum, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = icmp ugt i32 %2, 0
  br i1 %3, label %4, label %10

; <label>:4                                       ; preds = %0
  %5 = load i32, i32* %1, align 4
  %6 = load %struct.anon*, %struct.anon** @col_tab, align 8
  %7 = getelementptr inbounds %struct.anon, %struct.anon* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp ule i32 %5, %8
  br i1 %9, label %13, label %10

; <label>:10                                      ; preds = %4, %0
  %11 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %12 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i32 0, i32 0), i32 0, %struct.FILE_POS* %11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0))
  br label %13

; <label>:13                                      ; preds = %10, %4
  %14 = load i32, i32* %1, align 4
  %15 = zext i32 %14 to i64
  %16 = load %struct.anon*, %struct.anon** @col_tab, align 8
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %16, i32 0, i32 2
  %18 = getelementptr inbounds [1 x %struct.coltab_rec], [1 x %struct.coltab_rec]* %17, i32 0, i64 %15
  %19 = getelementptr inbounds %struct.coltab_rec, %struct.coltab_rec* %18, i32 0, i32 0
  %20 = load %union.rec*, %union.rec** %19, align 8
  %21 = bitcast %union.rec* %20 to %struct.word_type*
  %22 = getelementptr inbounds %struct.word_type, %struct.word_type* %21, i32 0, i32 4
  %23 = getelementptr inbounds [4 x i8], [4 x i8]* %22, i32 0, i32 0
  store i8* %23, i8** %res, align 8
  %24 = load i8*, i8** %res, align 8
  ret i8* %24
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

declare %union.rec* @GetMemory(i32, %struct.FILE_POS*) #1

declare i32 @DisposeObject(%union.rec*) #1

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
