; ModuleID = 'z48.opt'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.FILE_POS = type { i8, i8, i16, i32 }
%struct.t_font_encoding_entry = type { %struct.t_font_encoding_entry*, i32, i8* }
%struct.t_qsave_entry = type { %struct.t_qsave_entry*, i32, i32, float, float }
%struct.t_qsave_marking_entry = type { %struct.t_qsave_marking_entry*, i32 }
%struct.t_font_list_entry = type { %struct.t_font_list_entry*, i8*, i8*, i8*, i32, i32, i32, i32 }
%struct.t_source_annot_entry = type { %struct.t_source_annot_entry*, %struct.t_target_annot_entry*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.t_target_annot_entry = type { %struct.t_target_annot_entry*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.t_page_block = type { %struct.t_page_block*, [64 x i32] }
%struct.t_offset_block = type { %struct.t_offset_block*, [256 x i32] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@g_valid_text_matrix = internal global i32 0, align 4
@g_PDF_debug = internal global i32 0, align 4
@.str = private unnamed_addr constant [30 x i8] c"%%\0A%% font encoding '%s':\0A%%\0A\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"<<\0A/Type /Encoding\0A/Differences [ 0\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"PDFFile_BeginFontEncoding: run out of memory\00", align 1
@no_fpos = external global %struct.FILE_POS*, align 8
@.str.3 = private unnamed_addr constant [41 x i8] c"PDFFile_BeginFontEncoding: out of memory\00", align 1
@g_font_encoding_list = internal global %struct.t_font_encoding_entry* null, align 8
@.str.4 = private unnamed_addr constant [13 x i8] c"]\0A>>\0Aendobj\0A\00", align 1
@g_graphics_vars = internal global [4 x i32] zeroinitializer, align 16
@g_units = internal global [7 x i32] zeroinitializer, align 16
@g_in_buffering_mode = internal global i32 0, align 4
@g_buffer_pos = internal global i32 0, align 4
@g_buffer = internal global [1024 x i8] zeroinitializer, align 16
@g_TJ_pending = internal global i32 0, align 4
@.str.5 = private unnamed_addr constant [6 x i8] c")]TJ\0A\00", align 1
@g_ET_pending = internal global i32 0, align 4
@.str.6 = private unnamed_addr constant [4 x i8] c"ET\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"PDFPage_Push: run out of memory\00", align 1
@g_page_h_origin = internal global i32 0, align 4
@g_page_v_origin = internal global i32 0, align 4
@g_qsave_stack = internal global %struct.t_qsave_entry* null, align 8
@g_qsave_marking_stack = internal global %struct.t_qsave_marking_entry* null, align 8
@.str.8 = private unnamed_addr constant [3 x i8] c"q\0A\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"\0AQ\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"cannot find font entry for name %s\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"%s %u Tf\0A\00", align 1
@g_page_uses_fonts = internal global i32 0, align 4
@.str.12 = private unnamed_addr constant [5 x i8] c")%d(\00", align 1
@g_page_contents_obj_num = internal global i32 0, align 4
@.str.13 = private unnamed_addr constant [22 x i8] c"%.2f 0 0 %.2f 0 0 cm\0A\00", align 1
@g_page_h_scale_factor = internal global float 0.000000e+00, align 4
@g_page_v_scale_factor = internal global float 0.000000e+00, align 4
@.str.14 = private unnamed_addr constant [28 x i8] c"%.2f %.2f %.2f %.2f 0 0 cm\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"1 0 0 1 %.2f %.2f cm\0A\00", align 1
@g_expr_depth = internal global i32 0, align 4
@.str.16 = private unnamed_addr constant [5 x i8] c"%.2f\00", align 1
@g_link_depth = internal global i32 0, align 4
@g_graphic_keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0)], align 16
@.str.17 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@g_link_keywords = internal global [5 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.117, i32 0, i32 0)], align 16
@g_link_index = internal global i32 0, align 4
@g_link_keyword = internal global i32 0, align 4
@g_doc_info_keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.121, i32 0, i32 0)], align 16
@g_arithmetic_keywords = internal global [7 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0)], align 16
@g_expr = internal global [512 x i8] zeroinitializer, align 16
@.str.18 = private unnamed_addr constant [35 x i8] c"PDFPage_WriteGraphic: '(' expected\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@g_expr_index = internal global i32 0, align 4
@.str.20 = private unnamed_addr constant [65 x i8] c"PDFPage_WriteGraphic: '__' encountered while processing @Graphic\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"q %d w %d %d m %d %d l s Q\0A\00", align 1
@g_page_has_text = internal global i32 0, align 4
@g_page_has_graphics = internal global i32 0, align 4
@g_page_length_obj_num = internal global i32 0, align 4
@g_page_start_offset = internal global i32 0, align 4
@g_page_line_width = internal global i32 0, align 4
@g_font_list = internal global %struct.t_font_list_entry* null, align 8
@g_page_count = internal global i32 0, align 4
@g_page_object_num = internal global i32 0, align 4
@.str.22 = private unnamed_addr constant [37 x i8] c"%%\0A%% length object for page %u:\0A%%\0A\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"%u\0Aendobj\0A\00", align 1
@g_source_annot_list = internal global %struct.t_source_annot_entry* null, align 8
@g_cur_page_block = internal global %struct.t_page_block* null, align 8
@.str.24 = private unnamed_addr constant [35 x i8] c"PDFPage_Cleanup: run out of memory\00", align 1
@g_page_block_list = internal global %struct.t_page_block* null, align 8
@.str.25 = private unnamed_addr constant [26 x i8] c"%%\0A%% page number %u:\0A%%\0A\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"<<\0A/Type /Page\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"/CropBox [ 0 0 %u %u ]\0A\00", align 1
@g_doc_h_bound = internal global i32 0, align 4
@g_doc_v_bound = internal global i32 0, align 4
@.str.28 = private unnamed_addr constant [9 x i8] c"/Parent \00", align 1
@g_pages_root = internal global i32 0, align 4
@.str.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"/Contents \00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"/Resources\0A<<\0A\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"/Font <<\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c" %s \00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c" >>\0A\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"/ProcSet [ /PDF\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c" /Text\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c" ]\0A\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c">>\0A\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"/Annots [\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c">>\0Aendobj\0A\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"%PDF-1.2\0A\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"%\E2\E3\CF\D3\0A\00", align 1
@g_next_objnum = internal global i32 0, align 4
@g_obj_offset_list = internal global %struct.t_offset_block* null, align 8
@g_cur_obj_offset_block = internal global %struct.t_offset_block* null, align 8
@g_doc_author = internal global i8* null, align 8
@g_doc_title = internal global i8* null, align 8
@g_doc_subject = internal global i8* null, align 8
@g_doc_keywords = internal global i8* null, align 8
@g_target_annot_list = internal global %struct.t_target_annot_entry* null, align 8
@g_has_exported_targets = internal global i32 0, align 4
@.str.44 = private unnamed_addr constant [46 x i8] c"%%\0A%% /Dests dictionary (exported links):\0A%%\0A\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"<<\0A\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"/%s [ \00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c" /XYZ null null null ]\0A\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"%%\0A%% catalog:\0A%%\0A\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c"/Type /Catalog\0A\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"/Pages \00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"/Dests \00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"%%\0A%% Info object:\0A%%\0A\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"/Creator (%s)\0A\00", align 1
@.str.54 = private unnamed_addr constant [40 x i8] c"Basser Lout Version 3.24 (October 2000)\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"/Producer (%s)\0A\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"/CreationDate (D:%.4d%.2d%.2d%.2d%.2d%.2d)\0A\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"/Author (%s)\0A\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"/Title (%s)\0A\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"/Subject (%s)\0A\00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"/Keywords (%s)\0A\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"trailer\0A<<\0A\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"/Size %u\0A\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"/Root \00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"\0A/Info \00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c" >>\0Astartxref\0A%u\0A\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"%%EOF\0A\00", align 1
@.str.67 = private unnamed_addr constant [51 x i8] c"PDFFile_Cleanup: unresolved link annotation named \00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.69 = private unnamed_addr constant [40 x i8] c"PDFFont_NewListEntry: run out of memory\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.71 = private unnamed_addr constant [30 x i8] c"%%\0A%% page %u's contents:\0A%%\0A\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"<< /Length \00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c" >>\0Astream\0A\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"%u w\0A\00", align 1
@.str.75 = private unnamed_addr constant [20 x i8] c"assert failed in %s\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"BT\0A\00", align 1
@.str.77 = private unnamed_addr constant [18 x i8] c"1 0 0 1 %d %d Tm\0A\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"%d 0 Td\0A\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"[(\00", align 1
@.str.80 = private unnamed_addr constant [58 x i8] c"PDFPage_CollectExpr: expression too long (max. 512 chars)\00", align 1
@.str.81 = private unnamed_addr constant [31 x i8] c"PDFPage_EvalExpr: '(' expected\00", align 1
@.str.82 = private unnamed_addr constant [31 x i8] c"PDFPage_EvalExpr: ',' expected\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"PDFPage_EvalExpr: ')' expected\00", align 1
@g_unit_keywords = internal global [7 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0)], align 16
@.str.84 = private unnamed_addr constant [77 x i8] c"PDFPage_EvalExpr: __add, __sub, __mul, __div, or a unit keyword was expected\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.86 = private unnamed_addr constant [80 x i8] c"PDFPage_GetFloat: unable to evaluate number for Lout graphic keyword processing\00", align 1
@.str.87 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c"cm\00", align 1
@.str.89 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"em\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"loutf\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"loutv\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"louts\00", align 1
@.str.94 = private unnamed_addr constant [52 x i8] c"PDFPage_CollectLink: link too long (max. 512 chars)\00", align 1
@g_link = internal global [512 x i8] zeroinitializer, align 16
@.str.95 = private unnamed_addr constant [60 x i8] c"PDFPage_ProcessLinkKeyword: empty link-name / URI; ignored.\00", align 1
@g_dest_link_options = internal global [8 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i32 0, i32 0)], align 16
@g_external_file_spec_keyword = internal global [1 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i32 0, i32 0)], align 8
@.str.96 = private unnamed_addr constant [44 x i8] c"PDFPage_ProcessLinkKeyword: empty file spec\00", align 1
@.str.97 = private unnamed_addr constant [42 x i8] c"PDFPage_ProcessLinkKeyword: out of memory\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"__FitNoChange\00", align 1
@.str.99 = private unnamed_addr constant [6 x i8] c"__Fit\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"__FitH\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"__FitV\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"__FitR\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"__FitB\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"__FitBH\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"__FitBV\00", align 1
@.str.106 = private unnamed_addr constant [38 x i8] c"PDFSourceAnnot_New: run out of memory\00", align 1
@.str.107 = private unnamed_addr constant [11 x i8] c"__link_to=\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"PDFTargetAnnot_New: run out of memory\00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"xsize\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"ysize\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"xmark\00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"ymark\00", align 1
@.str.113 = private unnamed_addr constant [15 x i8] c"link_source=<<\00", align 1
@.str.114 = private unnamed_addr constant [17 x i8] c"link_external=<<\00", align 1
@.str.115 = private unnamed_addr constant [12 x i8] c"link_URI=<<\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"link_target=<<\00", align 1
@.str.117 = private unnamed_addr constant [26 x i8] c"link_target_for_export=<<\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"author=\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"title=\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"subject=\00", align 1
@.str.121 = private unnamed_addr constant [10 x i8] c"keywords=\00", align 1
@.str.122 = private unnamed_addr constant [55 x i8] c"PDFPage_ProcessDocInfoKeyword: no memory for __author=\00", align 1
@.str.123 = private unnamed_addr constant [54 x i8] c"PDFPage_ProcessDocInfoKeyword: no memory for __title=\00", align 1
@.str.124 = private unnamed_addr constant [56 x i8] c"PDFPage_ProcessDocInfoKeyword: no memory for __subject=\00", align 1
@.str.125 = private unnamed_addr constant [57 x i8] c"PDFPage_ProcessDocInfoKeyword: no memory for __keywords=\00", align 1
@.str.126 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.127 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.128 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c"div\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.131 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"pick\00", align 1
@.str.133 = private unnamed_addr constant [33 x i8] c"PDFObject_New: run out of memory\00", align 1
@.str.134 = private unnamed_addr constant [18 x i8] c"endstream\0Aendobj\0A\00", align 1
@.str.135 = private unnamed_addr constant [10 x i8] c"%u 0 obj\0A\00", align 1
@.str.136 = private unnamed_addr constant [34 x i8] c"%%\0A%% declare use of font %s:\0A%%\0A\00", align 1
@.str.137 = private unnamed_addr constant [32 x i8] c"<<\0A/Type /Font\0A/Subtype /Type1\0A\00", align 1
@.str.138 = private unnamed_addr constant [10 x i8] c"/Name %s\0A\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"/BaseFont /%s\0A\00", align 1
@.str.140 = private unnamed_addr constant [11 x i8] c"/Encoding \00", align 1
@g_standard_base_14_fonts = internal global [14 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.154, i32 0, i32 0)], align 16
@.str.141 = private unnamed_addr constant [8 x i8] c"Courier\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"Courier-Bold\00", align 1
@.str.143 = private unnamed_addr constant [16 x i8] c"Courier-Oblique\00", align 1
@.str.144 = private unnamed_addr constant [20 x i8] c"Courier-BoldOblique\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"Helvetica\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"Helvetica-Bold\00", align 1
@.str.147 = private unnamed_addr constant [18 x i8] c"Helvetica-Oblique\00", align 1
@.str.148 = private unnamed_addr constant [22 x i8] c"Helvetica-BoldOblique\00", align 1
@.str.149 = private unnamed_addr constant [7 x i8] c"Symbol\00", align 1
@.str.150 = private unnamed_addr constant [6 x i8] c"Times\00", align 1
@.str.151 = private unnamed_addr constant [11 x i8] c"Times-Bold\00", align 1
@.str.152 = private unnamed_addr constant [13 x i8] c"Times-Italic\00", align 1
@.str.153 = private unnamed_addr constant [17 x i8] c"Times-BoldItalic\00", align 1
@.str.154 = private unnamed_addr constant [13 x i8] c"ZapfDingbats\00", align 1
@.str.155 = private unnamed_addr constant [48 x i8] c"%%\0A%% annotation in page object # %u to %s:\0A%%\0A\00", align 1
@.str.156 = private unnamed_addr constant [72 x i8] c"<<\0A/Type /Annot\0A/Subtype /Link\0A/Rect [ %d %d %d %d ]\0A/Border [ 0 0 0 ]\0A\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c"/Dest [ \00", align 1
@.str.158 = private unnamed_addr constant [21 x i8] c" /XYZ null null null\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c" /Fit\00", align 1
@.str.160 = private unnamed_addr constant [10 x i8] c" /FitH %u\00", align 1
@.str.161 = private unnamed_addr constant [10 x i8] c" /FitV %u\00", align 1
@.str.162 = private unnamed_addr constant [19 x i8] c" /FitR %u %u %u %u\00", align 1
@.str.163 = private unnamed_addr constant [7 x i8] c" /FitB\00", align 1
@.str.164 = private unnamed_addr constant [11 x i8] c" /FitBH %u\00", align 1
@.str.165 = private unnamed_addr constant [11 x i8] c" /FitBV %u\00", align 1
@.str.166 = private unnamed_addr constant [47 x i8] c"PDFSourceAnnot_Write: invalid link dest option\00", align 1
@.str.167 = private unnamed_addr constant [50 x i8] c"/A << /Type /Action /S /GoToR /D (%s) /F\0A(%s) >>\0A\00", align 1
@.str.168 = private unnamed_addr constant [42 x i8] c"/A << /Type /Action /S /URI /URI\0A(%s) >>\0A\00", align 1
@.str.169 = private unnamed_addr constant [7 x i8] c"%u 0 R\00", align 1
@.str.170 = private unnamed_addr constant [30 x i8] c"%%\0A%% root of pages tree:\0A%%\0A\00", align 1
@.str.171 = private unnamed_addr constant [14 x i8] c"/Type /Pages\0A\00", align 1
@.str.172 = private unnamed_addr constant [9 x i8] c"/Kids [ \00", align 1
@.str.173 = private unnamed_addr constant [14 x i8] c" ]\0A/Count %u\0A\00", align 1
@.str.174 = private unnamed_addr constant [25 x i8] c"/MediaBox [ 0 0 %u %u ]\0A\00", align 1
@.str.175 = private unnamed_addr constant [22 x i8] c"%%\0A%% xref table:\0A%%\0A\00", align 1
@.str.176 = private unnamed_addr constant [6 x i8] c"xref\0A\00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"0 %u\0A\00", align 1
@.str.178 = private unnamed_addr constant [21 x i8] c"0000000000 65535 f \0A\00", align 1
@.str.179 = private unnamed_addr constant [16 x i8] c"%010u 00000 n \0A\00", align 1
@.str.180 = private unnamed_addr constant [45 x i8] c"PDFFile_WriteXREF: undefined object number: \00", align 1

; Function Attrs: nounwind uwtable
define i32 @PDFHasValidTextMatrix() #0 {
  %1 = load i32, i32* @g_valid_text_matrix, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define void @PDFFile_BeginFontEncoding(%struct._IO_FILE* %in_fp, i8* %in_encoding_name) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %next_ref.i = alloca i32, align 4
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i8*, align 8
  %encoding_num = alloca i32, align 4
  %encoding_entry = alloca %struct.t_font_encoding_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %2, align 8
  store i8* %in_encoding_name, i8** %3, align 8
  %4 = load i32, i32* @g_PDF_debug, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %10

; <label>:6                                       ; preds = %0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i32 0, i32 0), i8* %8)
  br label %10

; <label>:10                                      ; preds = %6, %0
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %12 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12)
  %13 = bitcast i32* %next_ref.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13)
  store %struct._IO_FILE* %11, %struct._IO_FILE** %1, align 8
  %14 = call i32 @PDFObject_New() #5
  store i32 %14, i32* %next_ref.i, align 4
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %16 = load i32, i32* %next_ref.i, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %15, i32 %16) #5
  %17 = load i32, i32* %next_ref.i, align 4
  %18 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18)
  %19 = bitcast i32* %next_ref.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19)
  store i32 %17, i32* %encoding_num, align 4
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %21 = call i32 @fputs(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i32 0, i32 0), %struct._IO_FILE* %20)
  %22 = call noalias i8* @malloc(i64 24) #5
  %23 = bitcast i8* %22 to %struct.t_font_encoding_entry*
  store %struct.t_font_encoding_entry* %23, %struct.t_font_encoding_entry** %encoding_entry, align 8
  %24 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %encoding_entry, align 8
  %25 = icmp eq %struct.t_font_encoding_entry* %24, null
  br i1 %25, label %26, label %29

; <label>:26                                      ; preds = %10
  %27 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %28 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i32 1, %struct.FILE_POS* %27)
  br label %29

; <label>:29                                      ; preds = %26, %10
  %30 = load i8*, i8** %3, align 8
  %31 = call i64 @strlen(i8* %30) #6
  %32 = add i64 %31, 1
  %33 = call noalias i8* @malloc(i64 %32) #5
  %34 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %encoding_entry, align 8
  %35 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %34, i32 0, i32 2
  store i8* %33, i8** %35, align 8
  %36 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %encoding_entry, align 8
  %37 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %36, i32 0, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %43

; <label>:40                                      ; preds = %29
  %41 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %42 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 1, %struct.FILE_POS* %41)
  br label %43

; <label>:43                                      ; preds = %40, %29
  %44 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** @g_font_encoding_list, align 8
  %45 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %encoding_entry, align 8
  %46 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %45, i32 0, i32 0
  store %struct.t_font_encoding_entry* %44, %struct.t_font_encoding_entry** %46, align 8
  %47 = load i32, i32* %encoding_num, align 4
  %48 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %encoding_entry, align 8
  %49 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %48, i32 0, i32 1
  store i32 %47, i32* %49, align 4
  %50 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %encoding_entry, align 8
  %51 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %50, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = load i8*, i8** %3, align 8
  %54 = call i8* @strcpy(i8* %52, i8* %53) #5
  %55 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %encoding_entry, align 8
  store %struct.t_font_encoding_entry* %55, %struct.t_font_encoding_entry** @g_font_encoding_list, align 8
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare i32 @fputs(i8*, %struct._IO_FILE*) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare i8* @Error(i32, i32, i8*, i32, %struct.FILE_POS*, ...) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define void @PDFFile_EndFontEncoding(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %3 = call i32 @fputs(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), %struct._IO_FILE* %2)
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFFont_AddFont(%struct._IO_FILE* %in_fp, i8* %in_short_font_name, i8* %in_real_font_name, i8* %in_font_encoding_name) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %next_font_num.i = alloca i32, align 4
  %new_entry.i = alloca %struct.t_font_list_entry*, align 8
  %PDF_font_name.i = alloca [64 x i8], align 16
  %num.i = alloca [32 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %entry.i.1 = alloca %struct.t_font_encoding_entry*, align 8
  %6 = alloca i8*, align 8
  %entry.i = alloca %struct.t_font_list_entry*, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %entry = alloca %struct.t_font_list_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %7, align 8
  store i8* %in_short_font_name, i8** %8, align 8
  store i8* %in_real_font_name, i8** %9, align 8
  store i8* %in_font_encoding_name, i8** %10, align 8
  %11 = load i8*, i8** %9, align 8
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12)
  %13 = bitcast %struct.t_font_list_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13)
  store i8* %11, i8** %6, align 8
  %14 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_list_entry* %14, %struct.t_font_list_entry** %entry.i, align 8
  br label %15

; <label>:15                                      ; preds = %26, %0
  %16 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %17 = icmp ne %struct.t_font_list_entry* %16, null
  br i1 %17, label %18, label %PDFFont_FindListEntry.exit

; <label>:18                                      ; preds = %15
  %19 = load i8*, i8** %6, align 8
  %20 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %21 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %20, i32 0, i32 3
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @strcmp(i8* %19, i8* %22) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %18
  br label %PDFFont_FindListEntry.exit

; <label>:26                                      ; preds = %18
  %27 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %28 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %27, i32 0, i32 0
  %29 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %28, align 8
  store %struct.t_font_list_entry* %29, %struct.t_font_list_entry** %entry.i, align 8
  br label %15

PDFFont_FindListEntry.exit:                       ; preds = %25, %15
  %30 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31)
  %32 = bitcast %struct.t_font_list_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32)
  store %struct.t_font_list_entry* %30, %struct.t_font_list_entry** %entry, align 8
  %33 = load i8*, i8** %8, align 8
  %34 = load i8*, i8** %9, align 8
  %35 = load i8*, i8** %10, align 8
  %36 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %36)
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %37)
  %38 = bitcast %struct.t_font_encoding_entry** %entry.i.1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %38)
  store i8* %35, i8** %5, align 8
  %39 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** @g_font_encoding_list, align 8
  store %struct.t_font_encoding_entry* %39, %struct.t_font_encoding_entry** %entry.i.1, align 8
  %40 = load i8*, i8** %5, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %PDFFont_FindListEntry.exit
  store i32 0, i32* %4
  br label %PDFFont_FindFontEncoding.exit

; <label>:43                                      ; preds = %PDFFont_FindListEntry.exit
  br label %44

; <label>:44                                      ; preds = %55, %43
  %45 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %entry.i.1, align 8
  %46 = icmp ne %struct.t_font_encoding_entry* %45, null
  br i1 %46, label %47, label %59

; <label>:47                                      ; preds = %44
  %48 = load i8*, i8** %5, align 8
  %49 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %entry.i.1, align 8
  %50 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %49, i32 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 @strcmp(i8* %48, i8* %51) #6
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

; <label>:54                                      ; preds = %47
  br label %59

; <label>:55                                      ; preds = %47
  %56 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %entry.i.1, align 8
  %57 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %56, i32 0, i32 0
  %58 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %57, align 8
  store %struct.t_font_encoding_entry* %58, %struct.t_font_encoding_entry** %entry.i.1, align 8
  br label %44

; <label>:59                                      ; preds = %54, %44
  %60 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %entry.i.1, align 8
  %61 = icmp ne %struct.t_font_encoding_entry* %60, null
  br i1 %61, label %62, label %66

; <label>:62                                      ; preds = %59
  %63 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %entry.i.1, align 8
  %64 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  br label %67

; <label>:66                                      ; preds = %59
  br label %67

; <label>:67                                      ; preds = %66, %62
  %68 = phi i32 [ %65, %62 ], [ 0, %66 ]
  store i32 %68, i32* %4
  br label %PDFFont_FindFontEncoding.exit

PDFFont_FindFontEncoding.exit:                    ; preds = %67, %42
  %69 = load i32, i32* %4
  %70 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70)
  %71 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %71)
  %72 = bitcast %struct.t_font_encoding_entry** %entry.i.1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %72)
  %73 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %73)
  %74 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %74)
  %75 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %75)
  %76 = bitcast i32* %next_font_num.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %76)
  %77 = bitcast %struct.t_font_list_entry** %new_entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %77)
  %78 = bitcast [64 x i8]* %PDF_font_name.i to i8*
  call void @llvm.lifetime.start(i64 64, i8* %78)
  %79 = bitcast [32 x i8]* %num.i to i8*
  call void @llvm.lifetime.start(i64 32, i8* %79)
  store i8* %33, i8** %1, align 8
  store i8* %34, i8** %2, align 8
  store i32 %69, i32* %3, align 4
  store i32 0, i32* %next_font_num.i, align 4
  %80 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_list_entry* %80, %struct.t_font_list_entry** %new_entry.i, align 8
  br label %81

; <label>:81                                      ; preds = %84, %PDFFont_FindFontEncoding.exit
  %82 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %83 = icmp ne %struct.t_font_list_entry* %82, null
  br i1 %83, label %84, label %90

; <label>:84                                      ; preds = %81
  %85 = load i32, i32* %next_font_num.i, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %next_font_num.i, align 4
  %87 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %88 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %87, i32 0, i32 0
  %89 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %88, align 8
  store %struct.t_font_list_entry* %89, %struct.t_font_list_entry** %new_entry.i, align 8
  br label %81

; <label>:90                                      ; preds = %81
  %91 = bitcast [64 x i8]* %PDF_font_name.i to i8*
  call void @llvm.memset.p0i8.i64(i8* %91, i8 0, i64 64, i32 16, i1 false) #5
  %92 = bitcast i8* %91 to [64 x i8]*
  %93 = getelementptr [64 x i8], [64 x i8]* %92, i32 0, i32 0
  store i8 47, i8* %93
  %94 = getelementptr [64 x i8], [64 x i8]* %92, i32 0, i32 1
  store i8 70, i8* %94
  %95 = call noalias i8* @malloc(i64 48) #5
  %96 = bitcast i8* %95 to %struct.t_font_list_entry*
  store %struct.t_font_list_entry* %96, %struct.t_font_list_entry** %new_entry.i, align 8
  %97 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %98 = icmp eq %struct.t_font_list_entry* %97, null
  br i1 %98, label %99, label %102

; <label>:99                                      ; preds = %90
  %100 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %101 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i32 0, i32 0), i32 1, %struct.FILE_POS* %100) #5
  br label %102

; <label>:102                                     ; preds = %99, %90
  %103 = getelementptr inbounds [32 x i8], [32 x i8]* %num.i, i32 0, i32 0
  %104 = load i32, i32* %next_font_num.i, align 4
  %105 = call i32 (i8*, i8*, ...) @sprintf(i8* %103, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i32 0, i32 0), i32 %104) #5
  %106 = getelementptr inbounds [64 x i8], [64 x i8]* %PDF_font_name.i, i32 0, i32 0
  %107 = getelementptr inbounds [32 x i8], [32 x i8]* %num.i, i32 0, i32 0
  %108 = call i8* @strcat(i8* %106, i8* %107) #5
  %109 = getelementptr inbounds [64 x i8], [64 x i8]* %PDF_font_name.i, i32 0, i32 0
  %110 = call i64 @strlen(i8* %109) #6
  %111 = add i64 %110, 1
  %112 = call noalias i8* @malloc(i64 %111) #5
  %113 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %114 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %113, i32 0, i32 1
  store i8* %112, i8** %114, align 8
  %115 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %116 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %115, i32 0, i32 1
  %117 = load i8*, i8** %116, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %119, label %122

; <label>:119                                     ; preds = %102
  %120 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %121 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i32 0, i32 0), i32 1, %struct.FILE_POS* %120) #5
  br label %122

; <label>:122                                     ; preds = %119, %102
  %123 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %124 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %123, i32 0, i32 1
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds [64 x i8], [64 x i8]* %PDF_font_name.i, i32 0, i32 0
  %127 = call i8* @strcpy(i8* %125, i8* %126) #5
  %128 = load i8*, i8** %1, align 8
  %129 = call i64 @strlen(i8* %128) #6
  %130 = add i64 %129, 1
  %131 = call noalias i8* @malloc(i64 %130) #5
  %132 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %133 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %132, i32 0, i32 2
  store i8* %131, i8** %133, align 8
  %134 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %135 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %134, i32 0, i32 2
  %136 = load i8*, i8** %135, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %138, label %141

; <label>:138                                     ; preds = %122
  %139 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %140 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 6, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i32 0, i32 0), i32 1, %struct.FILE_POS* %139) #5
  br label %141

; <label>:141                                     ; preds = %138, %122
  %142 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %143 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %142, i32 0, i32 2
  %144 = load i8*, i8** %143, align 8
  %145 = load i8*, i8** %1, align 8
  %146 = call i8* @strcpy(i8* %144, i8* %145) #5
  %147 = load i8*, i8** %2, align 8
  %148 = call i64 @strlen(i8* %147) #6
  %149 = add i64 %148, 1
  %150 = call noalias i8* @malloc(i64 %149) #5
  %151 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %152 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %151, i32 0, i32 3
  store i8* %150, i8** %152, align 8
  %153 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %154 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %153, i32 0, i32 3
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %157, label %PDFFont_NewListEntry.exit

; <label>:157                                     ; preds = %141
  %158 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %159 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i32 0, i32 0), i32 1, %struct.FILE_POS* %158) #5
  br label %PDFFont_NewListEntry.exit

PDFFont_NewListEntry.exit:                        ; preds = %157, %141
  %160 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %161 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %160, i32 0, i32 3
  %162 = load i8*, i8** %161, align 8
  %163 = load i8*, i8** %2, align 8
  %164 = call i8* @strcpy(i8* %162, i8* %163) #5
  %165 = load i32, i32* %3, align 4
  %166 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %167 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %166, i32 0, i32 4
  store i32 %165, i32* %167, align 4
  %168 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %169 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %168, i32 0, i32 5
  store i32 0, i32* %169, align 4
  %170 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %171 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %170, i32 0, i32 6
  store i32 0, i32* %171, align 4
  %172 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  %173 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %174 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %173, i32 0, i32 0
  store %struct.t_font_list_entry* %172, %struct.t_font_list_entry** %174, align 8
  %175 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  store %struct.t_font_list_entry* %175, %struct.t_font_list_entry** @g_font_list, align 8
  %176 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %new_entry.i, align 8
  %177 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %177)
  %178 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %178)
  %179 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %179)
  %180 = bitcast i32* %next_font_num.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %180)
  %181 = bitcast %struct.t_font_list_entry** %new_entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %181)
  %182 = bitcast [64 x i8]* %PDF_font_name.i to i8*
  call void @llvm.lifetime.end(i64 64, i8* %182)
  %183 = bitcast [32 x i8]* %num.i to i8*
  call void @llvm.lifetime.end(i64 32, i8* %183)
  store %struct.t_font_list_entry* %176, %struct.t_font_list_entry** %entry, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_SetVars(i32 %xsize, i32 %ysize, i32 %xmark, i32 %ymark, i32 %loutf, i32 %loutv, i32 %louts) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %xsize, i32* %1, align 4
  store i32 %ysize, i32* %2, align 4
  store i32 %xmark, i32* %3, align 4
  store i32 %ymark, i32* %4, align 4
  store i32 %loutf, i32* %5, align 4
  store i32 %loutv, i32* %6, align 4
  store i32 %louts, i32* %7, align 4
  %8 = load i32, i32* %1, align 4
  store i32 %8, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 0), align 4
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 1), align 4
  %10 = load i32, i32* %3, align 4
  store i32 %10, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 2), align 4
  %11 = load i32, i32* %4, align 4
  store i32 %11, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 3), align 4
  %12 = load i32, i32* %5, align 4
  store i32 %12, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 4), align 4
  %13 = load i32, i32* %6, align 4
  store i32 %13, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 5), align 4
  %14 = load i32, i32* %7, align 4
  store i32 %14, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 6), align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_Write(%struct._IO_FILE* %in_fp, i8* %in_str) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct._IO_FILE*, align 8
  %entry.i = alloca %struct.t_qsave_marking_entry*, align 8
  %12 = alloca %struct._IO_FILE*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct._IO_FILE*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca %struct._IO_FILE*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct._IO_FILE*, align 8
  %next_ref.i.i = alloca i32, align 4
  %19 = alloca %struct._IO_FILE*, align 8
  %str.i = alloca [512 x i8], align 16
  %20 = alloca %struct._IO_FILE*, align 8
  %21 = alloca i8*, align 8
  %len = alloca i32, align 4
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %20, align 8
  store i8* %in_str, i8** %21, align 8
  %22 = load i8*, i8** %21, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %0
  br label %229

; <label>:27                                      ; preds = %0
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %29 = bitcast %struct._IO_FILE** %19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %29)
  %30 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.start(i64 512, i8* %30)
  store %struct._IO_FILE* %28, %struct._IO_FILE** %19, align 8
  %31 = load i32, i32* @g_page_contents_obj_num, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %PDFPage_Begin.exit

; <label>:33                                      ; preds = %27
  %34 = load i32, i32* @g_PDF_debug, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %40

; <label>:36                                      ; preds = %33
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %38 = load i32, i32* @g_page_count, align 4
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.71, i32 0, i32 0), i32 %38) #5
  br label %40

; <label>:40                                      ; preds = %36, %33
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %42 = bitcast %struct._IO_FILE** %18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %42) #5
  %43 = bitcast i32* %next_ref.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #5
  store %struct._IO_FILE* %41, %struct._IO_FILE** %18, align 8
  %44 = call i32 @PDFObject_New() #5
  store i32 %44, i32* %next_ref.i.i, align 4
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %18, align 8
  %46 = load i32, i32* %next_ref.i.i, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %45, i32 %46) #5
  %47 = load i32, i32* %next_ref.i.i, align 4
  %48 = bitcast %struct._IO_FILE** %18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #5
  %49 = bitcast i32* %next_ref.i.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #5
  store i32 %47, i32* @g_page_contents_obj_num, align 4
  %50 = call i32 @PDFObject_New() #5
  store i32 %50, i32* @g_page_length_obj_num, align 4
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %52 = call i32 @fputs(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i32 0, i32 0), %struct._IO_FILE* %51) #5
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %54 = load i32, i32* @g_page_length_obj_num, align 4
  %55 = bitcast %struct._IO_FILE** %16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55) #5
  %56 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %56) #5
  store %struct._IO_FILE* %53, %struct._IO_FILE** %16, align 8
  store i32 %54, i32* %17, align 4
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %16, align 8
  %58 = load i32, i32* %17, align 4
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %58) #5
  %60 = bitcast %struct._IO_FILE** %16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %60) #5
  %61 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #5
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %63 = call i32 @fputs(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i32 0, i32 0), %struct._IO_FILE* %62) #5
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64) #5
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* @g_page_start_offset, align 4
  %67 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %68 = load float, float* @g_page_h_scale_factor, align 4
  %69 = fpext float %68 to double
  %70 = load float, float* @g_page_v_scale_factor, align 4
  %71 = fpext float %70 to double
  %72 = call i32 (i8*, i8*, ...) @sprintf(i8* %67, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), double %69, double %71) #5
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %74 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %75 = bitcast %struct._IO_FILE** %14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %75) #5
  %76 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %76) #5
  store %struct._IO_FILE* %73, %struct._IO_FILE** %14, align 8
  store i8* %74, i8** %15, align 8
  %77 = load i8*, i8** %15, align 8
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

; <label>:81                                      ; preds = %40
  br label %PDFPage_WriteStream.exit.i

; <label>:82                                      ; preds = %40
  %83 = load i8*, i8** %15, align 8
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %85 = call i32 @fputs(i8* %83, %struct._IO_FILE* %84) #5
  br label %PDFPage_WriteStream.exit.i

PDFPage_WriteStream.exit.i:                       ; preds = %82, %81
  %86 = bitcast %struct._IO_FILE** %14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86) #5
  %87 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %87) #5
  %88 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %89 = load i32, i32* @g_page_line_width, align 4
  %90 = call i32 (i8*, i8*, ...) @sprintf(i8* %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i32 0, i32 0), i32 %89) #5
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %92 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %93 = bitcast %struct._IO_FILE** %12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %93) #5
  %94 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %94) #5
  store %struct._IO_FILE* %91, %struct._IO_FILE** %12, align 8
  store i8* %92, i8** %13, align 8
  %95 = load i8*, i8** %13, align 8
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

; <label>:99                                      ; preds = %PDFPage_WriteStream.exit.i
  br label %PDFPage_WriteStream.exit1.i

; <label>:100                                     ; preds = %PDFPage_WriteStream.exit.i
  %101 = load i8*, i8** %13, align 8
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %103 = call i32 @fputs(i8* %101, %struct._IO_FILE* %102) #5
  br label %PDFPage_WriteStream.exit1.i

PDFPage_WriteStream.exit1.i:                      ; preds = %100, %99
  %104 = bitcast %struct._IO_FILE** %12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %104) #5
  %105 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %105) #5
  br label %PDFPage_Begin.exit

PDFPage_Begin.exit:                               ; preds = %PDFPage_WriteStream.exit1.i, %27
  %106 = bitcast %struct._IO_FILE** %19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %106)
  %107 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.end(i64 512, i8* %107)
  %108 = load i32, i32* @g_in_buffering_mode, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %177

; <label>:110                                     ; preds = %PDFPage_Begin.exit
  %111 = load i8*, i8** %21, align 8
  %112 = call i64 @strlen(i8* %111) #6
  %113 = trunc i64 %112 to i32
  store i32 %113, i32* %len, align 4
  %114 = load i32, i32* @g_buffer_pos, align 4
  %115 = load i32, i32* %len, align 4
  %116 = add i32 %114, %115
  %117 = icmp ugt i32 %116, 1023
  br i1 %117, label %118, label %167

; <label>:118                                     ; preds = %110
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %120 = bitcast %struct._IO_FILE** %11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %120)
  %121 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %121)
  store %struct._IO_FILE* %119, %struct._IO_FILE** %11, align 8
  %122 = load i32, i32* @g_in_buffering_mode, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %PDFPage_FlushBuffer.exit

; <label>:124                                     ; preds = %118
  store i32 0, i32* @g_in_buffering_mode, align 4
  br label %125

; <label>:125                                     ; preds = %128, %124
  %126 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %127 = icmp ne %struct.t_qsave_marking_entry* %126, null
  br i1 %127, label %128, label %135

; <label>:128                                     ; preds = %125
  %129 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  store %struct.t_qsave_marking_entry* %129, %struct.t_qsave_marking_entry** %entry.i, align 8
  %130 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %131 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %130, i32 0, i32 0
  %132 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %131, align 8
  store %struct.t_qsave_marking_entry* %132, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %133 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %134 = bitcast %struct.t_qsave_marking_entry* %133 to i8*
  call void @free(i8* %134) #5
  br label %125

; <label>:135                                     ; preds = %125
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %137 = bitcast %struct._IO_FILE** %9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %137) #5
  %138 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %138) #5
  store %struct._IO_FILE* %136, %struct._IO_FILE** %9, align 8
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i32 0), i8** %10, align 8
  %139 = load i8*, i8** %10, align 8
  %140 = load i8, i8* %139, align 1
  %141 = sext i8 %140 to i32
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

; <label>:143                                     ; preds = %135
  br label %PDFPage_WriteStream.exit.i.1

; <label>:144                                     ; preds = %135
  %145 = load i8*, i8** %10, align 8
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %147 = call i32 @fputs(i8* %145, %struct._IO_FILE* %146) #5
  br label %PDFPage_WriteStream.exit.i.1

PDFPage_WriteStream.exit.i.1:                     ; preds = %144, %143
  %148 = bitcast %struct._IO_FILE** %9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %148) #5
  %149 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %149) #5
  br label %PDFPage_FlushBuffer.exit

PDFPage_FlushBuffer.exit:                         ; preds = %PDFPage_WriteStream.exit.i.1, %118
  %150 = bitcast %struct._IO_FILE** %11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %150)
  %151 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %151)
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %153 = load i8*, i8** %21, align 8
  %154 = bitcast %struct._IO_FILE** %7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %154)
  %155 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %155)
  store %struct._IO_FILE* %152, %struct._IO_FILE** %7, align 8
  store i8* %153, i8** %8, align 8
  %156 = load i8*, i8** %8, align 8
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

; <label>:160                                     ; preds = %PDFPage_FlushBuffer.exit
  br label %PDFPage_WriteStream.exit

; <label>:161                                     ; preds = %PDFPage_FlushBuffer.exit
  %162 = load i8*, i8** %8, align 8
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %164 = call i32 @fputs(i8* %162, %struct._IO_FILE* %163) #5
  br label %PDFPage_WriteStream.exit

PDFPage_WriteStream.exit:                         ; preds = %161, %160
  %165 = bitcast %struct._IO_FILE** %7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %165)
  %166 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %166)
  br label %176

; <label>:167                                     ; preds = %110
  %168 = load i32, i32* @g_buffer_pos, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i32 0), i64 %169
  %171 = load i8*, i8** %21, align 8
  %172 = call i8* @strcpy(i8* %170, i8* %171) #5
  %173 = load i32, i32* %len, align 4
  %174 = load i32, i32* @g_buffer_pos, align 4
  %175 = add i32 %174, %173
  store i32 %175, i32* @g_buffer_pos, align 4
  br label %176

; <label>:176                                     ; preds = %167, %PDFPage_WriteStream.exit
  br label %229

; <label>:177                                     ; preds = %PDFPage_Begin.exit
  %178 = load i32, i32* @g_TJ_pending, align 4
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %195

; <label>:180                                     ; preds = %177
  store i32 0, i32* @g_TJ_pending, align 4
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %182 = bitcast %struct._IO_FILE** %5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %182)
  %183 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %183)
  store %struct._IO_FILE* %181, %struct._IO_FILE** %5, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %6, align 8
  %184 = load i8*, i8** %6, align 8
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

; <label>:188                                     ; preds = %180
  br label %PDFPage_WriteStream.exit2

; <label>:189                                     ; preds = %180
  %190 = load i8*, i8** %6, align 8
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %192 = call i32 @fputs(i8* %190, %struct._IO_FILE* %191) #5
  br label %PDFPage_WriteStream.exit2

PDFPage_WriteStream.exit2:                        ; preds = %189, %188
  %193 = bitcast %struct._IO_FILE** %5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %193)
  %194 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %194)
  br label %195

; <label>:195                                     ; preds = %PDFPage_WriteStream.exit2, %177
  %196 = load i32, i32* @g_ET_pending, align 4
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %198, label %213

; <label>:198                                     ; preds = %195
  store i32 0, i32* @g_ET_pending, align 4
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %200 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %200)
  %201 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %201)
  store %struct._IO_FILE* %199, %struct._IO_FILE** %3, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8** %4, align 8
  %202 = load i8*, i8** %4, align 8
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

; <label>:206                                     ; preds = %198
  br label %PDFPage_WriteStream.exit3

; <label>:207                                     ; preds = %198
  %208 = load i8*, i8** %4, align 8
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %210 = call i32 @fputs(i8* %208, %struct._IO_FILE* %209) #5
  br label %PDFPage_WriteStream.exit3

PDFPage_WriteStream.exit3:                        ; preds = %207, %206
  %211 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %211)
  %212 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %212)
  store i32 0, i32* @g_valid_text_matrix, align 4
  br label %213

; <label>:213                                     ; preds = %PDFPage_WriteStream.exit3, %195
  %214 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %215 = load i8*, i8** %21, align 8
  %216 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %216)
  %217 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %217)
  store %struct._IO_FILE* %214, %struct._IO_FILE** %1, align 8
  store i8* %215, i8** %2, align 8
  %218 = load i8*, i8** %2, align 8
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

; <label>:222                                     ; preds = %213
  br label %PDFPage_WriteStream.exit4

; <label>:223                                     ; preds = %213
  %224 = load i8*, i8** %2, align 8
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %226 = call i32 @fputs(i8* %224, %struct._IO_FILE* %225) #5
  br label %PDFPage_WriteStream.exit4

PDFPage_WriteStream.exit4:                        ; preds = %223, %222
  %227 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %227)
  %228 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %228)
  br label %229

; <label>:229                                     ; preds = %PDFPage_WriteStream.exit4, %176, %26
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_Push(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %entry = alloca %struct.t_qsave_entry*, align 8
  %entry1 = alloca %struct.t_qsave_marking_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  %2 = call noalias i8* @malloc(i64 24) #5
  %3 = bitcast i8* %2 to %struct.t_qsave_entry*
  store %struct.t_qsave_entry* %3, %struct.t_qsave_entry** %entry, align 8
  %4 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %5 = icmp eq %struct.t_qsave_entry* %4, null
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %8 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i32 1, %struct.FILE_POS* %7)
  br label %9

; <label>:9                                       ; preds = %6, %0
  %10 = load i32, i32* @g_page_h_origin, align 4
  %11 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %12 = getelementptr inbounds %struct.t_qsave_entry, %struct.t_qsave_entry* %11, i32 0, i32 1
  store i32 %10, i32* %12, align 4
  %13 = load i32, i32* @g_page_v_origin, align 4
  %14 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %15 = getelementptr inbounds %struct.t_qsave_entry, %struct.t_qsave_entry* %14, i32 0, i32 2
  store i32 %13, i32* %15, align 4
  %16 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** @g_qsave_stack, align 8
  %17 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %18 = getelementptr inbounds %struct.t_qsave_entry, %struct.t_qsave_entry* %17, i32 0, i32 0
  store %struct.t_qsave_entry* %16, %struct.t_qsave_entry** %18, align 8
  %19 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  store %struct.t_qsave_entry* %19, %struct.t_qsave_entry** @g_qsave_stack, align 8
  %20 = load i32, i32* @g_in_buffering_mode, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %38

; <label>:22                                      ; preds = %9
  %23 = call noalias i8* @malloc(i64 16) #5
  %24 = bitcast i8* %23 to %struct.t_qsave_marking_entry*
  store %struct.t_qsave_marking_entry* %24, %struct.t_qsave_marking_entry** %entry1, align 8
  %25 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  %26 = icmp eq %struct.t_qsave_marking_entry* %25, null
  br i1 %26, label %27, label %30

; <label>:27                                      ; preds = %22
  %28 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %29 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 15, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i32 1, %struct.FILE_POS* %28)
  br label %30

; <label>:30                                      ; preds = %27, %22
  %31 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %32 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  %33 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %32, i32 0, i32 0
  store %struct.t_qsave_marking_entry* %31, %struct.t_qsave_marking_entry** %33, align 8
  %34 = load i32, i32* @g_buffer_pos, align 4
  %35 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  %36 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %35, i32 0, i32 1
  store i32 %34, i32* %36, align 4
  %37 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  store %struct.t_qsave_marking_entry* %37, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  br label %38

; <label>:38                                      ; preds = %30, %9
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  call void @PDFPage_Write(%struct._IO_FILE* %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_Pop(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.FILE_POS*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.FILE_POS*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %entry = alloca %struct.t_qsave_entry*, align 8
  %entry1 = alloca %struct.t_qsave_marking_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %5, align 8
  %6 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** @g_qsave_stack, align 8
  store %struct.t_qsave_entry* %6, %struct.t_qsave_entry** %entry, align 8
  %7 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %8 = getelementptr inbounds %struct.t_qsave_entry, %struct.t_qsave_entry* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* @g_page_h_origin, align 4
  %10 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %11 = getelementptr inbounds %struct.t_qsave_entry, %struct.t_qsave_entry* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* @g_page_v_origin, align 4
  %13 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %14 = getelementptr inbounds %struct.t_qsave_entry, %struct.t_qsave_entry* %13, i32 0, i32 0
  %15 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %14, align 8
  store %struct.t_qsave_entry* %15, %struct.t_qsave_entry** @g_qsave_stack, align 8
  %16 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** %entry, align 8
  %17 = bitcast %struct.t_qsave_entry* %16 to i8*
  call void @free(i8* %17) #5
  %18 = load i32, i32* @g_in_buffering_mode, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %51

; <label>:20                                      ; preds = %0
  %21 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  store %struct.t_qsave_marking_entry* %21, %struct.t_qsave_marking_entry** %entry1, align 8
  %22 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  %23 = icmp ne %struct.t_qsave_marking_entry* %22, null
  %24 = zext i1 %23 to i32
  %25 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %26 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26)
  %27 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27)
  store i32 %24, i32* %3, align 4
  store %struct.FILE_POS* %25, %struct.FILE_POS** %4, align 8
  %28 = load i32, i32* %3, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %Assert.exit, label %30

; <label>:30                                      ; preds = %20
  %31 = load i32, i32* %3, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %37, label %33

; <label>:33                                      ; preds = %30
  %34 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %35 = load %struct.FILE_POS*, %struct.FILE_POS** %4, align 8
  %36 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %34, %struct.FILE_POS* %35) #5
  br label %37

; <label>:37                                      ; preds = %33, %30
  br label %Assert.exit

Assert.exit:                                      ; preds = %37, %20
  %38 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %38)
  %39 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39)
  %40 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  %41 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %40, i32 0, i32 0
  %42 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %41, align 8
  store %struct.t_qsave_marking_entry* %42, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %43 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  %44 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* @g_buffer_pos, align 4
  %46 = load i32, i32* @g_buffer_pos, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [1024 x i8], [1024 x i8]* @g_buffer, i32 0, i64 %47
  store i8 0, i8* %48, align 1
  %49 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry1, align 8
  %50 = bitcast %struct.t_qsave_marking_entry* %49 to i8*
  call void @free(i8* %50) #5
  br label %71

; <label>:51                                      ; preds = %0
  %52 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %53 = icmp eq %struct.t_qsave_marking_entry* %52, null
  %54 = zext i1 %53 to i32
  %55 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %56 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %56)
  %57 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %57)
  store i32 %54, i32* %1, align 4
  store %struct.FILE_POS* %55, %struct.FILE_POS** %2, align 8
  %58 = load i32, i32* %1, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %Assert.exit1, label %60

; <label>:60                                      ; preds = %51
  %61 = load i32, i32* %1, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %67, label %63

; <label>:63                                      ; preds = %60
  %64 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %65 = load %struct.FILE_POS*, %struct.FILE_POS** %2, align 8
  %66 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %64, %struct.FILE_POS* %65) #5
  br label %67

; <label>:67                                      ; preds = %63, %60
  br label %Assert.exit1

Assert.exit1:                                     ; preds = %67, %51
  %68 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68)
  %69 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %69)
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  call void @PDFPage_Write(%struct._IO_FILE* %70, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0))
  br label %71

; <label>:71                                      ; preds = %Assert.exit1, %Assert.exit
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define void @PDFFont_Set(%struct._IO_FILE* %in_fp, i32 %in_font_size, i8* %in_short_font_name) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %entry.i = alloca %struct.t_font_list_entry*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %str = alloca [512 x i8], align 16
  %entry = alloca %struct.t_font_list_entry*, align 8
  %cur_ET_pending = alloca i32, align 4
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %4, align 8
  store i32 %in_font_size, i32* %5, align 4
  store i8* %in_short_font_name, i8** %6, align 8
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8)
  %9 = bitcast %struct.t_font_list_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9)
  store i8* %7, i8** %3, align 8
  %10 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_list_entry* %10, %struct.t_font_list_entry** %entry.i, align 8
  br label %11

; <label>:11                                      ; preds = %22, %0
  %12 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %13 = icmp ne %struct.t_font_list_entry* %12, null
  br i1 %13, label %14, label %PDFFont_FindListEntry_Short.exit

; <label>:14                                      ; preds = %11
  %15 = load i8*, i8** %3, align 8
  %16 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %17 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %16, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @strcmp(i8* %15, i8* %18) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %14
  br label %PDFFont_FindListEntry_Short.exit

; <label>:22                                      ; preds = %14
  %23 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %24 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %23, i32 0, i32 0
  %25 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %24, align 8
  store %struct.t_font_list_entry* %25, %struct.t_font_list_entry** %entry.i, align 8
  br label %11

PDFFont_FindListEntry_Short.exit:                 ; preds = %21, %11
  %26 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry.i, align 8
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27)
  %28 = bitcast %struct.t_font_list_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28)
  store %struct.t_font_list_entry* %26, %struct.t_font_list_entry** %entry, align 8
  %29 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %30 = icmp eq %struct.t_font_list_entry* %29, null
  br i1 %30, label %31, label %35

; <label>:31                                      ; preds = %PDFFont_FindListEntry_Short.exit
  %32 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %33 = load i8*, i8** %6, align 8
  %34 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 42, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i32 0, i32 0), i32 1, %struct.FILE_POS* %32, i8* %33)
  br label %35

; <label>:35                                      ; preds = %31, %PDFFont_FindListEntry_Short.exit
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %37 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %38 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %37, i32 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = load i32, i32* %5, align 4
  %41 = call i32 (i8*, i8*, ...) @sprintf(i8* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* %39, i32 %40) #5
  %42 = load i32, i32* @g_TJ_pending, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %59

; <label>:44                                      ; preds = %35
  store i32 0, i32* @g_TJ_pending, align 4
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %46 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %46)
  %47 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %47)
  store %struct._IO_FILE* %45, %struct._IO_FILE** %1, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %2, align 8
  %48 = load i8*, i8** %2, align 8
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

; <label>:52                                      ; preds = %44
  br label %PDFPage_WriteStream.exit

; <label>:53                                      ; preds = %44
  %54 = load i8*, i8** %2, align 8
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %56 = call i32 @fputs(i8* %54, %struct._IO_FILE* %55) #5
  br label %PDFPage_WriteStream.exit

PDFPage_WriteStream.exit:                         ; preds = %53, %52
  %57 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57)
  %58 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %58)
  br label %59

; <label>:59                                      ; preds = %PDFPage_WriteStream.exit, %35
  %60 = load i32, i32* @g_ET_pending, align 4
  store i32 %60, i32* %cur_ET_pending, align 4
  store i32 0, i32* @g_ET_pending, align 4
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %62 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %61, i8* %62)
  %63 = load i32, i32* %cur_ET_pending, align 4
  store i32 %63, i32* @g_ET_pending, align 4
  %64 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %65 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %64, i32 0, i32 7
  store i32 1, i32* %65, align 4
  store i32 1, i32* @g_page_uses_fonts, align 4
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define void @PDFText_OpenXY(%struct._IO_FILE* %in_fp, i32 %hpos, i32 %vpos) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %str.i = alloca [512 x i8], align 16
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %5, align 8
  store i32 %hpos, i32* %6, align 4
  store i32 %vpos, i32* %7, align 4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  call void @PDFText_OpenBT(%struct._IO_FILE* %8)
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = load i32, i32* %7, align 4
  %12 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12)
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13)
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14)
  %15 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.start(i64 512, i8* %15)
  store %struct._IO_FILE* %9, %struct._IO_FILE** %2, align 8
  store i32 %10, i32* %3, align 4
  store i32 %11, i32* %4, align 4
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %17 = load i32, i32* %3, align 4
  %18 = load i32, i32* %4, align 4
  %19 = call i32 (i8*, i8*, ...) @sprintf(i8* %16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.77, i32 0, i32 0), i32 %17, i32 %18) #5
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %20, i8* %21) #5
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %23 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #5
  store %struct._IO_FILE* %22, %struct._IO_FILE** %1, align 8
  %24 = load i32, i32* @g_TJ_pending, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %0
  store i32 0, i32* @g_TJ_pending, align 4
  br label %PDFText_MoveToXYAndOpen.exit

; <label>:27                                      ; preds = %0
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  call void @PDFPage_Write(%struct._IO_FILE* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0)) #5
  br label %PDFText_MoveToXYAndOpen.exit

PDFText_MoveToXYAndOpen.exit:                     ; preds = %27, %26
  %29 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #5
  %30 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %30)
  %31 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31)
  %32 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32)
  %33 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.end(i64 512, i8* %33)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PDFText_OpenBT(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %entry.i = alloca %struct.t_qsave_marking_entry*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %6, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %8 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8)
  %9 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9)
  store %struct._IO_FILE* %7, %struct._IO_FILE** %3, align 8
  %10 = load i32, i32* @g_in_buffering_mode, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %PDFPage_FlushBuffer.exit

; <label>:12                                      ; preds = %0
  store i32 0, i32* @g_in_buffering_mode, align 4
  br label %13

; <label>:13                                      ; preds = %16, %12
  %14 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %15 = icmp ne %struct.t_qsave_marking_entry* %14, null
  br i1 %15, label %16, label %23

; <label>:16                                      ; preds = %13
  %17 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  store %struct.t_qsave_marking_entry* %17, %struct.t_qsave_marking_entry** %entry.i, align 8
  %18 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %19 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %18, i32 0, i32 0
  %20 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %19, align 8
  store %struct.t_qsave_marking_entry* %20, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %21 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %22 = bitcast %struct.t_qsave_marking_entry* %21 to i8*
  call void @free(i8* %22) #5
  br label %13

; <label>:23                                      ; preds = %13
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %25 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %25) #5
  %26 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #5
  store %struct._IO_FILE* %24, %struct._IO_FILE** %1, align 8
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i32 0), i8** %2, align 8
  %27 = load i8*, i8** %2, align 8
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %23
  br label %PDFPage_WriteStream.exit.i

; <label>:32                                      ; preds = %23
  %33 = load i8*, i8** %2, align 8
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %35 = call i32 @fputs(i8* %33, %struct._IO_FILE* %34) #5
  br label %PDFPage_WriteStream.exit.i

PDFPage_WriteStream.exit.i:                       ; preds = %32, %31
  %36 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #5
  %37 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #5
  br label %PDFPage_FlushBuffer.exit

PDFPage_FlushBuffer.exit:                         ; preds = %PDFPage_WriteStream.exit.i, %0
  %38 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38)
  %39 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39)
  store i32 1, i32* @g_page_has_text, align 4
  %40 = load i32, i32* @g_TJ_pending, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %57

; <label>:42                                      ; preds = %PDFPage_FlushBuffer.exit
  store i32 0, i32* @g_TJ_pending, align 4
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %44 = bitcast %struct._IO_FILE** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %44)
  %45 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %45)
  store %struct._IO_FILE* %43, %struct._IO_FILE** %4, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %5, align 8
  %46 = load i8*, i8** %5, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %42
  br label %PDFPage_WriteStream.exit

; <label>:51                                      ; preds = %42
  %52 = load i8*, i8** %5, align 8
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %54 = call i32 @fputs(i8* %52, %struct._IO_FILE* %53) #5
  br label %PDFPage_WriteStream.exit

PDFPage_WriteStream.exit:                         ; preds = %51, %50
  %55 = bitcast %struct._IO_FILE** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %55)
  %56 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %56)
  br label %57

; <label>:57                                      ; preds = %PDFPage_WriteStream.exit, %PDFPage_FlushBuffer.exit
  %58 = load i32, i32* @g_ET_pending, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %57
  store i32 0, i32* @g_ET_pending, align 4
  br label %63

; <label>:61                                      ; preds = %57
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  call void @PDFPage_Write(%struct._IO_FILE* %62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0))
  store i32 1, i32* @g_valid_text_matrix, align 4
  br label %63

; <label>:63                                      ; preds = %61, %60
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFText_OpenX(%struct._IO_FILE* %in_fp, i32 %hpos) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32, align 4
  %str.i = alloca [512 x i8], align 16
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %4, align 8
  store i32 %hpos, i32* %5, align 4
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  call void @PDFText_OpenBT(%struct._IO_FILE* %6)
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9)
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10)
  %11 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.start(i64 512, i8* %11)
  store %struct._IO_FILE* %7, %struct._IO_FILE** %2, align 8
  store i32 %8, i32* %3, align 4
  %12 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %13 = load i32, i32* %3, align 4
  %14 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i32 %13) #5
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %15, i8* %16) #5
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %18 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #5
  store %struct._IO_FILE* %17, %struct._IO_FILE** %1, align 8
  %19 = load i32, i32* @g_TJ_pending, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %0
  store i32 0, i32* @g_TJ_pending, align 4
  br label %PDFText_MoveToXAndOpen.exit

; <label>:22                                      ; preds = %0
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  call void @PDFPage_Write(%struct._IO_FILE* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0)) #5
  br label %PDFText_MoveToXAndOpen.exit

PDFText_MoveToXAndOpen.exit:                      ; preds = %22, %21
  %24 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #5
  %25 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25)
  %26 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26)
  %27 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.end(i64 512, i8* %27)
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFText_Open(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.FILE_POS*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %4, align 8
  %5 = load i32, i32* @g_TJ_pending, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %26

; <label>:7                                       ; preds = %0
  store i32 0, i32* @g_TJ_pending, align 4
  %8 = load i32, i32* @g_ET_pending, align 4
  %9 = icmp eq i32 %8, 1
  %10 = zext i1 %9 to i32
  %11 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %12 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12)
  %13 = bitcast %struct.FILE_POS** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13)
  store i32 %10, i32* %2, align 4
  store %struct.FILE_POS* %11, %struct.FILE_POS** %3, align 8
  %14 = load i32, i32* %2, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %Assert.exit, label %16

; <label>:16                                      ; preds = %7
  %17 = load i32, i32* %2, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %23, label %19

; <label>:19                                      ; preds = %16
  %20 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %21 = load %struct.FILE_POS*, %struct.FILE_POS** %3, align 8
  %22 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %20, %struct.FILE_POS* %21) #5
  br label %23

; <label>:23                                      ; preds = %19, %16
  br label %Assert.exit

Assert.exit:                                      ; preds = %23, %7
  %24 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24)
  %25 = bitcast %struct.FILE_POS** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25)
  store i32 0, i32* @g_ET_pending, align 4
  br label %36

; <label>:26                                      ; preds = %0
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  call void @PDFText_OpenBT(%struct._IO_FILE* %27)
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %29 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %29)
  store %struct._IO_FILE* %28, %struct._IO_FILE** %1, align 8
  %30 = load i32, i32* @g_TJ_pending, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %26
  store i32 0, i32* @g_TJ_pending, align 4
  br label %PDFText_OpenString.exit

; <label>:33                                      ; preds = %26
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  call void @PDFPage_Write(%struct._IO_FILE* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0)) #5
  br label %PDFText_OpenString.exit

PDFText_OpenString.exit:                          ; preds = %33, %32
  %35 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35)
  br label %36

; <label>:36                                      ; preds = %PDFText_OpenString.exit, %Assert.exit
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFText_Kern(%struct._IO_FILE* %in_fp, i32 %in_kern) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i32, align 4
  %str = alloca [512 x i8], align 16
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  store i32 %in_kern, i32* %2, align 4
  %3 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %4 = load i32, i32* %2, align 4
  %5 = sub nsw i32 0, %4
  %6 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i32 %5) #5
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %8 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %7, i8* %8)
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFText_Close(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.FILE_POS*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %3, align 8
  %4 = load i32, i32* @g_page_contents_obj_num, align 4
  %5 = icmp ne i32 %4, 0
  %6 = zext i1 %5 to i32
  %7 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %8 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8)
  %9 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9)
  store i32 %6, i32* %1, align 4
  store %struct.FILE_POS* %7, %struct.FILE_POS** %2, align 8
  %10 = load i32, i32* %1, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %Assert.exit, label %12

; <label>:12                                      ; preds = %0
  %13 = load i32, i32* %1, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %19, label %15

; <label>:15                                      ; preds = %12
  %16 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %17 = load %struct.FILE_POS*, %struct.FILE_POS** %2, align 8
  %18 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %16, %struct.FILE_POS* %17) #5
  br label %19

; <label>:19                                      ; preds = %15, %12
  br label %Assert.exit

Assert.exit:                                      ; preds = %19, %0
  %20 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20)
  %21 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %21)
  store i32 1, i32* @g_TJ_pending, align 4
  store i32 1, i32* @g_ET_pending, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_Scale(%struct._IO_FILE* %in_fp, float %in_h_scale_factor, float %in_v_scale_factor) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %str = alloca [512 x i8], align 16
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  store float %in_h_scale_factor, float* %2, align 4
  store float %in_v_scale_factor, float* %3, align 4
  %4 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %5 = load float, float* %2, align 4
  %6 = fpext float %5 to double
  %7 = load float, float* %3, align 4
  %8 = fpext float %7 to double
  %9 = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), double %6, double %8) #5
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %10, i8* %11)
  %12 = load float, float* %2, align 4
  %13 = load float, float* @g_page_h_scale_factor, align 4
  %14 = fmul float %13, %12
  store float %14, float* @g_page_h_scale_factor, align 4
  %15 = load float, float* %3, align 4
  %16 = load float, float* @g_page_v_scale_factor, align 4
  %17 = fmul float %16, %15
  store float %17, float* @g_page_v_scale_factor, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_Rotate(%struct._IO_FILE* %in_fp, float %in_angle_in_radians) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca float, align 4
  %cos_radians = alloca float, align 4
  %sin_radians = alloca float, align 4
  %str = alloca [512 x i8], align 16
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  store float %in_angle_in_radians, float* %2, align 4
  %3 = load float, float* %2, align 4
  %4 = fpext float %3 to double
  %5 = call double @cos(double %4) #5
  %6 = fptrunc double %5 to float
  store float %6, float* %cos_radians, align 4
  %7 = load float, float* %2, align 4
  %8 = fpext float %7 to double
  %9 = call double @sin(double %8) #5
  %10 = fptrunc double %9 to float
  store float %10, float* %sin_radians, align 4
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %12 = load float, float* %cos_radians, align 4
  %13 = fpext float %12 to double
  %14 = load float, float* %sin_radians, align 4
  %15 = fpext float %14 to double
  %16 = load float, float* %sin_radians, align 4
  %17 = fsub float -0.000000e+00, %16
  %18 = fpext float %17 to double
  %19 = load float, float* %cos_radians, align 4
  %20 = fpext float %19 to double
  %21 = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0), double %13, double %15, double %18, double %20) #5
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %22, i8* %23)
  ret void
}

; Function Attrs: nounwind
declare double @cos(double) #2

; Function Attrs: nounwind
declare double @sin(double) #2

; Function Attrs: nounwind uwtable
define void @PDFPage_Translate(%struct._IO_FILE* %in_fp, float %in_delta_h, float %in_delta_v) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %str = alloca [512 x i8], align 16
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  store float %in_delta_h, float* %2, align 4
  store float %in_delta_v, float* %3, align 4
  %4 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %5 = load float, float* %2, align 4
  %6 = fpext float %5 to double
  %7 = load float, float* %3, align 4
  %8 = fpext float %7 to double
  %9 = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i32 0, i32 0), double %6, double %8) #5
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %10, i8* %11)
  %12 = load float, float* %2, align 4
  %13 = load i32, i32* @g_page_h_origin, align 4
  %14 = sitofp i32 %13 to float
  %15 = fadd float %14, %12
  %16 = fptosi float %15 to i32
  store i32 %16, i32* @g_page_h_origin, align 4
  %17 = load float, float* %3, align 4
  %18 = load i32, i32* @g_page_v_origin, align 4
  %19 = sitofp i32 %18 to float
  %20 = fadd float %19, %17
  %21 = fptosi float %20 to i32
  store i32 %21, i32* @g_page_v_origin, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_WriteGraphic(%struct._IO_FILE* %in_fp, i8* %in_str) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %entry.i = alloca %struct.t_qsave_marking_entry*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.FILE_POS*, align 8
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca i8*, align 8
  %str = alloca [512 x i8], align 16
  %charPtr = alloca i8*, align 8
  %strPtr = alloca i8*, align 8
  %hasResult = alloca i32, align 4
  %value = alloca float, align 4
  %i = alloca i32, align 4
  %value1 = alloca float, align 4
  %hasResult2 = alloca i32, align 4
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %8, align 8
  store i8* %in_str, i8** %9, align 8
  %10 = load i8*, i8** %9, align 8
  store i8* %10, i8** %charPtr, align 8
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  store i8* %11, i8** %strPtr, align 8
  %12 = load i8*, i8** %charPtr, align 8
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %0
  br label %359

; <label>:17                                      ; preds = %0
  %18 = load i32, i32* @g_expr_depth, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %35

; <label>:20                                      ; preds = %17
  %21 = load i8*, i8** %charPtr, align 8
  %22 = call i8* @PDFPage_CollectExpr(i8* %21, i32* %hasResult, float* %value)
  store i8* %22, i8** %charPtr, align 8
  %23 = load i32, i32* %hasResult, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %34

; <label>:25                                      ; preds = %20
  %26 = load i8*, i8** %strPtr, align 8
  %27 = load float, float* %value, align 4
  %28 = fpext float %27 to double
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), double %28) #5
  %30 = load i8*, i8** %strPtr, align 8
  %31 = call i64 @strlen(i8* %30) #6
  %32 = load i8*, i8** %strPtr, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  store i8* %33, i8** %strPtr, align 8
  br label %34

; <label>:34                                      ; preds = %25, %20
  br label %35

; <label>:35                                      ; preds = %34, %17
  %36 = load i32, i32* @g_link_depth, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %41

; <label>:38                                      ; preds = %35
  %39 = load i8*, i8** %charPtr, align 8
  %40 = call i8* @PDFPage_CollectLink(i8* %39)
  store i8* %40, i8** %charPtr, align 8
  br label %41

; <label>:41                                      ; preds = %38, %35
  br label %42

; <label>:42                                      ; preds = %321, %41
  %43 = load i8*, i8** %charPtr, align 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %322

; <label>:47                                      ; preds = %42
  %48 = load i8*, i8** %strPtr, align 8
  %49 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %50 = getelementptr inbounds i8, i8* %49, i64 512
  %51 = icmp ult i8* %48, %50
  %52 = zext i1 %51 to i32
  %53 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %54 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %54)
  %55 = bitcast %struct.FILE_POS** %7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55)
  store i32 %52, i32* %6, align 4
  store %struct.FILE_POS* %53, %struct.FILE_POS** %7, align 8
  %56 = load i32, i32* %6, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %Assert.exit, label %58

; <label>:58                                      ; preds = %47
  %59 = load i32, i32* %6, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %65, label %61

; <label>:61                                      ; preds = %58
  %62 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %63 = load %struct.FILE_POS*, %struct.FILE_POS** %7, align 8
  %64 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %62, %struct.FILE_POS* %63) #5
  br label %65

; <label>:65                                      ; preds = %61, %58
  br label %Assert.exit

Assert.exit:                                      ; preds = %65, %47
  %66 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66)
  %67 = bitcast %struct.FILE_POS** %7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67)
  %68 = load i8*, i8** %charPtr, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 0
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp eq i32 %71, 95
  br i1 %72, label %73, label %315

; <label>:73                                      ; preds = %Assert.exit
  %74 = load i8*, i8** %charPtr, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = icmp eq i32 %77, 95
  br i1 %78, label %79, label %315

; <label>:79                                      ; preds = %73
  %80 = load i8*, i8** %charPtr, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 2
  store i8* %81, i8** %charPtr, align 8
  %82 = load i8*, i8** %charPtr, align 8
  %83 = call i32 @PDFKeyword_Find(i32 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @g_graphic_keywords, i32 0, i32 0), i8* %82)
  store i32 %83, i32* %i, align 4
  %84 = load i32, i32* %i, align 4
  %85 = icmp sge i32 %84, 0
  br i1 %85, label %86, label %104

; <label>:86                                      ; preds = %79
  %87 = load i32, i32* %i, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [4 x i8*], [4 x i8*]* @g_graphic_keywords, i32 0, i64 %88
  %90 = load i8*, i8** %89, align 8
  %91 = call i64 @strlen(i8* %90) #6
  %92 = load i8*, i8** %charPtr, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %91
  store i8* %93, i8** %charPtr, align 8
  %94 = load i8*, i8** %strPtr, align 8
  %95 = load i32, i32* %i, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = call i32 (i8*, i8*, ...) @sprintf(i8* %94, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i32 %98) #5
  %100 = load i8*, i8** %strPtr, align 8
  %101 = call i64 @strlen(i8* %100) #6
  %102 = load i8*, i8** %strPtr, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %101
  store i8* %103, i8** %strPtr, align 8
  br label %314

; <label>:104                                     ; preds = %79
  %105 = load i8*, i8** %charPtr, align 8
  %106 = call i32 @PDFKeyword_Find(i32 5, i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @g_link_keywords, i32 0, i32 0), i8* %105)
  store i32 %106, i32* %i, align 4
  %107 = load i32, i32* %i, align 4
  %108 = icmp sge i32 %107, 0
  br i1 %108, label %109, label %138

; <label>:109                                     ; preds = %104
  %110 = load i32, i32* %i, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [5 x i8*], [5 x i8*]* @g_link_keywords, i32 0, i64 %111
  %113 = load i8*, i8** %112, align 8
  %114 = call i64 @strlen(i8* %113) #6
  %115 = load i8*, i8** %charPtr, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %114
  store i8* %116, i8** %charPtr, align 8
  br label %117

; <label>:117                                     ; preds = %129, %109
  %118 = load i8*, i8** %charPtr, align 8
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i16** @__ctype_b_loc() #7
  %123 = load i16*, i16** %122, align 8
  %124 = getelementptr inbounds i16, i16* %123, i64 %121
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = and i32 %126, 8192
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %132

; <label>:129                                     ; preds = %117
  %130 = load i8*, i8** %charPtr, align 8
  %131 = getelementptr inbounds i8, i8* %130, i32 1
  store i8* %131, i8** %charPtr, align 8
  br label %117

; <label>:132                                     ; preds = %117
  store i32 0, i32* @g_link_index, align 4
  %133 = load i32, i32* @g_link_depth, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* @g_link_depth, align 4
  %135 = load i32, i32* %i, align 4
  store i32 %135, i32* @g_link_keyword, align 4
  %136 = load i8*, i8** %charPtr, align 8
  %137 = call i8* @PDFPage_CollectLink(i8* %136)
  store i8* %137, i8** %charPtr, align 8
  br label %313

; <label>:138                                     ; preds = %104
  %139 = load i8*, i8** %charPtr, align 8
  %140 = call i32 @PDFKeyword_Find(i32 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @g_doc_info_keywords, i32 0, i32 0), i8* %139)
  store i32 %140, i32* %i, align 4
  %141 = load i32, i32* %i, align 4
  %142 = icmp sge i32 %141, 0
  br i1 %142, label %143, label %242

; <label>:143                                     ; preds = %138
  %144 = load i32, i32* %i, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [4 x i8*], [4 x i8*]* @g_doc_info_keywords, i32 0, i64 %145
  %147 = load i8*, i8** %146, align 8
  %148 = call i64 @strlen(i8* %147) #6
  %149 = load i8*, i8** %charPtr, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 %148
  store i8* %150, i8** %charPtr, align 8
  %151 = load i8*, i8** %charPtr, align 8
  %152 = load i32, i32* %i, align 4
  %153 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %153)
  %154 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %154)
  store i8* %151, i8** %4, align 8
  store i32 %152, i32* %5, align 4
  %155 = load i32, i32* %5, align 4
  switch i32 %155, label %PDFPage_ProcessDocInfoKeyword.exit [
    i32 0, label %156
    i32 1, label %176
    i32 2, label %196
    i32 3, label %216
  ]

; <label>:156                                     ; preds = %143
  %157 = load i8*, i8** @g_doc_author, align 8
  %158 = icmp ne i8* %157, null
  br i1 %158, label %159, label %161

; <label>:159                                     ; preds = %156
  %160 = load i8*, i8** @g_doc_author, align 8
  call void @free(i8* %160) #5
  br label %161

; <label>:161                                     ; preds = %159, %156
  %162 = load i8*, i8** %4, align 8
  %163 = call i64 @strlen(i8* %162) #6
  %164 = add i64 %163, 1
  %165 = call noalias i8* @malloc(i64 %164) #5
  store i8* %165, i8** @g_doc_author, align 8
  %166 = load i8*, i8** @g_doc_author, align 8
  %167 = icmp eq i8* %166, null
  br i1 %167, label %168, label %171

; <label>:168                                     ; preds = %161
  %169 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %170 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 26, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.122, i32 0, i32 0), i32 2, %struct.FILE_POS* %169) #5
  br label %175

; <label>:171                                     ; preds = %161
  %172 = load i8*, i8** @g_doc_author, align 8
  %173 = load i8*, i8** %4, align 8
  %174 = call i8* @strcpy(i8* %172, i8* %173) #5
  br label %175

; <label>:175                                     ; preds = %171, %168
  br label %PDFPage_ProcessDocInfoKeyword.exit

; <label>:176                                     ; preds = %143
  %177 = load i8*, i8** @g_doc_title, align 8
  %178 = icmp ne i8* %177, null
  br i1 %178, label %179, label %181

; <label>:179                                     ; preds = %176
  %180 = load i8*, i8** @g_doc_title, align 8
  call void @free(i8* %180) #5
  br label %181

; <label>:181                                     ; preds = %179, %176
  %182 = load i8*, i8** %4, align 8
  %183 = call i64 @strlen(i8* %182) #6
  %184 = add i64 %183, 1
  %185 = call noalias i8* @malloc(i64 %184) #5
  store i8* %185, i8** @g_doc_title, align 8
  %186 = load i8*, i8** @g_doc_title, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %188, label %191

; <label>:188                                     ; preds = %181
  %189 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %190 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.123, i32 0, i32 0), i32 2, %struct.FILE_POS* %189) #5
  br label %195

; <label>:191                                     ; preds = %181
  %192 = load i8*, i8** @g_doc_title, align 8
  %193 = load i8*, i8** %4, align 8
  %194 = call i8* @strcpy(i8* %192, i8* %193) #5
  br label %195

; <label>:195                                     ; preds = %191, %188
  br label %PDFPage_ProcessDocInfoKeyword.exit

; <label>:196                                     ; preds = %143
  %197 = load i8*, i8** @g_doc_subject, align 8
  %198 = icmp ne i8* %197, null
  br i1 %198, label %199, label %201

; <label>:199                                     ; preds = %196
  %200 = load i8*, i8** @g_doc_subject, align 8
  call void @free(i8* %200) #5
  br label %201

; <label>:201                                     ; preds = %199, %196
  %202 = load i8*, i8** %4, align 8
  %203 = call i64 @strlen(i8* %202) #6
  %204 = add i64 %203, 1
  %205 = call noalias i8* @malloc(i64 %204) #5
  store i8* %205, i8** @g_doc_subject, align 8
  %206 = load i8*, i8** @g_doc_subject, align 8
  %207 = icmp eq i8* %206, null
  br i1 %207, label %208, label %211

; <label>:208                                     ; preds = %201
  %209 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %210 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 47, i32 28, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.124, i32 0, i32 0), i32 2, %struct.FILE_POS* %209) #5
  br label %215

; <label>:211                                     ; preds = %201
  %212 = load i8*, i8** @g_doc_subject, align 8
  %213 = load i8*, i8** %4, align 8
  %214 = call i8* @strcpy(i8* %212, i8* %213) #5
  br label %215

; <label>:215                                     ; preds = %211, %208
  br label %PDFPage_ProcessDocInfoKeyword.exit

; <label>:216                                     ; preds = %143
  %217 = load i8*, i8** @g_doc_keywords, align 8
  %218 = icmp ne i8* %217, null
  br i1 %218, label %219, label %221

; <label>:219                                     ; preds = %216
  %220 = load i8*, i8** @g_doc_keywords, align 8
  call void @free(i8* %220) #5
  br label %221

; <label>:221                                     ; preds = %219, %216
  %222 = load i8*, i8** %4, align 8
  %223 = call i64 @strlen(i8* %222) #6
  %224 = add i64 %223, 1
  %225 = call noalias i8* @malloc(i64 %224) #5
  store i8* %225, i8** @g_doc_keywords, align 8
  %226 = load i8*, i8** @g_doc_keywords, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %228, label %231

; <label>:228                                     ; preds = %221
  %229 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %230 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 29, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.125, i32 0, i32 0), i32 2, %struct.FILE_POS* %229) #5
  br label %235

; <label>:231                                     ; preds = %221
  %232 = load i8*, i8** @g_doc_keywords, align 8
  %233 = load i8*, i8** %4, align 8
  %234 = call i8* @strcpy(i8* %232, i8* %233) #5
  br label %235

; <label>:235                                     ; preds = %231, %228
  br label %PDFPage_ProcessDocInfoKeyword.exit

PDFPage_ProcessDocInfoKeyword.exit:               ; preds = %235, %215, %195, %175, %143
  %236 = load i8*, i8** %4, align 8
  %237 = load i8*, i8** %4, align 8
  %238 = call i64 @strlen(i8* %237) #6
  %239 = getelementptr inbounds i8, i8* %236, i64 %238
  %240 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %240)
  %241 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %241)
  store i8* %239, i8** %charPtr, align 8
  br label %312

; <label>:242                                     ; preds = %138
  %243 = load i8*, i8** %charPtr, align 8
  %244 = call i32 @PDFKeyword_Find(i32 7, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @g_arithmetic_keywords, i32 0, i32 0), i8* %243)
  store i32 %244, i32* %i, align 4
  %245 = load i32, i32* %i, align 4
  %246 = icmp sge i32 %245, 0
  br i1 %246, label %247, label %304

; <label>:247                                     ; preds = %242
  %248 = load i32, i32* %i, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds [7 x i8*], [7 x i8*]* @g_arithmetic_keywords, i32 0, i64 %249
  %251 = load i8*, i8** %250, align 8
  %252 = call i8* @strcpy(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @g_expr, i32 0, i32 0), i8* %251) #5
  %253 = load i32, i32* %i, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds [7 x i8*], [7 x i8*]* @g_arithmetic_keywords, i32 0, i64 %254
  %256 = load i8*, i8** %255, align 8
  %257 = call i64 @strlen(i8* %256) #6
  %258 = load i8*, i8** %charPtr, align 8
  %259 = getelementptr inbounds i8, i8* %258, i64 %257
  store i8* %259, i8** %charPtr, align 8
  br label %260

; <label>:260                                     ; preds = %272, %247
  %261 = load i8*, i8** %charPtr, align 8
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = sext i32 %263 to i64
  %265 = call i16** @__ctype_b_loc() #7
  %266 = load i16*, i16** %265, align 8
  %267 = getelementptr inbounds i16, i16* %266, i64 %264
  %268 = load i16, i16* %267, align 2
  %269 = zext i16 %268 to i32
  %270 = and i32 %269, 8192
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %272, label %275

; <label>:272                                     ; preds = %260
  %273 = load i8*, i8** %charPtr, align 8
  %274 = getelementptr inbounds i8, i8* %273, i32 1
  store i8* %274, i8** %charPtr, align 8
  br label %260

; <label>:275                                     ; preds = %260
  %276 = load i8*, i8** %charPtr, align 8
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = icmp ne i32 %278, 40
  br i1 %279, label %280, label %283

; <label>:280                                     ; preds = %275
  %281 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %282 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 36, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i32 0, i32 0), i32 1, %struct.FILE_POS* %281)
  br label %283

; <label>:283                                     ; preds = %280, %275
  %284 = call i8* @strcat(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @g_expr, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0)) #5
  %285 = call i64 @strlen(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @g_expr, i32 0, i32 0)) #6
  %286 = trunc i64 %285 to i32
  store i32 %286, i32* @g_expr_index, align 4
  %287 = load i32, i32* @g_expr_depth, align 4
  %288 = add nsw i32 %287, 1
  store i32 %288, i32* @g_expr_depth, align 4
  %289 = load i8*, i8** %charPtr, align 8
  %290 = getelementptr inbounds i8, i8* %289, i32 1
  store i8* %290, i8** %charPtr, align 8
  %291 = call i8* @PDFPage_CollectExpr(i8* %290, i32* %hasResult2, float* %value1)
  store i8* %291, i8** %charPtr, align 8
  %292 = load i32, i32* %hasResult2, align 4
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %294, label %303

; <label>:294                                     ; preds = %283
  %295 = load i8*, i8** %strPtr, align 8
  %296 = load float, float* %value1, align 4
  %297 = fpext float %296 to double
  %298 = call i32 (i8*, i8*, ...) @sprintf(i8* %295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), double %297) #5
  %299 = load i8*, i8** %strPtr, align 8
  %300 = call i64 @strlen(i8* %299) #6
  %301 = load i8*, i8** %strPtr, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 %300
  store i8* %302, i8** %strPtr, align 8
  br label %303

; <label>:303                                     ; preds = %294, %283
  br label %311

; <label>:304                                     ; preds = %242
  %305 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %306 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 37, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.20, i32 0, i32 0), i32 2, %struct.FILE_POS* %305)
  %307 = load i8*, i8** %strPtr, align 8
  %308 = getelementptr inbounds i8, i8* %307, i32 1
  store i8* %308, i8** %strPtr, align 8
  store i8 95, i8* %307, align 1
  %309 = load i8*, i8** %strPtr, align 8
  %310 = getelementptr inbounds i8, i8* %309, i32 1
  store i8* %310, i8** %strPtr, align 8
  store i8 95, i8* %309, align 1
  br label %311

; <label>:311                                     ; preds = %304, %303
  br label %312

; <label>:312                                     ; preds = %311, %PDFPage_ProcessDocInfoKeyword.exit
  br label %313

; <label>:313                                     ; preds = %312, %132
  br label %314

; <label>:314                                     ; preds = %313, %86
  br label %321

; <label>:315                                     ; preds = %73, %Assert.exit
  %316 = load i8*, i8** %charPtr, align 8
  %317 = getelementptr inbounds i8, i8* %316, i32 1
  store i8* %317, i8** %charPtr, align 8
  %318 = load i8, i8* %316, align 1
  %319 = load i8*, i8** %strPtr, align 8
  %320 = getelementptr inbounds i8, i8* %319, i32 1
  store i8* %320, i8** %strPtr, align 8
  store i8 %318, i8* %319, align 1
  br label %321

; <label>:321                                     ; preds = %315, %314
  br label %42

; <label>:322                                     ; preds = %42
  %323 = load i8*, i8** %strPtr, align 8
  store i8 0, i8* %323, align 1
  %324 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %325 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %325)
  %326 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %326)
  store %struct._IO_FILE* %324, %struct._IO_FILE** %3, align 8
  %327 = load i32, i32* @g_in_buffering_mode, align 4
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %329, label %PDFPage_FlushBuffer.exit

; <label>:329                                     ; preds = %322
  store i32 0, i32* @g_in_buffering_mode, align 4
  br label %330

; <label>:330                                     ; preds = %333, %329
  %331 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %332 = icmp ne %struct.t_qsave_marking_entry* %331, null
  br i1 %332, label %333, label %340

; <label>:333                                     ; preds = %330
  %334 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  store %struct.t_qsave_marking_entry* %334, %struct.t_qsave_marking_entry** %entry.i, align 8
  %335 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %336 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %335, i32 0, i32 0
  %337 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %336, align 8
  store %struct.t_qsave_marking_entry* %337, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %338 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %339 = bitcast %struct.t_qsave_marking_entry* %338 to i8*
  call void @free(i8* %339) #5
  br label %330

; <label>:340                                     ; preds = %330
  %341 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %342 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %342) #5
  %343 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %343) #5
  store %struct._IO_FILE* %341, %struct._IO_FILE** %1, align 8
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i32 0), i8** %2, align 8
  %344 = load i8*, i8** %2, align 8
  %345 = load i8, i8* %344, align 1
  %346 = sext i8 %345 to i32
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

; <label>:348                                     ; preds = %340
  br label %PDFPage_WriteStream.exit.i

; <label>:349                                     ; preds = %340
  %350 = load i8*, i8** %2, align 8
  %351 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %352 = call i32 @fputs(i8* %350, %struct._IO_FILE* %351) #5
  br label %PDFPage_WriteStream.exit.i

PDFPage_WriteStream.exit.i:                       ; preds = %349, %348
  %353 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %353) #5
  %354 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %354) #5
  br label %PDFPage_FlushBuffer.exit

PDFPage_FlushBuffer.exit:                         ; preds = %PDFPage_WriteStream.exit.i, %322
  %355 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %355)
  %356 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %356)
  %357 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %358 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %357, i8* %358)
  br label %359

; <label>:359                                     ; preds = %PDFPage_FlushBuffer.exit, %16
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @PDFPage_CollectExpr(i8* %charPtr, i32* %outHasResult, float* %outResult) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.FILE_POS*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca float*, align 8
  %ch = alloca i8, align 1
  store i8* %charPtr, i8** %3, align 8
  store i32* %outHasResult, i32** %4, align 8
  store float* %outResult, float** %5, align 8
  %6 = load i32*, i32** %4, align 8
  store i32 0, i32* %6, align 4
  br label %7

; <label>:7                                       ; preds = %69, %0
  %8 = load i8*, i8** %3, align 8
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %70

; <label>:12                                      ; preds = %7
  %13 = load i32, i32* @g_expr_index, align 4
  %14 = sext i32 %13 to i64
  %15 = icmp uge i64 %14, 512
  br i1 %15, label %16, label %19

; <label>:16                                      ; preds = %12
  %17 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %18 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 34, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.80, i32 0, i32 0), i32 1, %struct.FILE_POS* %17)
  br label %19

; <label>:19                                      ; preds = %16, %12
  %20 = load i8*, i8** %3, align 8
  %21 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %21, i8** %3, align 8
  %22 = load i8, i8* %20, align 1
  store i8 %22, i8* %ch, align 1
  %23 = load i32, i32* @g_expr_index, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* @g_expr_index, align 4
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds [512 x i8], [512 x i8]* @g_expr, i32 0, i64 %25
  store i8 %22, i8* %26, align 1
  %27 = load i8, i8* %ch, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, 40
  br i1 %29, label %30, label %33

; <label>:30                                      ; preds = %19
  %31 = load i32, i32* @g_expr_depth, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* @g_expr_depth, align 4
  br label %69

; <label>:33                                      ; preds = %19
  %34 = load i8, i8* %ch, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 41
  br i1 %36, label %37, label %68

; <label>:37                                      ; preds = %33
  %38 = load i32, i32* @g_expr_depth, align 4
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i32
  %41 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %42 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %42)
  %43 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %43)
  store i32 %40, i32* %1, align 4
  store %struct.FILE_POS* %41, %struct.FILE_POS** %2, align 8
  %44 = load i32, i32* %1, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %Assert.exit, label %46

; <label>:46                                      ; preds = %37
  %47 = load i32, i32* %1, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %53, label %49

; <label>:49                                      ; preds = %46
  %50 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %51 = load %struct.FILE_POS*, %struct.FILE_POS** %2, align 8
  %52 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %50, %struct.FILE_POS* %51) #5
  br label %53

; <label>:53                                      ; preds = %49, %46
  br label %Assert.exit

Assert.exit:                                      ; preds = %53, %37
  %54 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %54)
  %55 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %55)
  %56 = load i32, i32* @g_expr_depth, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* @g_expr_depth, align 4
  %58 = load i32, i32* @g_expr_depth, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %67

; <label>:60                                      ; preds = %Assert.exit
  %61 = load i32, i32* @g_expr_index, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [512 x i8], [512 x i8]* @g_expr, i32 0, i64 %62
  store i8 0, i8* %63, align 1
  %64 = load float*, float** %5, align 8
  %65 = call i8* @PDFPage_EvalExpr(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @g_expr, i32 0, i32 0), float* %64)
  %66 = load i32*, i32** %4, align 8
  store i32 1, i32* %66, align 4
  br label %70

; <label>:67                                      ; preds = %Assert.exit
  br label %68

; <label>:68                                      ; preds = %67, %33
  br label %69

; <label>:69                                      ; preds = %68, %30
  br label %7

; <label>:70                                      ; preds = %60, %7
  %71 = load i8*, i8** %3, align 8
  ret i8* %71
}

; Function Attrs: nounwind uwtable
define internal i8* @PDFPage_CollectLink(i8* %charPtr) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.FILE_POS*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %entry.i.i = alloca %struct.t_target_annot_entry*, align 8
  %charPtr.i = alloca i8*, align 8
  %keyword.i = alloca i32, align 4
  %link_len.i = alloca i32, align 4
  %link_name.i = alloca i8*, align 8
  %parm.i = alloca i8*, align 8
  %ll_x.i = alloca i32, align 4
  %ll_y.i = alloca i32, align 4
  %ur_x.i = alloca i32, align 4
  %ur_y.i = alloca i32, align 4
  %j.i = alloca i32, align 4
  %source.i = alloca %struct.t_source_annot_entry*, align 8
  %j1.i = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.FILE_POS*, align 8
  %12 = alloca i8*, align 8
  %ch = alloca i8, align 1
  store i8* %charPtr, i8** %12, align 8
  br label %13

; <label>:13                                      ; preds = %420, %0
  %14 = load i8*, i8** %12, align 8
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %421

; <label>:18                                      ; preds = %13
  %19 = load i32, i32* @g_link_index, align 4
  %20 = sext i32 %19 to i64
  %21 = icmp uge i64 %20, 512
  br i1 %21, label %22, label %25

; <label>:22                                      ; preds = %18
  %23 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %24 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 35, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.94, i32 0, i32 0), i32 1, %struct.FILE_POS* %23)
  br label %25

; <label>:25                                      ; preds = %22, %18
  %26 = load i8*, i8** %12, align 8
  %27 = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %27, i8** %12, align 8
  %28 = load i8, i8* %26, align 1
  store i8 %28, i8* %ch, align 1
  %29 = load i32, i32* @g_link_index, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* @g_link_index, align 4
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds [512 x i8], [512 x i8]* @g_link, i32 0, i64 %31
  store i8 %28, i8* %32, align 1
  %33 = load i8, i8* %ch, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 60
  br i1 %35, label %36, label %51

; <label>:36                                      ; preds = %25
  %37 = load i8*, i8** %12, align 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 60
  br i1 %40, label %41, label %51

; <label>:41                                      ; preds = %36
  %42 = load i8*, i8** %12, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %12, align 8
  %44 = load i8, i8* %42, align 1
  %45 = load i32, i32* @g_link_index, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* @g_link_index, align 4
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds [512 x i8], [512 x i8]* @g_link, i32 0, i64 %47
  store i8 %44, i8* %48, align 1
  %49 = load i32, i32* @g_link_depth, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* @g_link_depth, align 4
  br label %420

; <label>:51                                      ; preds = %36, %25
  %52 = load i8, i8* %ch, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp eq i32 %53, 62
  br i1 %54, label %55, label %419

; <label>:55                                      ; preds = %51
  %56 = load i8*, i8** %12, align 8
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = icmp eq i32 %58, 62
  br i1 %59, label %60, label %419

; <label>:60                                      ; preds = %55
  %61 = load i32, i32* @g_link_depth, align 4
  %62 = icmp ne i32 %61, 0
  %63 = zext i1 %62 to i32
  %64 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %65 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %65)
  %66 = bitcast %struct.FILE_POS** %11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %66)
  store i32 %63, i32* %10, align 4
  store %struct.FILE_POS* %64, %struct.FILE_POS** %11, align 8
  %67 = load i32, i32* %10, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %Assert.exit, label %69

; <label>:69                                      ; preds = %60
  %70 = load i32, i32* %10, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %76, label %72

; <label>:72                                      ; preds = %69
  %73 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %74 = load %struct.FILE_POS*, %struct.FILE_POS** %11, align 8
  %75 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %73, %struct.FILE_POS* %74) #5
  br label %76

; <label>:76                                      ; preds = %72, %69
  br label %Assert.exit

Assert.exit:                                      ; preds = %76, %60
  %77 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77)
  %78 = bitcast %struct.FILE_POS** %11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %78)
  %79 = load i32, i32* @g_link_depth, align 4
  %80 = add nsw i32 %79, -1
  store i32 %80, i32* @g_link_depth, align 4
  %81 = load i32, i32* @g_link_depth, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %410

; <label>:83                                      ; preds = %Assert.exit
  %84 = load i32, i32* @g_link_index, align 4
  %85 = add nsw i32 %84, -1
  store i32 %85, i32* @g_link_index, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [512 x i8], [512 x i8]* @g_link, i32 0, i64 %86
  store i8 0, i8* %87, align 1
  %88 = bitcast i8** %charPtr.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %88)
  %89 = bitcast i32* %keyword.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %89)
  %90 = bitcast i32* %link_len.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %90)
  %91 = bitcast i8** %link_name.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %91)
  %92 = bitcast i8** %parm.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %92)
  %93 = bitcast i32* %ll_x.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %93)
  %94 = bitcast i32* %ll_y.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %94)
  %95 = bitcast i32* %ur_x.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %95)
  %96 = bitcast i32* %ur_y.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %96)
  %97 = bitcast i32* %j.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %97)
  %98 = bitcast %struct.t_source_annot_entry** %source.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %98)
  %99 = bitcast i32* %j1.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %99)
  store i8* getelementptr inbounds ([512 x i8], [512 x i8]* @g_link, i32 0, i32 0), i8** %charPtr.i, align 8
  %100 = load i32, i32* @g_link_keyword, align 4
  store i32 %100, i32* %keyword.i, align 4
  store i32 0, i32* %link_len.i, align 4
  %101 = load i8*, i8** %charPtr.i, align 8
  store i8* %101, i8** %link_name.i, align 8
  store i8* null, i8** %parm.i, align 8
  br label %102

; <label>:102                                     ; preds = %136, %83
  %103 = load i8*, i8** %charPtr.i, align 8
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %134

; <label>:107                                     ; preds = %102
  %108 = load i8*, i8** %charPtr.i, align 8
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = sext i32 %110 to i64
  %112 = call i16** @__ctype_b_loc() #7
  %113 = load i16*, i16** %112, align 8
  %114 = getelementptr inbounds i16, i16* %113, i64 %111
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = and i32 %116, 8192
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %131

; <label>:119                                     ; preds = %107
  %120 = load i8*, i8** %charPtr.i, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 1
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 95
  br i1 %124, label %125, label %131

; <label>:125                                     ; preds = %119
  %126 = load i8*, i8** %charPtr.i, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 95
  br label %131

; <label>:131                                     ; preds = %125, %119, %107
  %132 = phi i1 [ false, %119 ], [ false, %107 ], [ %130, %125 ]
  %133 = xor i1 %132, true
  br label %134

; <label>:134                                     ; preds = %131, %102
  %135 = phi i1 [ false, %102 ], [ %133, %131 ]
  br i1 %135, label %136, label %141

; <label>:136                                     ; preds = %134
  %137 = load i32, i32* %link_len.i, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %link_len.i, align 4
  %139 = load i8*, i8** %charPtr.i, align 8
  %140 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %140, i8** %charPtr.i, align 8
  br label %102

; <label>:141                                     ; preds = %134
  %142 = load i8*, i8** %charPtr.i, align 8
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %146, label %149

; <label>:146                                     ; preds = %141
  %147 = load i8*, i8** %charPtr.i, align 8
  %148 = getelementptr inbounds i8, i8* %147, i32 1
  store i8* %148, i8** %charPtr.i, align 8
  store i8* %148, i8** %parm.i, align 8
  br label %149

; <label>:149                                     ; preds = %146, %141
  br label %150

; <label>:150                                     ; preds = %155, %149
  %151 = load i8*, i8** %charPtr.i, align 8
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %158

; <label>:155                                     ; preds = %150
  %156 = load i8*, i8** %charPtr.i, align 8
  %157 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %157, i8** %charPtr.i, align 8
  br label %150

; <label>:158                                     ; preds = %150
  %159 = load i32, i32* %link_len.i, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %164

; <label>:161                                     ; preds = %158
  %162 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %163 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 22, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.95, i32 0, i32 0), i32 2, %struct.FILE_POS* %162) #5
  br label %PDFPage_ProcessLinkKeyword.exit

; <label>:164                                     ; preds = %158
  %165 = load i32, i32* @g_page_h_origin, align 4
  %166 = sitofp i32 %165 to float
  %167 = load float, float* @g_page_h_scale_factor, align 4
  %168 = fmul float %166, %167
  %169 = fptosi float %168 to i32
  store i32 %169, i32* %ll_x.i, align 4
  %170 = load i32, i32* @g_page_v_origin, align 4
  %171 = sitofp i32 %170 to float
  %172 = load float, float* @g_page_v_scale_factor, align 4
  %173 = fmul float %171, %172
  %174 = fptosi float %173 to i32
  store i32 %174, i32* %ll_y.i, align 4
  %175 = load i32, i32* @g_page_h_origin, align 4
  %176 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 0), align 4
  %177 = add nsw i32 %175, %176
  %178 = sitofp i32 %177 to float
  %179 = load float, float* @g_page_h_scale_factor, align 4
  %180 = fmul float %178, %179
  %181 = fptosi float %180 to i32
  store i32 %181, i32* %ur_x.i, align 4
  %182 = load i32, i32* @g_page_v_origin, align 4
  %183 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 1), align 4
  %184 = add nsw i32 %182, %183
  %185 = sitofp i32 %184 to float
  %186 = load float, float* @g_page_v_scale_factor, align 4
  %187 = fmul float %185, %186
  %188 = fptosi float %187 to i32
  store i32 %188, i32* %ur_y.i, align 4
  %189 = load i32, i32* %keyword.i, align 4
  switch i32 %189, label %395 [
    i32 0, label %190
    i32 1, label %234
    i32 2, label %234
    i32 3, label %290
    i32 4, label %290
    i32 5, label %394
  ]

; <label>:190                                     ; preds = %164
  %191 = load i8*, i8** %parm.i, align 8
  %192 = icmp ne i8* %191, null
  br i1 %192, label %193, label %223

; <label>:193                                     ; preds = %190
  %194 = load i8*, i8** %charPtr.i, align 8
  %195 = call i32 @PDFKeyword_Find(i32 8, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @g_dest_link_options, i32 0, i32 0), i8* %194) #5
  store i32 %195, i32* %j.i, align 4
  %196 = load i32, i32* %j.i, align 4
  %197 = icmp sge i32 %196, 0
  br i1 %197, label %198, label %206

; <label>:198                                     ; preds = %193
  %199 = load i32, i32* %j.i, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [8 x i8*], [8 x i8*]* @g_dest_link_options, i32 0, i64 %200
  %202 = load i8*, i8** %201, align 8
  %203 = call i64 @strlen(i8* %202) #6
  %204 = load i8*, i8** %charPtr.i, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 %203
  store i8* %205, i8** %charPtr.i, align 8
  br label %222

; <label>:206                                     ; preds = %193
  store i32 0, i32* %j.i, align 4
  br label %207

; <label>:207                                     ; preds = %212, %206
  %208 = load i8*, i8** %charPtr.i, align 8
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %212, label %215

; <label>:212                                     ; preds = %207
  %213 = load i8*, i8** %charPtr.i, align 8
  %214 = getelementptr inbounds i8, i8* %213, i32 1
  store i8* %214, i8** %charPtr.i, align 8
  br label %207

; <label>:215                                     ; preds = %207
  %216 = load i8*, i8** %charPtr.i, align 8
  %217 = load i8*, i8** %link_name.i, align 8
  %218 = ptrtoint i8* %216 to i64
  %219 = ptrtoint i8* %217 to i64
  %220 = sub i64 %218, %219
  %221 = trunc i64 %220 to i32
  store i32 %221, i32* %link_len.i, align 4
  br label %222

; <label>:222                                     ; preds = %215, %198
  br label %224

; <label>:223                                     ; preds = %190
  store i32 0, i32* %j.i, align 4
  br label %224

; <label>:224                                     ; preds = %223, %222
  %225 = load i32, i32* %keyword.i, align 4
  %226 = load i8*, i8** %link_name.i, align 8
  %227 = load i32, i32* %link_len.i, align 4
  %228 = load i32, i32* %ll_x.i, align 4
  %229 = load i32, i32* %ll_y.i, align 4
  %230 = load i32, i32* %ur_x.i, align 4
  %231 = load i32, i32* %ur_y.i, align 4
  %232 = load i32, i32* %j.i, align 4
  %233 = call %struct.t_source_annot_entry* @PDFSourceAnnot_New(i32 %225, i8* %226, i32 %227, i32 %228, i32 %229, i32 %230, i32 %231, i32 %232) #5
  br label %395

; <label>:234                                     ; preds = %164, %164
  %235 = load i32, i32* %keyword.i, align 4
  %236 = load i8*, i8** %link_name.i, align 8
  %237 = load i32, i32* %link_len.i, align 4
  %238 = load i32, i32* %ll_x.i, align 4
  %239 = load i32, i32* %ll_y.i, align 4
  %240 = load i32, i32* %ur_x.i, align 4
  %241 = load i32, i32* %ur_y.i, align 4
  %242 = call %struct.t_source_annot_entry* @PDFSourceAnnot_New(i32 %235, i8* %236, i32 %237, i32 %238, i32 %239, i32 %240, i32 %241, i32 0) #5
  store %struct.t_source_annot_entry* %242, %struct.t_source_annot_entry** %source.i, align 8
  %243 = load i32, i32* %keyword.i, align 4
  %244 = icmp eq i32 %243, 1
  br i1 %244, label %245, label %289

; <label>:245                                     ; preds = %234
  store i32 0, i32* %link_len.i, align 4
  %246 = load i8*, i8** %parm.i, align 8
  %247 = icmp ne i8* %246, null
  br i1 %247, label %248, label %262

; <label>:248                                     ; preds = %245
  %249 = load i8*, i8** %parm.i, align 8
  %250 = call i32 @PDFKeyword_Find(i32 1, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @g_external_file_spec_keyword, i32 0, i32 0), i8* %249) #5
  store i32 %250, i32* %j1.i, align 4
  %251 = load i32, i32* %j1.i, align 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %261

; <label>:253                                     ; preds = %248
  %254 = load i8*, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @g_external_file_spec_keyword, i32 0, i64 0), align 8
  %255 = call i64 @strlen(i8* %254) #6
  %256 = load i8*, i8** %parm.i, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 %255
  store i8* %257, i8** %parm.i, align 8
  %258 = load i8*, i8** %parm.i, align 8
  %259 = call i64 @strlen(i8* %258) #6
  %260 = trunc i64 %259 to i32
  store i32 %260, i32* %link_len.i, align 4
  br label %261

; <label>:261                                     ; preds = %253, %248
  br label %262

; <label>:262                                     ; preds = %261, %245
  %263 = load i32, i32* %link_len.i, align 4
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %268

; <label>:265                                     ; preds = %262
  %266 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %267 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 24, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.96, i32 0, i32 0), i32 1, %struct.FILE_POS* %266) #5
  br label %288

; <label>:268                                     ; preds = %262
  %269 = load i32, i32* %link_len.i, align 4
  %270 = add i32 %269, 1
  %271 = zext i32 %270 to i64
  %272 = call noalias i8* @malloc(i64 %271) #5
  %273 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source.i, align 8
  %274 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %273, i32 0, i32 3
  store i8* %272, i8** %274, align 8
  %275 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source.i, align 8
  %276 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %275, i32 0, i32 3
  %277 = load i8*, i8** %276, align 8
  %278 = icmp eq i8* %277, null
  br i1 %278, label %279, label %282

; <label>:279                                     ; preds = %268
  %280 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %281 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 25, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.97, i32 0, i32 0), i32 1, %struct.FILE_POS* %280) #5
  br label %282

; <label>:282                                     ; preds = %279, %268
  %283 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source.i, align 8
  %284 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %283, i32 0, i32 3
  %285 = load i8*, i8** %284, align 8
  %286 = load i8*, i8** %parm.i, align 8
  %287 = call i8* @strcpy(i8* %285, i8* %286) #5
  br label %288

; <label>:288                                     ; preds = %282, %265
  br label %289

; <label>:289                                     ; preds = %288, %234
  br label %395

; <label>:290                                     ; preds = %164, %164
  %291 = load i8*, i8** %link_name.i, align 8
  %292 = load i32, i32* %link_len.i, align 4
  %293 = load i32, i32* %ll_x.i, align 4
  %294 = load i32, i32* %ll_y.i, align 4
  %295 = load i32, i32* %ur_x.i, align 4
  %296 = load i32, i32* %ur_y.i, align 4
  %297 = load i32, i32* %keyword.i, align 4
  %298 = icmp eq i32 %297, 4
  %299 = zext i1 %298 to i32
  %300 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %300) #5
  %301 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %301) #5
  %302 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %302) #5
  %303 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %303) #5
  %304 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %304) #5
  %305 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %305) #5
  %306 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %306) #5
  %307 = bitcast %struct.t_target_annot_entry** %entry.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %307) #5
  store i8* %291, i8** %3, align 8
  store i32 %292, i32* %4, align 4
  store i32 %293, i32* %5, align 4
  store i32 %294, i32* %6, align 4
  store i32 %295, i32* %7, align 4
  store i32 %296, i32* %8, align 4
  store i32 %299, i32* %9, align 4
  %308 = call noalias i8* @malloc(i64 40) #5
  %309 = bitcast i8* %308 to %struct.t_target_annot_entry*
  store %struct.t_target_annot_entry* %309, %struct.t_target_annot_entry** %entry.i.i, align 8
  %310 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %311 = icmp eq %struct.t_target_annot_entry* %310, null
  br i1 %311, label %312, label %315

; <label>:312                                     ; preds = %290
  %313 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %314 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.108, i32 0, i32 0), i32 1, %struct.FILE_POS* %313) #5
  br label %315

; <label>:315                                     ; preds = %312, %290
  %316 = load i32, i32* %4, align 4
  %317 = add i32 %316, 1
  %318 = zext i32 %317 to i64
  %319 = call noalias i8* @malloc(i64 %318) #5
  %320 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %321 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %320, i32 0, i32 1
  store i8* %319, i8** %321, align 8
  %322 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %323 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %322, i32 0, i32 1
  %324 = load i8*, i8** %323, align 8
  %325 = icmp eq i8* %324, null
  br i1 %325, label %326, label %329

; <label>:326                                     ; preds = %315
  %327 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %328 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 17, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.108, i32 0, i32 0), i32 1, %struct.FILE_POS* %327) #5
  br label %329

; <label>:329                                     ; preds = %326, %315
  %330 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %331 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %330, i32 0, i32 1
  %332 = load i8*, i8** %331, align 8
  %333 = load i8*, i8** %3, align 8
  %334 = load i32, i32* %4, align 4
  %335 = zext i32 %334 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %332, i8* %333, i64 %335, i32 1, i1 false) #5
  %336 = load i32, i32* %4, align 4
  %337 = zext i32 %336 to i64
  %338 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %339 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %338, i32 0, i32 1
  %340 = load i8*, i8** %339, align 8
  %341 = getelementptr inbounds i8, i8* %340, i64 %337
  store i8 0, i8* %341, align 1
  %342 = load i32, i32* @g_page_contents_obj_num, align 4
  %343 = icmp ne i32 %342, 0
  %344 = zext i1 %343 to i32
  %345 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %346 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %346) #5
  %347 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %347) #5
  store i32 %344, i32* %1, align 4
  store %struct.FILE_POS* %345, %struct.FILE_POS** %2, align 8
  %348 = load i32, i32* %1, align 4
  %349 = icmp ne i32 %348, 0
  br i1 %349, label %Assert.exit.i.i, label %350

; <label>:350                                     ; preds = %329
  %351 = load i32, i32* %1, align 4
  %352 = icmp ne i32 %351, 0
  br i1 %352, label %357, label %353

; <label>:353                                     ; preds = %350
  %354 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %355 = load %struct.FILE_POS*, %struct.FILE_POS** %2, align 8
  %356 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %354, %struct.FILE_POS* %355) #5
  br label %357

; <label>:357                                     ; preds = %353, %350
  br label %Assert.exit.i.i

Assert.exit.i.i:                                  ; preds = %357, %329
  %358 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %358) #5
  %359 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %359) #5
  %360 = load i32, i32* @g_page_object_num, align 4
  %361 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %362 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %361, i32 0, i32 2
  store i32 %360, i32* %362, align 4
  %363 = load i32, i32* %5, align 4
  %364 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %365 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %364, i32 0, i32 3
  store i32 %363, i32* %365, align 4
  %366 = load i32, i32* %6, align 4
  %367 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %368 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %367, i32 0, i32 4
  store i32 %366, i32* %368, align 4
  %369 = load i32, i32* %7, align 4
  %370 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %371 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %370, i32 0, i32 5
  store i32 %369, i32* %371, align 4
  %372 = load i32, i32* %8, align 4
  %373 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %374 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %373, i32 0, i32 6
  store i32 %372, i32* %374, align 4
  %375 = load i32, i32* %9, align 4
  %376 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %377 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %376, i32 0, i32 7
  store i32 %375, i32* %377, align 4
  %378 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  %379 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  %380 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %379, i32 0, i32 0
  store %struct.t_target_annot_entry* %378, %struct.t_target_annot_entry** %380, align 8
  %381 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i.i, align 8
  store %struct.t_target_annot_entry* %381, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  %382 = load i32, i32* %9, align 4
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %384, label %PDFTargetAnnot_New.exit.i

; <label>:384                                     ; preds = %Assert.exit.i.i
  %385 = load i32, i32* %9, align 4
  store i32 %385, i32* @g_has_exported_targets, align 4
  br label %PDFTargetAnnot_New.exit.i

PDFTargetAnnot_New.exit.i:                        ; preds = %384, %Assert.exit.i.i
  %386 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %386) #5
  %387 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %387) #5
  %388 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %388) #5
  %389 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %389) #5
  %390 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %390) #5
  %391 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %391) #5
  %392 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %392) #5
  %393 = bitcast %struct.t_target_annot_entry** %entry.i.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %393) #5
  br label %395

; <label>:394                                     ; preds = %164
  br label %395

; <label>:395                                     ; preds = %394, %PDFTargetAnnot_New.exit.i, %289, %224, %164
  br label %PDFPage_ProcessLinkKeyword.exit

PDFPage_ProcessLinkKeyword.exit:                  ; preds = %395, %161
  %396 = bitcast i8** %charPtr.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %396)
  %397 = bitcast i32* %keyword.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %397)
  %398 = bitcast i32* %link_len.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %398)
  %399 = bitcast i8** %link_name.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %399)
  %400 = bitcast i8** %parm.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %400)
  %401 = bitcast i32* %ll_x.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %401)
  %402 = bitcast i32* %ll_y.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %402)
  %403 = bitcast i32* %ur_x.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %403)
  %404 = bitcast i32* %ur_y.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %404)
  %405 = bitcast i32* %j.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %405)
  %406 = bitcast %struct.t_source_annot_entry** %source.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %406)
  %407 = bitcast i32* %j1.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %407)
  %408 = load i8*, i8** %12, align 8
  %409 = getelementptr inbounds i8, i8* %408, i32 1
  store i8* %409, i8** %12, align 8
  br label %421

; <label>:410                                     ; preds = %Assert.exit
  %411 = load i8*, i8** %12, align 8
  %412 = getelementptr inbounds i8, i8* %411, i32 1
  store i8* %412, i8** %12, align 8
  %413 = load i8, i8* %411, align 1
  %414 = load i32, i32* @g_link_index, align 4
  %415 = add nsw i32 %414, 1
  store i32 %415, i32* @g_link_index, align 4
  %416 = sext i32 %414 to i64
  %417 = getelementptr inbounds [512 x i8], [512 x i8]* @g_link, i32 0, i64 %416
  store i8 %413, i8* %417, align 1
  br label %418

; <label>:418                                     ; preds = %410
  br label %419

; <label>:419                                     ; preds = %418, %55, %51
  br label %420

; <label>:420                                     ; preds = %419, %41
  br label %13

; <label>:421                                     ; preds = %PDFPage_ProcessLinkKeyword.exit, %13
  %422 = load i8*, i8** %12, align 8
  ret i8* %422
}

; Function Attrs: nounwind uwtable
define internal i32 @PDFKeyword_Find(i32 %in_number_of_array_elements, i8** %in_keyword_array, i8* %in_str) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8**, align 8
  %3 = alloca i8*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  store i32 %in_number_of_array_elements, i32* %1, align 4
  store i8** %in_keyword_array, i8*** %2, align 8
  store i8* %in_str, i8** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %28, %0
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %1, align 4
  %7 = icmp ult i32 %5, %6
  br i1 %7, label %8, label %31

; <label>:8                                       ; preds = %4
  %9 = load i32, i32* %i, align 4
  %10 = zext i32 %9 to i64
  %11 = load i8**, i8*** %2, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 %10
  %13 = load i8*, i8** %12, align 8
  %14 = call i64 @strlen(i8* %13) #6
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %len, align 4
  %16 = load i32, i32* %i, align 4
  %17 = zext i32 %16 to i64
  %18 = load i8**, i8*** %2, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 %17
  %20 = load i8*, i8** %19, align 8
  %21 = load i8*, i8** %3, align 8
  %22 = load i32, i32* %len, align 4
  %23 = zext i32 %22 to i64
  %24 = call i32 @memcmp(i8* %20, i8* %21, i64 %23) #6
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %8
  br label %31

; <label>:27                                      ; preds = %8
  br label %28

; <label>:28                                      ; preds = %27
  %29 = load i32, i32* %i, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %i, align 4
  br label %4

; <label>:31                                      ; preds = %26, %4
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %1, align 4
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %37

; <label>:35                                      ; preds = %31
  %36 = load i32, i32* %i, align 4
  br label %38

; <label>:37                                      ; preds = %31
  br label %38

; <label>:38                                      ; preds = %37, %35
  %39 = phi i32 [ %36, %35 ], [ -1, %37 ]
  ret i32 %39
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #4

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define void @PDFPage_PrintUnderline(%struct._IO_FILE* %in_fp, i32 %in_x1, i32 %in_x2, i32 %in_y, i32 %in_thickness) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %entry.i = alloca %struct.t_qsave_marking_entry*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %str = alloca [512 x i8], align 16
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %4, align 8
  store i32 %in_x1, i32* %5, align 4
  store i32 %in_x2, i32* %6, align 4
  store i32 %in_y, i32* %7, align 4
  store i32 %in_thickness, i32* %8, align 4
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %10 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10)
  %11 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11)
  store %struct._IO_FILE* %9, %struct._IO_FILE** %3, align 8
  %12 = load i32, i32* @g_in_buffering_mode, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %PDFPage_FlushBuffer.exit

; <label>:14                                      ; preds = %0
  store i32 0, i32* @g_in_buffering_mode, align 4
  br label %15

; <label>:15                                      ; preds = %18, %14
  %16 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %17 = icmp ne %struct.t_qsave_marking_entry* %16, null
  br i1 %17, label %18, label %25

; <label>:18                                      ; preds = %15
  %19 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  store %struct.t_qsave_marking_entry* %19, %struct.t_qsave_marking_entry** %entry.i, align 8
  %20 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %21 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %20, i32 0, i32 0
  %22 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %21, align 8
  store %struct.t_qsave_marking_entry* %22, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %23 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i, align 8
  %24 = bitcast %struct.t_qsave_marking_entry* %23 to i8*
  call void @free(i8* %24) #5
  br label %15

; <label>:25                                      ; preds = %15
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %27 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #5
  %28 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %28) #5
  store %struct._IO_FILE* %26, %struct._IO_FILE** %1, align 8
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i32 0), i8** %2, align 8
  %29 = load i8*, i8** %2, align 8
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %25
  br label %PDFPage_WriteStream.exit.i

; <label>:34                                      ; preds = %25
  %35 = load i8*, i8** %2, align 8
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %37 = call i32 @fputs(i8* %35, %struct._IO_FILE* %36) #5
  br label %PDFPage_WriteStream.exit.i

PDFPage_WriteStream.exit.i:                       ; preds = %34, %33
  %38 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #5
  %39 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #5
  br label %PDFPage_FlushBuffer.exit

PDFPage_FlushBuffer.exit:                         ; preds = %PDFPage_WriteStream.exit.i, %0
  %40 = bitcast %struct._IO_FILE** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %40)
  %41 = bitcast %struct.t_qsave_marking_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41)
  %42 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %43 = load i32, i32* %8, align 4
  %44 = load i32, i32* %5, align 4
  %45 = load i32, i32* %7, align 4
  %46 = load i32, i32* %6, align 4
  %47 = load i32, i32* %7, align 4
  %48 = call i32 (i8*, i8*, ...) @sprintf(i8* %42, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i32 0, i32 0), i32 %43, i32 %44, i32 %45, i32 %46, i32 %47) #5
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %50 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  call void @PDFPage_Write(%struct._IO_FILE* %49, i8* %50)
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_Init(%struct._IO_FILE* %in_fp, float %in_scale_factor, i32 %in_line_width) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca float, align 4
  %3 = alloca i32, align 4
  %entry = alloca %struct.t_font_list_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  store float %in_scale_factor, float* %2, align 4
  store i32 %in_line_width, i32* %3, align 4
  store i32 0, i32* @g_page_uses_fonts, align 4
  store i32 0, i32* @g_page_has_text, align 4
  store i32 0, i32* @g_page_has_graphics, align 4
  store i32 0, i32* @g_page_contents_obj_num, align 4
  store i32 0, i32* @g_page_length_obj_num, align 4
  store i32 0, i32* @g_page_start_offset, align 4
  %4 = load float, float* %2, align 4
  store float %4, float* @g_page_v_scale_factor, align 4
  store float %4, float* @g_page_h_scale_factor, align 4
  store i32 0, i32* @g_page_v_origin, align 4
  store i32 0, i32* @g_page_h_origin, align 4
  %5 = load i32, i32* %3, align 4
  store i32 %5, i32* @g_page_line_width, align 4
  store i32 0, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 0), align 4
  store i32 0, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 1), align 4
  store i32 0, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 2), align 4
  store i32 0, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 3), align 4
  store i32 0, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 4), align 4
  store i32 0, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 5), align 4
  store i32 0, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 6), align 4
  store i32 0, i32* @g_ET_pending, align 4
  store i32 0, i32* @g_TJ_pending, align 4
  store i32 0, i32* @g_valid_text_matrix, align 4
  %6 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_list_entry* %6, %struct.t_font_list_entry** %entry, align 8
  br label %7

; <label>:7                                       ; preds = %10, %0
  %8 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %9 = icmp ne %struct.t_font_list_entry* %8, null
  br i1 %9, label %10, label %16

; <label>:10                                      ; preds = %7
  %11 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %12 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %11, i32 0, i32 7
  store i32 0, i32* %12, align 4
  %13 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %14 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %13, i32 0, i32 0
  %15 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %14, align 8
  store %struct.t_font_list_entry* %15, %struct.t_font_list_entry** %entry, align 8
  br label %7

; <label>:16                                      ; preds = %7
  store %struct.t_qsave_entry* null, %struct.t_qsave_entry** @g_qsave_stack, align 8
  store %struct.t_qsave_marking_entry* null, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  store i32 0, i32* @g_buffer_pos, align 4
  store i8 0, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i64 0), align 1
  store i32 0, i32* @g_in_buffering_mode, align 4
  store i32 1, i32* @g_in_buffering_mode, align 4
  %17 = load i32, i32* @g_page_count, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* @g_page_count, align 4
  %19 = call i32 @PDFObject_New()
  store i32 %19, i32* @g_page_object_num, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFPage_Cleanup(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca %struct.t_source_annot_entry*, align 8
  %next_entry.i = alloca %struct.t_source_annot_entry*, align 8
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.FILE_POS*, align 8
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca %struct.t_font_list_entry*, align 8
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct._IO_FILE*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.FILE_POS*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.FILE_POS*, align 8
  %18 = alloca i32, align 4
  %19 = alloca %struct.FILE_POS*, align 8
  %20 = alloca %struct._IO_FILE*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %i.i.i = alloca i32, align 4
  %24 = alloca %struct._IO_FILE*, align 8
  %25 = alloca %struct.t_font_list_entry*, align 8
  %26 = alloca %struct._IO_FILE*, align 8
  %27 = alloca %struct.t_font_list_entry*, align 8
  %28 = alloca i32, align 4
  %29 = alloca %struct.FILE_POS*, align 8
  %30 = alloca %struct._IO_FILE*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca %struct._IO_FILE*, align 8
  %entry.i.i = alloca %struct.t_qsave_marking_entry*, align 8
  %33 = alloca %struct._IO_FILE*, align 8
  %page_length.i = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca %struct.FILE_POS*, align 8
  %36 = alloca %struct._IO_FILE*, align 8
  %hasAnnot = alloca i32, align 4
  %page_length = alloca i32, align 4
  %entry = alloca %struct.t_font_list_entry*, align 8
  %source = alloca %struct.t_source_annot_entry*, align 8
  %wanted_block_num = alloca i32, align 4
  %block_pos = alloca i32, align 4
  %the_block = alloca %struct.t_page_block*, align 8
  %entry1 = alloca %struct.t_font_list_entry*, align 8
  %entry2 = alloca %struct.t_source_annot_entry*, align 8
  %previous_entry = alloca %struct.t_source_annot_entry*, align 8
  %next_entry = alloca %struct.t_source_annot_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %36, align 8
  store i32 0, i32* %hasAnnot, align 4
  %37 = load %struct.t_qsave_entry*, %struct.t_qsave_entry** @g_qsave_stack, align 8
  %38 = icmp eq %struct.t_qsave_entry* %37, null
  %39 = zext i1 %38 to i32
  %40 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %41 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %41)
  %42 = bitcast %struct.FILE_POS** %35 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %42)
  store i32 %39, i32* %34, align 4
  store %struct.FILE_POS* %40, %struct.FILE_POS** %35, align 8
  %43 = load i32, i32* %34, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %Assert.exit, label %45

; <label>:45                                      ; preds = %0
  %46 = load i32, i32* %34, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %52, label %48

; <label>:48                                      ; preds = %45
  %49 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %50 = load %struct.FILE_POS*, %struct.FILE_POS** %35, align 8
  %51 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %49, %struct.FILE_POS* %50) #5
  br label %52

; <label>:52                                      ; preds = %48, %45
  br label %Assert.exit

Assert.exit:                                      ; preds = %52, %0
  %53 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %53)
  %54 = bitcast %struct.FILE_POS** %35 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54)
  %55 = load i32, i32* @g_page_contents_obj_num, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %252

; <label>:57                                      ; preds = %Assert.exit
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %59 = bitcast %struct._IO_FILE** %33 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %59)
  %60 = bitcast i32* %page_length.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %60)
  store %struct._IO_FILE* %58, %struct._IO_FILE** %33, align 8
  %61 = load i32, i32* @g_in_buffering_mode, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %97

; <label>:63                                      ; preds = %57
  store i32 0, i32* @g_buffer_pos, align 4
  store i8 0, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i64 0), align 1
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %33, align 8
  %65 = bitcast %struct._IO_FILE** %32 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %65) #5
  %66 = bitcast %struct.t_qsave_marking_entry** %entry.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %66) #5
  store %struct._IO_FILE* %64, %struct._IO_FILE** %32, align 8
  %67 = load i32, i32* @g_in_buffering_mode, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %PDFPage_FlushBuffer.exit.i

; <label>:69                                      ; preds = %63
  store i32 0, i32* @g_in_buffering_mode, align 4
  br label %70

; <label>:70                                      ; preds = %73, %69
  %71 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %72 = icmp ne %struct.t_qsave_marking_entry* %71, null
  br i1 %72, label %73, label %80

; <label>:73                                      ; preds = %70
  %74 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  store %struct.t_qsave_marking_entry* %74, %struct.t_qsave_marking_entry** %entry.i.i, align 8
  %75 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i.i, align 8
  %76 = getelementptr inbounds %struct.t_qsave_marking_entry, %struct.t_qsave_marking_entry* %75, i32 0, i32 0
  %77 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %76, align 8
  store %struct.t_qsave_marking_entry* %77, %struct.t_qsave_marking_entry** @g_qsave_marking_stack, align 8
  %78 = load %struct.t_qsave_marking_entry*, %struct.t_qsave_marking_entry** %entry.i.i, align 8
  %79 = bitcast %struct.t_qsave_marking_entry* %78 to i8*
  call void @free(i8* %79) #5
  br label %70

; <label>:80                                      ; preds = %70
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %32, align 8
  %82 = bitcast %struct._IO_FILE** %30 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %82) #5
  %83 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %83) #5
  store %struct._IO_FILE* %81, %struct._IO_FILE** %30, align 8
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_buffer, i32 0, i32 0), i8** %31, align 8
  %84 = load i8*, i8** %31, align 8
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %80
  br label %PDFPage_WriteStream.exit.i.i

; <label>:89                                      ; preds = %80
  %90 = load i8*, i8** %31, align 8
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 8
  %92 = call i32 @fputs(i8* %90, %struct._IO_FILE* %91) #5
  br label %PDFPage_WriteStream.exit.i.i

PDFPage_WriteStream.exit.i.i:                     ; preds = %89, %88
  %93 = bitcast %struct._IO_FILE** %30 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %93) #5
  %94 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %94) #5
  br label %PDFPage_FlushBuffer.exit.i

PDFPage_FlushBuffer.exit.i:                       ; preds = %PDFPage_WriteStream.exit.i.i, %63
  %95 = bitcast %struct._IO_FILE** %32 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %95) #5
  %96 = bitcast %struct.t_qsave_marking_entry** %entry.i.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %96) #5
  br label %97

; <label>:97                                      ; preds = %PDFPage_FlushBuffer.exit.i, %57
  %98 = load i32, i32* @g_page_contents_obj_num, align 4
  %99 = icmp ne i32 %98, 0
  %100 = zext i1 %99 to i32
  %101 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %102 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %102) #5
  %103 = bitcast %struct.FILE_POS** %29 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %103) #5
  store i32 %100, i32* %28, align 4
  store %struct.FILE_POS* %101, %struct.FILE_POS** %29, align 8
  %104 = load i32, i32* %28, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %PDFPage_End.exit, label %106

; <label>:106                                     ; preds = %97
  %107 = load i32, i32* %28, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %113, label %109

; <label>:109                                     ; preds = %106
  %110 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %111 = load %struct.FILE_POS*, %struct.FILE_POS** %29, align 8
  %112 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %110, %struct.FILE_POS* %111) #5
  br label %113

; <label>:113                                     ; preds = %109, %106
  br label %PDFPage_End.exit

PDFPage_End.exit:                                 ; preds = %113, %97
  %114 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #5
  %115 = bitcast %struct.FILE_POS** %29 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %115) #5
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %33, align 8
  %117 = call i64 @ftell(%struct._IO_FILE* %116) #5
  %118 = load i32, i32* @g_page_start_offset, align 4
  %119 = zext i32 %118 to i64
  %120 = sub nsw i64 %117, %119
  %121 = trunc i64 %120 to i32
  store i32 %121, i32* %page_length.i, align 4
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %33, align 8
  %123 = call i32 @fputs(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.134, i32 0, i32 0), %struct._IO_FILE* %122) #5
  %124 = load i32, i32* %page_length.i, align 4
  %125 = bitcast %struct._IO_FILE** %33 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125)
  %126 = bitcast i32* %page_length.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %126)
  store i32 %124, i32* %page_length, align 4
  %127 = load i32, i32* @g_PDF_debug, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %133

; <label>:129                                     ; preds = %PDFPage_End.exit
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %131 = load i32, i32* @g_page_count, align 4
  %132 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %130, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i32 0, i32 0), i32 %131)
  br label %133

; <label>:133                                     ; preds = %129, %PDFPage_End.exit
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %135 = load i32, i32* @g_page_length_obj_num, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %134, i32 %135)
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %137 = load i32, i32* %page_length, align 4
  %138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i32 %137)
  %139 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_list_entry* %139, %struct.t_font_list_entry** %entry, align 8
  br label %140

; <label>:140                                     ; preds = %PDFFont_WriteFontResource.exit, %133
  %141 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %142 = icmp ne %struct.t_font_list_entry* %141, null
  br i1 %142, label %143, label %251

; <label>:143                                     ; preds = %140
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %145 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %146 = bitcast %struct._IO_FILE** %26 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %146)
  %147 = bitcast %struct.t_font_list_entry** %27 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %147)
  store %struct._IO_FILE* %144, %struct._IO_FILE** %26, align 8
  store %struct.t_font_list_entry* %145, %struct.t_font_list_entry** %27, align 8
  %148 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %149 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %148, i32 0, i32 6
  %150 = load i32, i32* %149, align 4
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %PDFFont_WriteFontResource.exit, label %152

; <label>:152                                     ; preds = %143
  %153 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %154 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %153, i32 0, i32 6
  store i32 1, i32* %154, align 4
  %155 = load i32, i32* @g_PDF_debug, align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %163

; <label>:157                                     ; preds = %152
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %159 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %160 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %159, i32 0, i32 3
  %161 = load i8*, i8** %160, align 8
  %162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %158, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.136, i32 0, i32 0), i8* %161) #5
  br label %163

; <label>:163                                     ; preds = %157, %152
  %164 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %165 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %166 = bitcast %struct._IO_FILE** %24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %166) #5
  %167 = bitcast %struct.t_font_list_entry** %25 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %167) #5
  store %struct._IO_FILE* %164, %struct._IO_FILE** %24, align 8
  store %struct.t_font_list_entry* %165, %struct.t_font_list_entry** %25, align 8
  %168 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %25, align 8
  %169 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %168, i32 0, i32 5
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %PDFFont_WriteObject.exit.i

; <label>:172                                     ; preds = %163
  %173 = call i32 @PDFObject_New() #5
  %174 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %25, align 8
  %175 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %174, i32 0, i32 5
  store i32 %173, i32* %175, align 4
  br label %PDFFont_WriteObject.exit.i

PDFFont_WriteObject.exit.i:                       ; preds = %172, %163
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %177 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %25, align 8
  %178 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %177, i32 0, i32 5
  %179 = load i32, i32* %178, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %176, i32 %179) #5
  %180 = bitcast %struct._IO_FILE** %24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %180) #5
  %181 = bitcast %struct.t_font_list_entry** %25 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %181) #5
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %183 = call i32 @fputs(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.137, i32 0, i32 0), %struct._IO_FILE* %182) #5
  %184 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %185 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %186 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %185, i32 0, i32 1
  %187 = load i8*, i8** %186, align 8
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %184, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.138, i32 0, i32 0), i8* %187) #5
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %190 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %191 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %190, i32 0, i32 3
  %192 = load i8*, i8** %191, align 8
  %193 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %189, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.139, i32 0, i32 0), i8* %192) #5
  %194 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %195 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %194, i32 0, i32 3
  %196 = load i8*, i8** %195, align 8
  %197 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %197) #5
  %198 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %198) #5
  %199 = bitcast i32* %i.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %199) #5
  store i8* %196, i8** %23, align 8
  store i32 0, i32* %i.i.i, align 4
  br label %200

; <label>:200                                     ; preds = %212, %PDFFont_WriteObject.exit.i
  %201 = load i32, i32* %i.i.i, align 4
  %202 = icmp slt i32 %201, 14
  br i1 %202, label %203, label %215

; <label>:203                                     ; preds = %200
  %204 = load i32, i32* %i.i.i, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [14 x i8*], [14 x i8*]* @g_standard_base_14_fonts, i32 0, i64 %205
  %207 = load i8*, i8** %206, align 8
  %208 = load i8*, i8** %23, align 8
  %209 = call i32 @strcmp(i8* %207, i8* %208) #6
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

; <label>:211                                     ; preds = %203
  store i32 1, i32* %22
  br label %PDFFont_IsOneOfTheBase14Fonts.exit.i

; <label>:212                                     ; preds = %203
  %213 = load i32, i32* %i.i.i, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %i.i.i, align 4
  br label %200

; <label>:215                                     ; preds = %200
  store i32 0, i32* %22
  br label %PDFFont_IsOneOfTheBase14Fonts.exit.i

PDFFont_IsOneOfTheBase14Fonts.exit.i:             ; preds = %215, %211
  %216 = load i32, i32* %22
  %217 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %217) #5
  %218 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %218) #5
  %219 = bitcast i32* %i.i.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %219) #5
  %220 = icmp ne i32 %216, 0
  br i1 %220, label %222, label %221

; <label>:221                                     ; preds = %PDFFont_IsOneOfTheBase14Fonts.exit.i
  br label %222

; <label>:222                                     ; preds = %221, %PDFFont_IsOneOfTheBase14Fonts.exit.i
  %223 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %224 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %223, i32 0, i32 4
  %225 = load i32, i32* %224, align 4
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %243

; <label>:227                                     ; preds = %222
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %229 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.140, i32 0, i32 0), %struct._IO_FILE* %228) #5
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %231 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %27, align 8
  %232 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %231, i32 0, i32 4
  %233 = load i32, i32* %232, align 4
  %234 = bitcast %struct._IO_FILE** %20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %234) #5
  %235 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %235) #5
  store %struct._IO_FILE* %230, %struct._IO_FILE** %20, align 8
  store i32 %233, i32* %21, align 4
  %236 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %237 = load i32, i32* %21, align 4
  %238 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %236, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %237) #5
  %239 = bitcast %struct._IO_FILE** %20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %239) #5
  %240 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %240) #5
  %241 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %242 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), %struct._IO_FILE* %241) #5
  br label %243

; <label>:243                                     ; preds = %227, %222
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %245 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._IO_FILE* %244) #5
  br label %PDFFont_WriteFontResource.exit

PDFFont_WriteFontResource.exit:                   ; preds = %243, %143
  %246 = bitcast %struct._IO_FILE** %26 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %246)
  %247 = bitcast %struct.t_font_list_entry** %27 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %247)
  %248 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry, align 8
  %249 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %248, i32 0, i32 0
  %250 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %249, align 8
  store %struct.t_font_list_entry* %250, %struct.t_font_list_entry** %entry, align 8
  br label %140

; <label>:251                                     ; preds = %140
  br label %252

; <label>:252                                     ; preds = %251, %Assert.exit
  %253 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  store %struct.t_source_annot_entry* %253, %struct.t_source_annot_entry** %source, align 8
  br label %254

; <label>:254                                     ; preds = %266, %252
  %255 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %256 = icmp ne %struct.t_source_annot_entry* %255, null
  br i1 %256, label %257, label %270

; <label>:257                                     ; preds = %254
  %258 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %259 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %258, i32 0, i32 9
  %260 = load i32, i32* %259, align 4
  %261 = load i32, i32* @g_page_object_num, align 4
  %262 = icmp eq i32 %260, %261
  br i1 %262, label %263, label %266

; <label>:263                                     ; preds = %257
  store i32 1, i32* %hasAnnot, align 4
  %264 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %265 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  call void @PDFSourceAnnot_Write(%struct._IO_FILE* %264, %struct.t_source_annot_entry* %265)
  br label %266

; <label>:266                                     ; preds = %263, %257
  %267 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %268 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %267, i32 0, i32 0
  %269 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %268, align 8
  store %struct.t_source_annot_entry* %269, %struct.t_source_annot_entry** %source, align 8
  br label %254

; <label>:270                                     ; preds = %254
  %271 = load i32, i32* @g_page_count, align 4
  %272 = sub i32 %271, 1
  %273 = udiv i32 %272, 64
  store i32 %273, i32* %wanted_block_num, align 4
  %274 = load i32, i32* @g_page_count, align 4
  %275 = sub i32 %274, 1
  %276 = urem i32 %275, 64
  store i32 %276, i32* %block_pos, align 4
  %277 = load %struct.t_page_block*, %struct.t_page_block** @g_cur_page_block, align 8
  store %struct.t_page_block* %277, %struct.t_page_block** %the_block, align 8
  %278 = load i32, i32* %block_pos, align 4
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %337

; <label>:280                                     ; preds = %270
  %281 = call noalias i8* @malloc(i64 264) #5
  %282 = bitcast i8* %281 to %struct.t_page_block*
  store %struct.t_page_block* %282, %struct.t_page_block** %the_block, align 8
  %283 = load %struct.t_page_block*, %struct.t_page_block** %the_block, align 8
  %284 = icmp eq %struct.t_page_block* %283, null
  br i1 %284, label %285, label %288

; <label>:285                                     ; preds = %280
  %286 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %287 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 38, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i32 0, i32 0), i32 1, %struct.FILE_POS* %286)
  br label %288

; <label>:288                                     ; preds = %285, %280
  %289 = load i32, i32* %wanted_block_num, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %311

; <label>:291                                     ; preds = %288
  %292 = load %struct.t_page_block*, %struct.t_page_block** @g_page_block_list, align 8
  %293 = icmp eq %struct.t_page_block* %292, null
  %294 = zext i1 %293 to i32
  %295 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %296 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %296)
  %297 = bitcast %struct.FILE_POS** %19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %297)
  store i32 %294, i32* %18, align 4
  store %struct.FILE_POS* %295, %struct.FILE_POS** %19, align 8
  %298 = load i32, i32* %18, align 4
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %Assert.exit1, label %300

; <label>:300                                     ; preds = %291
  %301 = load i32, i32* %18, align 4
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %307, label %303

; <label>:303                                     ; preds = %300
  %304 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %305 = load %struct.FILE_POS*, %struct.FILE_POS** %19, align 8
  %306 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %304, %struct.FILE_POS* %305) #5
  br label %307

; <label>:307                                     ; preds = %303, %300
  br label %Assert.exit1

Assert.exit1:                                     ; preds = %307, %291
  %308 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %308)
  %309 = bitcast %struct.FILE_POS** %19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %309)
  %310 = load %struct.t_page_block*, %struct.t_page_block** %the_block, align 8
  store %struct.t_page_block* %310, %struct.t_page_block** @g_page_block_list, align 8
  br label %333

; <label>:311                                     ; preds = %288
  %312 = load %struct.t_page_block*, %struct.t_page_block** @g_cur_page_block, align 8
  %313 = icmp ne %struct.t_page_block* %312, null
  %314 = zext i1 %313 to i32
  %315 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %316 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %316)
  %317 = bitcast %struct.FILE_POS** %17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %317)
  store i32 %314, i32* %16, align 4
  store %struct.FILE_POS* %315, %struct.FILE_POS** %17, align 8
  %318 = load i32, i32* %16, align 4
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %Assert.exit2, label %320

; <label>:320                                     ; preds = %311
  %321 = load i32, i32* %16, align 4
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %327, label %323

; <label>:323                                     ; preds = %320
  %324 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %325 = load %struct.FILE_POS*, %struct.FILE_POS** %17, align 8
  %326 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %324, %struct.FILE_POS* %325) #5
  br label %327

; <label>:327                                     ; preds = %323, %320
  br label %Assert.exit2

Assert.exit2:                                     ; preds = %327, %311
  %328 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %328)
  %329 = bitcast %struct.FILE_POS** %17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %329)
  %330 = load %struct.t_page_block*, %struct.t_page_block** %the_block, align 8
  %331 = load %struct.t_page_block*, %struct.t_page_block** @g_cur_page_block, align 8
  %332 = getelementptr inbounds %struct.t_page_block, %struct.t_page_block* %331, i32 0, i32 0
  store %struct.t_page_block* %330, %struct.t_page_block** %332, align 8
  br label %333

; <label>:333                                     ; preds = %Assert.exit2, %Assert.exit1
  %334 = load %struct.t_page_block*, %struct.t_page_block** %the_block, align 8
  %335 = getelementptr inbounds %struct.t_page_block, %struct.t_page_block* %334, i32 0, i32 0
  store %struct.t_page_block* null, %struct.t_page_block** %335, align 8
  %336 = load %struct.t_page_block*, %struct.t_page_block** %the_block, align 8
  store %struct.t_page_block* %336, %struct.t_page_block** @g_cur_page_block, align 8
  br label %356

; <label>:337                                     ; preds = %270
  %338 = load %struct.t_page_block*, %struct.t_page_block** %the_block, align 8
  %339 = icmp ne %struct.t_page_block* %338, null
  %340 = zext i1 %339 to i32
  %341 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %342 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %342)
  %343 = bitcast %struct.FILE_POS** %15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %343)
  store i32 %340, i32* %14, align 4
  store %struct.FILE_POS* %341, %struct.FILE_POS** %15, align 8
  %344 = load i32, i32* %14, align 4
  %345 = icmp ne i32 %344, 0
  br i1 %345, label %Assert.exit3, label %346

; <label>:346                                     ; preds = %337
  %347 = load i32, i32* %14, align 4
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %353, label %349

; <label>:349                                     ; preds = %346
  %350 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %351 = load %struct.FILE_POS*, %struct.FILE_POS** %15, align 8
  %352 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %350, %struct.FILE_POS* %351) #5
  br label %353

; <label>:353                                     ; preds = %349, %346
  br label %Assert.exit3

Assert.exit3:                                     ; preds = %353, %337
  %354 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %354)
  %355 = bitcast %struct.FILE_POS** %15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %355)
  br label %356

; <label>:356                                     ; preds = %Assert.exit3, %333
  %357 = load i32, i32* @g_PDF_debug, align 4
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %359, label %363

; <label>:359                                     ; preds = %356
  %360 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %361 = load i32, i32* @g_page_count, align 4
  %362 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 %361)
  br label %363

; <label>:363                                     ; preds = %359, %356
  %364 = load i32, i32* @g_page_object_num, align 4
  %365 = load i32, i32* %block_pos, align 4
  %366 = zext i32 %365 to i64
  %367 = load %struct.t_page_block*, %struct.t_page_block** %the_block, align 8
  %368 = getelementptr inbounds %struct.t_page_block, %struct.t_page_block* %367, i32 0, i32 1
  %369 = getelementptr inbounds [64 x i32], [64 x i32]* %368, i32 0, i64 %366
  store i32 %364, i32* %369, align 4
  %370 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %371 = load i32, i32* @g_page_object_num, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %370, i32 %371)
  %372 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %373 = call i32 @fputs(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), %struct._IO_FILE* %372)
  %374 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %375 = load i32, i32* @g_doc_h_bound, align 4
  %376 = load i32, i32* @g_doc_v_bound, align 4
  %377 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %374, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 %375, i32 %376)
  %378 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %379 = call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), %struct._IO_FILE* %378)
  %380 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %381 = load i32, i32* @g_pages_root, align 4
  %382 = bitcast %struct._IO_FILE** %12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %382)
  %383 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %383)
  store %struct._IO_FILE* %380, %struct._IO_FILE** %12, align 8
  store i32 %381, i32* %13, align 4
  %384 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %385 = load i32, i32* %13, align 4
  %386 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %384, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %385) #5
  %387 = bitcast %struct._IO_FILE** %12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %387)
  %388 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %388)
  %389 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %390 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), %struct._IO_FILE* %389)
  %391 = load i32, i32* @g_page_contents_obj_num, align 4
  %392 = icmp ne i32 %391, 0
  br i1 %392, label %393, label %407

; <label>:393                                     ; preds = %363
  %394 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %395 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), %struct._IO_FILE* %394)
  %396 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %397 = load i32, i32* @g_page_contents_obj_num, align 4
  %398 = bitcast %struct._IO_FILE** %10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %398)
  %399 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %399)
  store %struct._IO_FILE* %396, %struct._IO_FILE** %10, align 8
  store i32 %397, i32* %11, align 4
  %400 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %401 = load i32, i32* %11, align 4
  %402 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %400, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %401) #5
  %403 = bitcast %struct._IO_FILE** %10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %403)
  %404 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %404)
  %405 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %406 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), %struct._IO_FILE* %405)
  br label %407

; <label>:407                                     ; preds = %393, %363
  %408 = load i32, i32* @g_page_uses_fonts, align 4
  %409 = icmp ne i32 %408, 0
  br i1 %409, label %416, label %410

; <label>:410                                     ; preds = %407
  %411 = load i32, i32* @g_page_has_text, align 4
  %412 = icmp ne i32 %411, 0
  br i1 %412, label %416, label %413

; <label>:413                                     ; preds = %410
  %414 = load i32, i32* @g_page_has_graphics, align 4
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %416, label %419

; <label>:416                                     ; preds = %413, %410, %407
  %417 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %418 = call i32 @fputs(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), %struct._IO_FILE* %417)
  br label %419

; <label>:419                                     ; preds = %416, %413
  %420 = load i32, i32* @g_page_uses_fonts, align 4
  %421 = icmp ne i32 %420, 0
  br i1 %421, label %422, label %484

; <label>:422                                     ; preds = %419
  %423 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_list_entry* %423, %struct.t_font_list_entry** %entry1, align 8
  %424 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %425 = call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), %struct._IO_FILE* %424)
  br label %426

; <label>:426                                     ; preds = %477, %422
  %427 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry1, align 8
  %428 = icmp ne %struct.t_font_list_entry* %427, null
  br i1 %428, label %429, label %481

; <label>:429                                     ; preds = %426
  %430 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry1, align 8
  %431 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %430, i32 0, i32 7
  %432 = load i32, i32* %431, align 4
  %433 = icmp ne i32 %432, 0
  br i1 %433, label %434, label %477

; <label>:434                                     ; preds = %429
  %435 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %436 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry1, align 8
  %437 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %436, i32 0, i32 1
  %438 = load i8*, i8** %437, align 8
  %439 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %435, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i8* %438)
  %440 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %441 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry1, align 8
  %442 = bitcast %struct._IO_FILE** %8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %442)
  %443 = bitcast %struct.t_font_list_entry** %9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %443)
  store %struct._IO_FILE* %440, %struct._IO_FILE** %8, align 8
  store %struct.t_font_list_entry* %441, %struct.t_font_list_entry** %9, align 8
  %444 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %9, align 8
  %445 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %444, i32 0, i32 5
  %446 = load i32, i32* %445, align 4
  %447 = icmp ne i32 %446, 0
  %448 = zext i1 %447 to i32
  %449 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %450 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %450) #5
  %451 = bitcast %struct.FILE_POS** %7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %451) #5
  store i32 %448, i32* %6, align 4
  store %struct.FILE_POS* %449, %struct.FILE_POS** %7, align 8
  %452 = load i32, i32* %6, align 4
  %453 = icmp ne i32 %452, 0
  br i1 %453, label %PDFFont_WriteObjectRef.exit, label %454

; <label>:454                                     ; preds = %434
  %455 = load i32, i32* %6, align 4
  %456 = icmp ne i32 %455, 0
  br i1 %456, label %461, label %457

; <label>:457                                     ; preds = %454
  %458 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %459 = load %struct.FILE_POS*, %struct.FILE_POS** %7, align 8
  %460 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %458, %struct.FILE_POS* %459) #5
  br label %461

; <label>:461                                     ; preds = %457, %454
  br label %PDFFont_WriteObjectRef.exit

PDFFont_WriteObjectRef.exit:                      ; preds = %461, %434
  %462 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %462) #5
  %463 = bitcast %struct.FILE_POS** %7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %463) #5
  %464 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %465 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %9, align 8
  %466 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %465, i32 0, i32 5
  %467 = load i32, i32* %466, align 4
  %468 = bitcast %struct._IO_FILE** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %468) #5
  %469 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %469) #5
  store %struct._IO_FILE* %464, %struct._IO_FILE** %4, align 8
  store i32 %467, i32* %5, align 4
  %470 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %471 = load i32, i32* %5, align 4
  %472 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %470, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %471) #5
  %473 = bitcast %struct._IO_FILE** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %473) #5
  %474 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %474) #5
  %475 = bitcast %struct._IO_FILE** %8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %475)
  %476 = bitcast %struct.t_font_list_entry** %9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %476)
  br label %477

; <label>:477                                     ; preds = %PDFFont_WriteObjectRef.exit, %429
  %478 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %entry1, align 8
  %479 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %478, i32 0, i32 0
  %480 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %479, align 8
  store %struct.t_font_list_entry* %480, %struct.t_font_list_entry** %entry1, align 8
  br label %426

; <label>:481                                     ; preds = %426
  %482 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %483 = call i32 @fputs(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), %struct._IO_FILE* %482)
  br label %484

; <label>:484                                     ; preds = %481, %419
  %485 = load i32, i32* @g_page_has_text, align 4
  %486 = icmp ne i32 %485, 0
  br i1 %486, label %490, label %487

; <label>:487                                     ; preds = %484
  %488 = load i32, i32* @g_page_has_graphics, align 4
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %490, label %501

; <label>:490                                     ; preds = %487, %484
  %491 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %492 = call i32 @fputs(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), %struct._IO_FILE* %491)
  %493 = load i32, i32* @g_page_has_text, align 4
  %494 = icmp ne i32 %493, 0
  br i1 %494, label %495, label %498

; <label>:495                                     ; preds = %490
  %496 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %497 = call i32 @fputs(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0), %struct._IO_FILE* %496)
  br label %498

; <label>:498                                     ; preds = %495, %490
  %499 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %500 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), %struct._IO_FILE* %499)
  br label %501

; <label>:501                                     ; preds = %498, %487
  %502 = load i32, i32* @g_page_uses_fonts, align 4
  %503 = icmp ne i32 %502, 0
  br i1 %503, label %510, label %504

; <label>:504                                     ; preds = %501
  %505 = load i32, i32* @g_page_has_text, align 4
  %506 = icmp ne i32 %505, 0
  br i1 %506, label %510, label %507

; <label>:507                                     ; preds = %504
  %508 = load i32, i32* @g_page_has_graphics, align 4
  %509 = icmp ne i32 %508, 0
  br i1 %509, label %510, label %513

; <label>:510                                     ; preds = %507, %504, %501
  %511 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %512 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), %struct._IO_FILE* %511)
  br label %513

; <label>:513                                     ; preds = %510, %507
  %514 = load i32, i32* %hasAnnot, align 4
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %607

; <label>:516                                     ; preds = %513
  %517 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  store %struct.t_source_annot_entry* %517, %struct.t_source_annot_entry** %entry2, align 8
  store %struct.t_source_annot_entry* null, %struct.t_source_annot_entry** %previous_entry, align 8
  %518 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %519 = call i32 @fputs(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), %struct._IO_FILE* %518)
  br label %520

; <label>:520                                     ; preds = %603, %516
  %521 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %522 = icmp ne %struct.t_source_annot_entry* %521, null
  br i1 %522, label %523, label %604

; <label>:523                                     ; preds = %520
  %524 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %525 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %524, i32 0, i32 9
  %526 = load i32, i32* %525, align 4
  %527 = load i32, i32* @g_page_object_num, align 4
  %528 = icmp eq i32 %526, %527
  br i1 %528, label %529, label %598

; <label>:529                                     ; preds = %523
  %530 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %531 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), %struct._IO_FILE* %530)
  %532 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %533 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %534 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %533, i32 0, i32 8
  %535 = load i32, i32* %534, align 4
  %536 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %536)
  %537 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %537)
  store %struct._IO_FILE* %532, %struct._IO_FILE** %2, align 8
  store i32 %535, i32* %3, align 4
  %538 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %539 = load i32, i32* %3, align 4
  %540 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %538, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %539) #5
  %541 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %541)
  %542 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %542)
  %543 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %544 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %543, i32 0, i32 12
  %545 = load i32, i32* %544, align 4
  %546 = icmp ne i32 %545, 0
  br i1 %546, label %547, label %592

; <label>:547                                     ; preds = %529
  %548 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %549 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %548, i32 0, i32 0
  %550 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %549, align 8
  store %struct.t_source_annot_entry* %550, %struct.t_source_annot_entry** %next_entry, align 8
  %551 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  %552 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %553 = icmp eq %struct.t_source_annot_entry* %551, %552
  br i1 %553, label %554, label %556

; <label>:554                                     ; preds = %547
  %555 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %next_entry, align 8
  store %struct.t_source_annot_entry* %555, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  br label %556

; <label>:556                                     ; preds = %554, %547
  %557 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %previous_entry, align 8
  %558 = icmp ne %struct.t_source_annot_entry* %557, null
  br i1 %558, label %559, label %563

; <label>:559                                     ; preds = %556
  %560 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %next_entry, align 8
  %561 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %previous_entry, align 8
  %562 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %561, i32 0, i32 0
  store %struct.t_source_annot_entry* %560, %struct.t_source_annot_entry** %562, align 8
  br label %563

; <label>:563                                     ; preds = %559, %556
  %564 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %565 = bitcast %struct.t_source_annot_entry** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %565)
  %566 = bitcast %struct.t_source_annot_entry** %next_entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %566)
  store %struct.t_source_annot_entry* %564, %struct.t_source_annot_entry** %1, align 8
  %567 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %568 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %567, i32 0, i32 0
  %569 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %568, align 8
  store %struct.t_source_annot_entry* %569, %struct.t_source_annot_entry** %next_entry.i, align 8
  %570 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %571 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %570, i32 0, i32 2
  %572 = load i8*, i8** %571, align 8
  %573 = icmp ne i8* %572, null
  br i1 %573, label %574, label %578

; <label>:574                                     ; preds = %563
  %575 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %576 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %575, i32 0, i32 2
  %577 = load i8*, i8** %576, align 8
  call void @free(i8* %577) #5
  br label %578

; <label>:578                                     ; preds = %574, %563
  %579 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %580 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %579, i32 0, i32 3
  %581 = load i8*, i8** %580, align 8
  %582 = icmp ne i8* %581, null
  br i1 %582, label %583, label %PDFSourceAnnot_Dispose.exit

; <label>:583                                     ; preds = %578
  %584 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %585 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %584, i32 0, i32 3
  %586 = load i8*, i8** %585, align 8
  call void @free(i8* %586) #5
  br label %PDFSourceAnnot_Dispose.exit

PDFSourceAnnot_Dispose.exit:                      ; preds = %583, %578
  %587 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %588 = bitcast %struct.t_source_annot_entry* %587 to i8*
  call void @free(i8* %588) #5
  %589 = bitcast %struct.t_source_annot_entry** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %589)
  %590 = bitcast %struct.t_source_annot_entry** %next_entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %590)
  %591 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %next_entry, align 8
  store %struct.t_source_annot_entry* %591, %struct.t_source_annot_entry** %entry2, align 8
  br label %597

; <label>:592                                     ; preds = %529
  %593 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  store %struct.t_source_annot_entry* %593, %struct.t_source_annot_entry** %previous_entry, align 8
  %594 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %595 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %594, i32 0, i32 0
  %596 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %595, align 8
  store %struct.t_source_annot_entry* %596, %struct.t_source_annot_entry** %entry2, align 8
  br label %597

; <label>:597                                     ; preds = %592, %PDFSourceAnnot_Dispose.exit
  br label %603

; <label>:598                                     ; preds = %523
  %599 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  store %struct.t_source_annot_entry* %599, %struct.t_source_annot_entry** %previous_entry, align 8
  %600 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry2, align 8
  %601 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %600, i32 0, i32 0
  %602 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %601, align 8
  store %struct.t_source_annot_entry* %602, %struct.t_source_annot_entry** %entry2, align 8
  br label %603

; <label>:603                                     ; preds = %598, %597
  br label %520

; <label>:604                                     ; preds = %520
  %605 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %606 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), %struct._IO_FILE* %605)
  br label %607

; <label>:607                                     ; preds = %604, %513
  %608 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %609 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._IO_FILE* %608)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PDFObject_WriteObj(%struct._IO_FILE* %in_fp, i32 %in_object_number) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.FILE_POS*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.FILE_POS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.FILE_POS*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.FILE_POS*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %wanted_block_num.i = alloca i32, align 4
  %block_pos.i = alloca i32, align 4
  %the_block.i = alloca %struct.t_offset_block*, align 8
  %11 = alloca %struct._IO_FILE*, align 8
  %12 = alloca i32, align 4
  %block_pos = alloca i32, align 4
  %block = alloca %struct.t_offset_block*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %11, align 8
  store i32 %in_object_number, i32* %12, align 4
  %13 = load i32, i32* %12, align 4
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14)
  %15 = bitcast i32** %10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15)
  %16 = bitcast i32* %wanted_block_num.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16)
  %17 = bitcast i32* %block_pos.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17)
  %18 = bitcast %struct.t_offset_block** %the_block.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18)
  store i32 %13, i32* %9, align 4
  store i32* %block_pos, i32** %10, align 8
  %19 = load i32, i32* %9, align 4
  %20 = sub i32 %19, 1
  %21 = udiv i32 %20, 256
  store i32 %21, i32* %wanted_block_num.i, align 4
  %22 = load i32, i32* %9, align 4
  %23 = sub i32 %22, 1
  %24 = urem i32 %23, 256
  store i32 %24, i32* %block_pos.i, align 4
  %25 = load %struct.t_offset_block*, %struct.t_offset_block** @g_obj_offset_list, align 8
  store %struct.t_offset_block* %25, %struct.t_offset_block** %the_block.i, align 8
  %26 = load i32, i32* %9, align 4
  %27 = icmp ugt i32 %26, 0
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %0
  %29 = load i32, i32* %9, align 4
  %30 = load i32, i32* @g_next_objnum, align 4
  %31 = icmp ult i32 %29, %30
  br label %32

; <label>:32                                      ; preds = %28, %0
  %33 = phi i1 [ false, %0 ], [ %31, %28 ]
  %34 = zext i1 %33 to i32
  %35 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %36 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %36) #5
  %37 = bitcast %struct.FILE_POS** %8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %37) #5
  store i32 %34, i32* %7, align 4
  store %struct.FILE_POS* %35, %struct.FILE_POS** %8, align 8
  %38 = load i32, i32* %7, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %Assert.exit.i, label %40

; <label>:40                                      ; preds = %32
  %41 = load i32, i32* %7, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %47, label %43

; <label>:43                                      ; preds = %40
  %44 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %45 = load %struct.FILE_POS*, %struct.FILE_POS** %8, align 8
  %46 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %44, %struct.FILE_POS* %45) #5
  br label %47

; <label>:47                                      ; preds = %43, %40
  br label %Assert.exit.i

Assert.exit.i:                                    ; preds = %47, %32
  %48 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #5
  %49 = bitcast %struct.FILE_POS** %8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %49) #5
  br label %50

; <label>:50                                      ; preds = %Assert.exit1.i, %Assert.exit.i
  %51 = load i32, i32* %wanted_block_num.i, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %77

; <label>:53                                      ; preds = %50
  %54 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i, align 8
  %55 = icmp ne %struct.t_offset_block* %54, null
  %56 = zext i1 %55 to i32
  %57 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %58 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %58) #5
  %59 = bitcast %struct.FILE_POS** %6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %59) #5
  store i32 %56, i32* %5, align 4
  store %struct.FILE_POS* %57, %struct.FILE_POS** %6, align 8
  %60 = load i32, i32* %5, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %Assert.exit1.i, label %62

; <label>:62                                      ; preds = %53
  %63 = load i32, i32* %5, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %69, label %65

; <label>:65                                      ; preds = %62
  %66 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %67 = load %struct.FILE_POS*, %struct.FILE_POS** %6, align 8
  %68 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %66, %struct.FILE_POS* %67) #5
  br label %69

; <label>:69                                      ; preds = %65, %62
  br label %Assert.exit1.i

Assert.exit1.i:                                   ; preds = %69, %53
  %70 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #5
  %71 = bitcast %struct.FILE_POS** %6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %71) #5
  %72 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i, align 8
  %73 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %72, i32 0, i32 0
  %74 = load %struct.t_offset_block*, %struct.t_offset_block** %73, align 8
  store %struct.t_offset_block* %74, %struct.t_offset_block** %the_block.i, align 8
  %75 = load i32, i32* %wanted_block_num.i, align 4
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %wanted_block_num.i, align 4
  br label %50

; <label>:77                                      ; preds = %50
  %78 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i, align 8
  %79 = icmp ne %struct.t_offset_block* %78, null
  %80 = zext i1 %79 to i32
  %81 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %82 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %82) #5
  %83 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %83) #5
  store i32 %80, i32* %3, align 4
  store %struct.FILE_POS* %81, %struct.FILE_POS** %4, align 8
  %84 = load i32, i32* %3, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %Assert.exit2.i, label %86

; <label>:86                                      ; preds = %77
  %87 = load i32, i32* %3, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %93, label %89

; <label>:89                                      ; preds = %86
  %90 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %91 = load %struct.FILE_POS*, %struct.FILE_POS** %4, align 8
  %92 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %90, %struct.FILE_POS* %91) #5
  br label %93

; <label>:93                                      ; preds = %89, %86
  br label %Assert.exit2.i

Assert.exit2.i:                                   ; preds = %93, %77
  %94 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %94) #5
  %95 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %95) #5
  %96 = load i32*, i32** %10, align 8
  %97 = icmp ne i32* %96, null
  br i1 %97, label %98, label %PDFObject_FindOffsetBlock.exit

; <label>:98                                      ; preds = %Assert.exit2.i
  %99 = load i32, i32* %block_pos.i, align 4
  %100 = load i32*, i32** %10, align 8
  store i32 %99, i32* %100, align 4
  br label %PDFObject_FindOffsetBlock.exit

PDFObject_FindOffsetBlock.exit:                   ; preds = %98, %Assert.exit2.i
  %101 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i, align 8
  %102 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102)
  %103 = bitcast i32** %10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %103)
  %104 = bitcast i32* %wanted_block_num.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %104)
  %105 = bitcast i32* %block_pos.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %105)
  %106 = bitcast %struct.t_offset_block** %the_block.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %106)
  store %struct.t_offset_block* %101, %struct.t_offset_block** %block, align 8
  %107 = load i32, i32* %block_pos, align 4
  %108 = zext i32 %107 to i64
  %109 = load %struct.t_offset_block*, %struct.t_offset_block** %block, align 8
  %110 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %109, i32 0, i32 1
  %111 = getelementptr inbounds [256 x i32], [256 x i32]* %110, i32 0, i64 %108
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  %114 = zext i1 %113 to i32
  %115 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %116 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %116)
  %117 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %117)
  store i32 %114, i32* %1, align 4
  store %struct.FILE_POS* %115, %struct.FILE_POS** %2, align 8
  %118 = load i32, i32* %1, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %Assert.exit, label %120

; <label>:120                                     ; preds = %PDFObject_FindOffsetBlock.exit
  %121 = load i32, i32* %1, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %127, label %123

; <label>:123                                     ; preds = %120
  %124 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %125 = load %struct.FILE_POS*, %struct.FILE_POS** %2, align 8
  %126 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %124, %struct.FILE_POS* %125) #5
  br label %127

; <label>:127                                     ; preds = %123, %120
  br label %Assert.exit

Assert.exit:                                      ; preds = %127, %PDFObject_FindOffsetBlock.exit
  %128 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %128)
  %129 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129)
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %131 = call i64 @ftell(%struct._IO_FILE* %130)
  %132 = trunc i64 %131 to i32
  %133 = load i32, i32* %block_pos, align 4
  %134 = zext i32 %133 to i64
  %135 = load %struct.t_offset_block*, %struct.t_offset_block** %block, align 8
  %136 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %135, i32 0, i32 1
  %137 = getelementptr inbounds [256 x i32], [256 x i32]* %136, i32 0, i64 %134
  store i32 %132, i32* %137, align 4
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %139 = load i32, i32* %12, align 4
  %140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %138, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.135, i32 0, i32 0), i32 %139)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @PDFSourceAnnot_Write(%struct._IO_FILE* %in_fp, %struct.t_source_annot_entry* %in_entry) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.FILE_POS*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca %struct.t_source_annot_entry*, align 8
  %target = alloca %struct.t_target_annot_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %5, align 8
  store %struct.t_source_annot_entry* %in_entry, %struct.t_source_annot_entry** %6, align 8
  %7 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %8 = icmp ne %struct.t_source_annot_entry* %7, null
  %9 = zext i1 %8 to i32
  %10 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11)
  %12 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12)
  store i32 %9, i32* %3, align 4
  store %struct.FILE_POS* %10, %struct.FILE_POS** %4, align 8
  %13 = load i32, i32* %3, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %Assert.exit, label %15

; <label>:15                                      ; preds = %0
  %16 = load i32, i32* %3, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %22, label %18

; <label>:18                                      ; preds = %15
  %19 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %20 = load %struct.FILE_POS*, %struct.FILE_POS** %4, align 8
  %21 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %19, %struct.FILE_POS* %20) #5
  br label %22

; <label>:22                                      ; preds = %18, %15
  br label %Assert.exit

Assert.exit:                                      ; preds = %22, %0
  %23 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23)
  %24 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24)
  %25 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %26 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %25, i32 0, i32 1
  %27 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %26, align 8
  store %struct.t_target_annot_entry* %27, %struct.t_target_annot_entry** %target, align 8
  %28 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %29 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %28, i32 0, i32 11
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

; <label>:32                                      ; preds = %Assert.exit
  %33 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %34 = icmp eq %struct.t_target_annot_entry* %33, null
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %32
  br label %166

; <label>:36                                      ; preds = %32, %Assert.exit
  %37 = load i32, i32* @g_PDF_debug, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %50

; <label>:39                                      ; preds = %36
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %41 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %42 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %41, i32 0, i32 9
  %43 = load i32, i32* %42, align 4
  %44 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %45 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %44, i32 0, i32 1
  %46 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %45, align 8
  %47 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %46, i32 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.155, i32 0, i32 0), i32 %43, i8* %48)
  br label %50

; <label>:50                                      ; preds = %39, %36
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %52 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %53 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %52, i32 0, i32 8
  %54 = load i32, i32* %53, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %51, i32 %54)
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %56 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %57 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %56, i32 0, i32 4
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %60 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %59, i32 0, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %63 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %62, i32 0, i32 6
  %64 = load i32, i32* %63, align 4
  %65 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %66 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %65, i32 0, i32 7
  %67 = load i32, i32* %66, align 4
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.156, i32 0, i32 0), i32 %58, i32 %61, i32 %64, i32 %67)
  %69 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %70 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %69, i32 0, i32 11
  %71 = load i32, i32* %70, align 4
  switch i32 %71, label %161 [
    i32 0, label %72
    i32 1, label %145
    i32 2, label %154
    i32 3, label %160
    i32 4, label %160
    i32 5, label %160
  ]

; <label>:72                                      ; preds = %50
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.157, i32 0, i32 0))
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %76 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %77 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %76, i32 0, i32 1
  %78 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %77, align 8
  %79 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %78, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %81)
  %82 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %82)
  store %struct._IO_FILE* %75, %struct._IO_FILE** %1, align 8
  store i32 %80, i32* %2, align 4
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %84 = load i32, i32* %2, align 4
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %84) #5
  %86 = bitcast %struct._IO_FILE** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86)
  %87 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87)
  %88 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %89 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %88, i32 0, i32 10
  %90 = load i32, i32* %89, align 4
  switch i32 %90, label %139 [
    i32 0, label %91
    i32 1, label %94
    i32 2, label %97
    i32 3, label %103
    i32 4, label %109
    i32 5, label %124
    i32 6, label %127
    i32 7, label %133
  ]

; <label>:91                                      ; preds = %72
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.158, i32 0, i32 0))
  br label %94

; <label>:94                                      ; preds = %91, %72
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0))
  br label %142

; <label>:97                                      ; preds = %72
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %99 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %100 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %99, i32 0, i32 6
  %101 = load i32, i32* %100, align 4
  %102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.160, i32 0, i32 0), i32 %101)
  br label %142

; <label>:103                                     ; preds = %72
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %105 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %106 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %105, i32 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161, i32 0, i32 0), i32 %107)
  br label %142

; <label>:109                                     ; preds = %72
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %111 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %112 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %111, i32 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %115 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %114, i32 0, i32 4
  %116 = load i32, i32* %115, align 4
  %117 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %118 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %117, i32 0, i32 5
  %119 = load i32, i32* %118, align 4
  %120 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %121 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %120, i32 0, i32 6
  %122 = load i32, i32* %121, align 4
  %123 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.162, i32 0, i32 0), i32 %113, i32 %116, i32 %119, i32 %122)
  br label %142

; <label>:124                                     ; preds = %72
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.163, i32 0, i32 0))
  br label %142

; <label>:127                                     ; preds = %72
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %129 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %130 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %129, i32 0, i32 6
  %131 = load i32, i32* %130, align 4
  %132 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.164, i32 0, i32 0), i32 %131)
  br label %142

; <label>:133                                     ; preds = %72
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %135 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %136 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %135, i32 0, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %134, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.165, i32 0, i32 0), i32 %137)
  br label %142

; <label>:139                                     ; preds = %72
  %140 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %141 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 18, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.166, i32 0, i32 0), i32 1, %struct.FILE_POS* %140)
  br label %142

; <label>:142                                     ; preds = %139, %133, %127, %124, %109, %103, %97, %94
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0))
  br label %161

; <label>:145                                     ; preds = %50
  %146 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %147 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %148 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %147, i32 0, i32 2
  %149 = load i8*, i8** %148, align 8
  %150 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %151 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %150, i32 0, i32 3
  %152 = load i8*, i8** %151, align 8
  %153 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %146, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.167, i32 0, i32 0), i8* %149, i8* %152)
  br label %161

; <label>:154                                     ; preds = %50
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %156 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %157 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %156, i32 0, i32 2
  %158 = load i8*, i8** %157, align 8
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %155, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.168, i32 0, i32 0), i8* %158)
  br label %161

; <label>:160                                     ; preds = %50, %50, %50
  br label %161

; <label>:161                                     ; preds = %160, %154, %145, %142, %50
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %163 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %162, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0))
  %164 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %6, align 8
  %165 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %164, i32 0, i32 12
  store i32 1, i32* %165, align 4
  br label %166

; <label>:166                                     ; preds = %161, %35
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFFile_Init(%struct._IO_FILE* %in_fp, i32 %in_h_bound, i32 %in_v_bound, i32 %in_IN, i32 %in_CM, i32 %in_PT, i32 %in_EM) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %1, align 8
  store i32 %in_h_bound, i32* %2, align 4
  store i32 %in_v_bound, i32* %3, align 4
  store i32 %in_IN, i32* %4, align 4
  store i32 %in_CM, i32* %5, align 4
  store i32 %in_PT, i32* %6, align 4
  store i32 %in_EM, i32* %7, align 4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %9 = call i32 @fputs(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), %struct._IO_FILE* %8)
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8
  %11 = call i32 @fputs(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), %struct._IO_FILE* %10)
  store i32 0, i32* @g_PDF_debug, align 4
  store i32 1, i32* @g_next_objnum, align 4
  store %struct.t_offset_block* null, %struct.t_offset_block** @g_obj_offset_list, align 8
  store %struct.t_offset_block* null, %struct.t_offset_block** @g_cur_obj_offset_block, align 8
  store %struct.t_font_list_entry* null, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_encoding_entry* null, %struct.t_font_encoding_entry** @g_font_encoding_list, align 8
  store i32 0, i32* @g_page_count, align 4
  store %struct.t_page_block* null, %struct.t_page_block** @g_page_block_list, align 8
  store %struct.t_page_block* null, %struct.t_page_block** @g_cur_page_block, align 8
  %12 = call i32 @PDFObject_New()
  store i32 %12, i32* @g_pages_root, align 4
  %13 = load i32, i32* %2, align 4
  store i32 %13, i32* @g_doc_h_bound, align 4
  %14 = load i32, i32* %3, align 4
  store i32 %14, i32* @g_doc_v_bound, align 4
  store i8* null, i8** @g_doc_author, align 8
  store i8* null, i8** @g_doc_title, align 8
  store i8* null, i8** @g_doc_subject, align 8
  store i8* null, i8** @g_doc_keywords, align 8
  store %struct.t_target_annot_entry* null, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  store i32 0, i32* @g_has_exported_targets, align 4
  store %struct.t_source_annot_entry* null, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  %15 = load i32, i32* %4, align 4
  store i32 %15, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 0), align 4
  %16 = load i32, i32* %5, align 4
  store i32 %16, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 1), align 4
  %17 = load i32, i32* %6, align 4
  store i32 %17, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 2), align 4
  %18 = load i32, i32* %7, align 4
  store i32 %18, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @g_units, i32 0, i64 3), align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @PDFFile_Cleanup(%struct._IO_FILE* %in_fp) #0 {
  %1 = alloca %struct.t_source_annot_entry*, align 8
  %next_entry.i = alloca %struct.t_source_annot_entry*, align 8
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.FILE_POS*, align 8
  %8 = alloca %struct._IO_FILE*, align 8
  %i.i.4 = alloca i32, align 4
  %xref_start.i = alloca i32, align 4
  %the_block.i.5 = alloca %struct.t_offset_block*, align 8
  %block_pos.i.6 = alloca i32, align 4
  %str.i = alloca [512 x i8], align 16
  %9 = alloca %struct._IO_FILE*, align 8
  %next_ref.i.3 = alloca i32, align 4
  %10 = alloca %struct._IO_FILE*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct._IO_FILE*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct._IO_FILE*, align 8
  %next_ref.i.2 = alloca i32, align 4
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct._IO_FILE*, align 8
  %next_ref.i = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.FILE_POS*, align 8
  %20 = alloca %struct._IO_FILE*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct._IO_FILE*, align 8
  %i.i = alloca i32, align 4
  %the_block.i = alloca %struct.t_page_block*, align 8
  %block_pos.i = alloca i32, align 4
  %23 = alloca i8*, align 8
  %entry.i = alloca %struct.t_target_annot_entry*, align 8
  %24 = alloca i32, align 4
  %25 = alloca %struct.FILE_POS*, align 8
  %26 = alloca %struct._IO_FILE*, align 8
  %xref_start = alloca i32, align 4
  %catalog_obj_num = alloca i32, align 4
  %info_obj_num = alloca i32, align 4
  %dests_obj_num = alloca i32, align 4
  %source = alloca %struct.t_source_annot_entry*, align 8
  %target = alloca %struct.t_target_annot_entry*, align 8
  %entry = alloca %struct.t_target_annot_entry*, align 8
  %now = alloca i64, align 8
  %date = alloca %struct.tm*, align 8
  %the_block = alloca %struct.t_offset_block*, align 8
  %the_block1 = alloca %struct.t_font_encoding_entry*, align 8
  %the_block2 = alloca %struct.t_font_list_entry*, align 8
  %the_block3 = alloca %struct.t_page_block*, align 8
  %entry4 = alloca %struct.t_source_annot_entry*, align 8
  %str = alloca [512 x i8], align 16
  %entry5 = alloca %struct.t_target_annot_entry*, align 8
  store %struct._IO_FILE* %in_fp, %struct._IO_FILE** %26, align 8
  %27 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  store %struct.t_source_annot_entry* %27, %struct.t_source_annot_entry** %source, align 8
  br label %28

; <label>:28                                      ; preds = %84, %0
  %29 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %30 = icmp ne %struct.t_source_annot_entry* %29, null
  br i1 %30, label %31, label %88

; <label>:31                                      ; preds = %28
  %32 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %33 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %32, i32 0, i32 1
  %34 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %33, align 8
  %35 = icmp eq %struct.t_target_annot_entry* %34, null
  %36 = zext i1 %35 to i32
  %37 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %38 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %38)
  %39 = bitcast %struct.FILE_POS** %25 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %39)
  store i32 %36, i32* %24, align 4
  store %struct.FILE_POS* %37, %struct.FILE_POS** %25, align 8
  %40 = load i32, i32* %24, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %Assert.exit, label %42

; <label>:42                                      ; preds = %31
  %43 = load i32, i32* %24, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %49, label %45

; <label>:45                                      ; preds = %42
  %46 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %47 = load %struct.FILE_POS*, %struct.FILE_POS** %25, align 8
  %48 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %46, %struct.FILE_POS* %47) #5
  br label %49

; <label>:49                                      ; preds = %45, %42
  br label %Assert.exit

Assert.exit:                                      ; preds = %49, %31
  %50 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50)
  %51 = bitcast %struct.FILE_POS** %25 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51)
  %52 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %53 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %52, i32 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55)
  %56 = bitcast %struct.t_target_annot_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %56)
  store i8* %54, i8** %23, align 8
  %57 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  store %struct.t_target_annot_entry* %57, %struct.t_target_annot_entry** %entry.i, align 8
  br label %58

; <label>:58                                      ; preds = %69, %Assert.exit
  %59 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %60 = icmp ne %struct.t_target_annot_entry* %59, null
  br i1 %60, label %61, label %PDFTargetAnnot_Find.exit

; <label>:61                                      ; preds = %58
  %62 = load i8*, i8** %23, align 8
  %63 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %64 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %63, i32 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @strcmp(i8* %62, i8* %65) #6
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

; <label>:68                                      ; preds = %61
  br label %PDFTargetAnnot_Find.exit

; <label>:69                                      ; preds = %61
  %70 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %71 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %70, i32 0, i32 0
  %72 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %71, align 8
  store %struct.t_target_annot_entry* %72, %struct.t_target_annot_entry** %entry.i, align 8
  br label %58

PDFTargetAnnot_Find.exit:                         ; preds = %68, %58
  %73 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %74 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %74)
  %75 = bitcast %struct.t_target_annot_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %75)
  store %struct.t_target_annot_entry* %73, %struct.t_target_annot_entry** %target, align 8
  %76 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %77 = icmp ne %struct.t_target_annot_entry* %76, null
  br i1 %77, label %78, label %84

; <label>:78                                      ; preds = %PDFTargetAnnot_Find.exit
  %79 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %80 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %81 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %80, i32 0, i32 1
  store %struct.t_target_annot_entry* %79, %struct.t_target_annot_entry** %81, align 8
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %83 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  call void @PDFSourceAnnot_Write(%struct._IO_FILE* %82, %struct.t_source_annot_entry* %83)
  br label %84

; <label>:84                                      ; preds = %78, %PDFTargetAnnot_Find.exit
  %85 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %source, align 8
  %86 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %85, i32 0, i32 0
  %87 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %86, align 8
  store %struct.t_source_annot_entry* %87, %struct.t_source_annot_entry** %source, align 8
  br label %28

; <label>:88                                      ; preds = %28
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %90 = bitcast %struct._IO_FILE** %22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %90)
  %91 = bitcast i32* %i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91)
  %92 = bitcast %struct.t_page_block** %the_block.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %92)
  %93 = bitcast i32* %block_pos.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %93)
  store %struct._IO_FILE* %89, %struct._IO_FILE** %22, align 8
  %94 = load %struct.t_page_block*, %struct.t_page_block** @g_page_block_list, align 8
  store %struct.t_page_block* %94, %struct.t_page_block** %the_block.i, align 8
  %95 = load i32, i32* @g_PDF_debug, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %100

; <label>:97                                      ; preds = %88
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.170, i32 0, i32 0)) #5
  br label %100

; <label>:100                                     ; preds = %97, %88
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %102 = load i32, i32* @g_pages_root, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %101, i32 %102) #5
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %104 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), %struct._IO_FILE* %103) #5
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %106 = call i32 @fputs(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.171, i32 0, i32 0), %struct._IO_FILE* %105) #5
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %108 = call i32 @fputs(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.172, i32 0, i32 0), %struct._IO_FILE* %107) #5
  store i32 0, i32* %i.i, align 4
  br label %109

; <label>:109                                     ; preds = %136, %100
  %110 = load i32, i32* %i.i, align 4
  %111 = load i32, i32* @g_page_count, align 4
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %113, label %PDFFile_WritePagesObject.exit

; <label>:113                                     ; preds = %109
  %114 = load i32, i32* %i.i, align 4
  %115 = urem i32 %114, 64
  store i32 %115, i32* %block_pos.i, align 4
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %117 = load i32, i32* %block_pos.i, align 4
  %118 = sext i32 %117 to i64
  %119 = load %struct.t_page_block*, %struct.t_page_block** %the_block.i, align 8
  %120 = getelementptr inbounds %struct.t_page_block, %struct.t_page_block* %119, i32 0, i32 1
  %121 = getelementptr inbounds [64 x i32], [64 x i32]* %120, i32 0, i64 %118
  %122 = load i32, i32* %121, align 4
  %123 = bitcast %struct._IO_FILE** %20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %123) #5
  %124 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %124) #5
  store %struct._IO_FILE* %116, %struct._IO_FILE** %20, align 8
  store i32 %122, i32* %21, align 4
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %20, align 8
  %126 = load i32, i32* %21, align 4
  %127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %126) #5
  %128 = bitcast %struct._IO_FILE** %20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %128) #5
  %129 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %129) #5
  %130 = load i32, i32* %block_pos.i, align 4
  %131 = icmp eq i32 %130, 63
  br i1 %131, label %132, label %136

; <label>:132                                     ; preds = %113
  %133 = load %struct.t_page_block*, %struct.t_page_block** %the_block.i, align 8
  %134 = getelementptr inbounds %struct.t_page_block, %struct.t_page_block* %133, i32 0, i32 0
  %135 = load %struct.t_page_block*, %struct.t_page_block** %134, align 8
  store %struct.t_page_block* %135, %struct.t_page_block** %the_block.i, align 8
  br label %136

; <label>:136                                     ; preds = %132, %113
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %138 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), %struct._IO_FILE* %137) #5
  %139 = load i32, i32* %i.i, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %i.i, align 4
  br label %109

PDFFile_WritePagesObject.exit:                    ; preds = %109
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %142 = load i32, i32* @g_page_count, align 4
  %143 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.173, i32 0, i32 0), i32 %142) #5
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %145 = load i32, i32* @g_doc_h_bound, align 4
  %146 = load i32, i32* @g_doc_v_bound, align 4
  %147 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %144, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.174, i32 0, i32 0), i32 %145, i32 %146) #5
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** %22, align 8
  %149 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._IO_FILE* %148) #5
  %150 = bitcast %struct._IO_FILE** %22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %150)
  %151 = bitcast i32* %i.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %151)
  %152 = bitcast %struct.t_page_block** %the_block.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %152)
  %153 = bitcast i32* %block_pos.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153)
  %154 = load i32, i32* @g_has_exported_targets, align 4
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %227

; <label>:156                                     ; preds = %PDFFile_WritePagesObject.exit
  %157 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  store %struct.t_target_annot_entry* %157, %struct.t_target_annot_entry** %entry, align 8
  %158 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry, align 8
  %159 = icmp ne %struct.t_target_annot_entry* %158, null
  %160 = zext i1 %159 to i32
  %161 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %162 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %162)
  %163 = bitcast %struct.FILE_POS** %19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %163)
  store i32 %160, i32* %18, align 4
  store %struct.FILE_POS* %161, %struct.FILE_POS** %19, align 8
  %164 = load i32, i32* %18, align 4
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %Assert.exit1, label %166

; <label>:166                                     ; preds = %156
  %167 = load i32, i32* %18, align 4
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %173, label %169

; <label>:169                                     ; preds = %166
  %170 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %171 = load %struct.FILE_POS*, %struct.FILE_POS** %19, align 8
  %172 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %170, %struct.FILE_POS* %171) #5
  br label %173

; <label>:173                                     ; preds = %169, %166
  br label %Assert.exit1

Assert.exit1:                                     ; preds = %173, %156
  %174 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %174)
  %175 = bitcast %struct.FILE_POS** %19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %175)
  %176 = load i32, i32* @g_PDF_debug, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %181

; <label>:178                                     ; preds = %Assert.exit1
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %180 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.44, i32 0, i32 0))
  br label %181

; <label>:181                                     ; preds = %178, %Assert.exit1
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %183 = bitcast %struct._IO_FILE** %17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %183)
  %184 = bitcast i32* %next_ref.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %184)
  store %struct._IO_FILE* %182, %struct._IO_FILE** %17, align 8
  %185 = call i32 @PDFObject_New() #5
  store i32 %185, i32* %next_ref.i, align 4
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %17, align 8
  %187 = load i32, i32* %next_ref.i, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %186, i32 %187) #5
  %188 = load i32, i32* %next_ref.i, align 4
  %189 = bitcast %struct._IO_FILE** %17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %189)
  %190 = bitcast i32* %next_ref.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %190)
  store i32 %188, i32* %dests_obj_num, align 4
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %192 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), %struct._IO_FILE* %191)
  br label %193

; <label>:193                                     ; preds = %220, %181
  %194 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry, align 8
  %195 = icmp ne %struct.t_target_annot_entry* %194, null
  br i1 %195, label %196, label %224

; <label>:196                                     ; preds = %193
  %197 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry, align 8
  %198 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %197, i32 0, i32 7
  %199 = load i32, i32* %198, align 4
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %220

; <label>:201                                     ; preds = %196
  %202 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %203 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry, align 8
  %204 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %203, i32 0, i32 1
  %205 = load i8*, i8** %204, align 8
  %206 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %202, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i8* %205)
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %208 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry, align 8
  %209 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %208, i32 0, i32 2
  %210 = load i32, i32* %209, align 4
  %211 = bitcast %struct._IO_FILE** %15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %211)
  %212 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %212)
  store %struct._IO_FILE* %207, %struct._IO_FILE** %15, align 8
  store i32 %210, i32* %16, align 4
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %214 = load i32, i32* %16, align 4
  %215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %213, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %214) #5
  %216 = bitcast %struct._IO_FILE** %15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %216)
  %217 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %217)
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %219 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %218, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i32 0, i32 0))
  br label %220

; <label>:220                                     ; preds = %201, %196
  %221 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry, align 8
  %222 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %221, i32 0, i32 0
  %223 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %222, align 8
  store %struct.t_target_annot_entry* %223, %struct.t_target_annot_entry** %entry, align 8
  br label %193

; <label>:224                                     ; preds = %193
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %226 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._IO_FILE* %225)
  br label %227

; <label>:227                                     ; preds = %224, %PDFFile_WritePagesObject.exit
  %228 = load i32, i32* @g_PDF_debug, align 4
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %233

; <label>:230                                     ; preds = %227
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %232 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %231, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0))
  br label %233

; <label>:233                                     ; preds = %230, %227
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %235 = bitcast %struct._IO_FILE** %14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %235)
  %236 = bitcast i32* %next_ref.i.2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %236)
  store %struct._IO_FILE* %234, %struct._IO_FILE** %14, align 8
  %237 = call i32 @PDFObject_New() #5
  store i32 %237, i32* %next_ref.i.2, align 4
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %239 = load i32, i32* %next_ref.i.2, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %238, i32 %239) #5
  %240 = load i32, i32* %next_ref.i.2, align 4
  %241 = bitcast %struct._IO_FILE** %14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %241)
  %242 = bitcast i32* %next_ref.i.2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %242)
  store i32 %240, i32* %catalog_obj_num, align 4
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %244 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), %struct._IO_FILE* %243)
  %245 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %246 = call i32 @fputs(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i32 0, i32 0), %struct._IO_FILE* %245)
  %247 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %248 = call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), %struct._IO_FILE* %247)
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %250 = load i32, i32* @g_pages_root, align 4
  %251 = bitcast %struct._IO_FILE** %12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %251)
  %252 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %252)
  store %struct._IO_FILE* %249, %struct._IO_FILE** %12, align 8
  store i32 %250, i32* %13, align 4
  %253 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %254 = load i32, i32* %13, align 4
  %255 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %253, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %254) #5
  %256 = bitcast %struct._IO_FILE** %12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %256)
  %257 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %257)
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %259 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), %struct._IO_FILE* %258)
  %260 = load i32, i32* @g_has_exported_targets, align 4
  %261 = icmp ne i32 %260, 0
  br i1 %261, label %262, label %276

; <label>:262                                     ; preds = %233
  %263 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %264 = call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct._IO_FILE* %263)
  %265 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %266 = load i32, i32* %dests_obj_num, align 4
  %267 = bitcast %struct._IO_FILE** %10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %267)
  %268 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %268)
  store %struct._IO_FILE* %265, %struct._IO_FILE** %10, align 8
  store i32 %266, i32* %11, align 4
  %269 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %270 = load i32, i32* %11, align 4
  %271 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %269, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %270) #5
  %272 = bitcast %struct._IO_FILE** %10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %272)
  %273 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %273)
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %275 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), %struct._IO_FILE* %274)
  br label %276

; <label>:276                                     ; preds = %262, %233
  %277 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %278 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._IO_FILE* %277)
  %279 = load i32, i32* @g_PDF_debug, align 4
  %280 = icmp ne i32 %279, 0
  br i1 %280, label %281, label %284

; <label>:281                                     ; preds = %276
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %283 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %282, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i32 0, i32 0))
  br label %284

; <label>:284                                     ; preds = %281, %276
  %285 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %286 = bitcast %struct._IO_FILE** %9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %286)
  %287 = bitcast i32* %next_ref.i.3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %287)
  store %struct._IO_FILE* %285, %struct._IO_FILE** %9, align 8
  %288 = call i32 @PDFObject_New() #5
  store i32 %288, i32* %next_ref.i.3, align 4
  %289 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %290 = load i32, i32* %next_ref.i.3, align 4
  call void @PDFObject_WriteObj(%struct._IO_FILE* %289, i32 %290) #5
  %291 = load i32, i32* %next_ref.i.3, align 4
  %292 = bitcast %struct._IO_FILE** %9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %292)
  %293 = bitcast i32* %next_ref.i.3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %293)
  store i32 %291, i32* %info_obj_num, align 4
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %295 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), %struct._IO_FILE* %294)
  %296 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %297 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %296, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.54, i32 0, i32 0))
  %298 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %299 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %298, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.54, i32 0, i32 0))
  %300 = call i64 @time(i64* null) #5
  store i64 %300, i64* %now, align 8
  %301 = call %struct.tm* @localtime(i64* %now) #5
  store %struct.tm* %301, %struct.tm** %date, align 8
  %302 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %303 = load %struct.tm*, %struct.tm** %date, align 8
  %304 = getelementptr inbounds %struct.tm, %struct.tm* %303, i32 0, i32 5
  %305 = load i32, i32* %304, align 4
  %306 = add nsw i32 %305, 1900
  %307 = load %struct.tm*, %struct.tm** %date, align 8
  %308 = getelementptr inbounds %struct.tm, %struct.tm* %307, i32 0, i32 4
  %309 = load i32, i32* %308, align 4
  %310 = add nsw i32 %309, 1
  %311 = load %struct.tm*, %struct.tm** %date, align 8
  %312 = getelementptr inbounds %struct.tm, %struct.tm* %311, i32 0, i32 3
  %313 = load i32, i32* %312, align 4
  %314 = load %struct.tm*, %struct.tm** %date, align 8
  %315 = getelementptr inbounds %struct.tm, %struct.tm* %314, i32 0, i32 2
  %316 = load i32, i32* %315, align 4
  %317 = load %struct.tm*, %struct.tm** %date, align 8
  %318 = getelementptr inbounds %struct.tm, %struct.tm* %317, i32 0, i32 1
  %319 = load i32, i32* %318, align 4
  %320 = load %struct.tm*, %struct.tm** %date, align 8
  %321 = getelementptr inbounds %struct.tm, %struct.tm* %320, i32 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %302, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i32 0, i32 0), i32 %306, i32 %310, i32 %313, i32 %316, i32 %319, i32 %322)
  %324 = load i8*, i8** @g_doc_author, align 8
  %325 = icmp ne i8* %324, null
  br i1 %325, label %326, label %330

; <label>:326                                     ; preds = %284
  %327 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %328 = load i8*, i8** @g_doc_author, align 8
  %329 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %327, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i32 0, i32 0), i8* %328)
  br label %330

; <label>:330                                     ; preds = %326, %284
  %331 = load i8*, i8** @g_doc_title, align 8
  %332 = icmp ne i8* %331, null
  br i1 %332, label %333, label %337

; <label>:333                                     ; preds = %330
  %334 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %335 = load i8*, i8** @g_doc_title, align 8
  %336 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %334, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i32 0, i32 0), i8* %335)
  br label %337

; <label>:337                                     ; preds = %333, %330
  %338 = load i8*, i8** @g_doc_subject, align 8
  %339 = icmp ne i8* %338, null
  br i1 %339, label %340, label %344

; <label>:340                                     ; preds = %337
  %341 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %342 = load i8*, i8** @g_doc_subject, align 8
  %343 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %341, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i32 0, i32 0), i8* %342)
  br label %344

; <label>:344                                     ; preds = %340, %337
  %345 = load i8*, i8** @g_doc_keywords, align 8
  %346 = icmp ne i8* %345, null
  br i1 %346, label %347, label %351

; <label>:347                                     ; preds = %344
  %348 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %349 = load i8*, i8** @g_doc_keywords, align 8
  %350 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %348, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i32 0, i32 0), i8* %349)
  br label %351

; <label>:351                                     ; preds = %347, %344
  %352 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %353 = call i32 @fputs(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), %struct._IO_FILE* %352)
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %355 = bitcast %struct._IO_FILE** %8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %355)
  %356 = bitcast i32* %i.i.4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %356)
  %357 = bitcast i32* %xref_start.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %357)
  %358 = bitcast %struct.t_offset_block** %the_block.i.5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %358)
  %359 = bitcast i32* %block_pos.i.6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %359)
  %360 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.start(i64 512, i8* %360)
  store %struct._IO_FILE* %354, %struct._IO_FILE** %8, align 8
  %361 = load %struct.t_offset_block*, %struct.t_offset_block** @g_obj_offset_list, align 8
  store %struct.t_offset_block* %361, %struct.t_offset_block** %the_block.i.5, align 8
  %362 = load i32, i32* @g_PDF_debug, align 4
  %363 = icmp ne i32 %362, 0
  br i1 %363, label %364, label %367

; <label>:364                                     ; preds = %351
  %365 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %366 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %365, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.175, i32 0, i32 0)) #5
  br label %367

; <label>:367                                     ; preds = %364, %351
  %368 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %369 = call i64 @ftell(%struct._IO_FILE* %368) #5
  %370 = trunc i64 %369 to i32
  store i32 %370, i32* %xref_start.i, align 4
  %371 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %372 = call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.176, i32 0, i32 0), %struct._IO_FILE* %371) #5
  %373 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %374 = load i32, i32* @g_next_objnum, align 4
  %375 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %373, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i32 0, i32 0), i32 %374) #5
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %377 = call i32 @fputs(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.178, i32 0, i32 0), %struct._IO_FILE* %376) #5
  %378 = load i32, i32* @g_next_objnum, align 4
  %379 = icmp eq i32 %378, 1
  br i1 %379, label %383, label %380

; <label>:380                                     ; preds = %367
  %381 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i.5, align 8
  %382 = icmp ne %struct.t_offset_block* %381, null
  br label %383

; <label>:383                                     ; preds = %380, %367
  %384 = phi i1 [ true, %367 ], [ %382, %380 ]
  %385 = zext i1 %384 to i32
  %386 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %387 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %387) #5
  %388 = bitcast %struct.FILE_POS** %7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %388) #5
  store i32 %385, i32* %6, align 4
  store %struct.FILE_POS* %386, %struct.FILE_POS** %7, align 8
  %389 = load i32, i32* %6, align 4
  %390 = icmp ne i32 %389, 0
  br i1 %390, label %Assert.exit.i, label %391

; <label>:391                                     ; preds = %383
  %392 = load i32, i32* %6, align 4
  %393 = icmp ne i32 %392, 0
  br i1 %393, label %398, label %394

; <label>:394                                     ; preds = %391
  %395 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %396 = load %struct.FILE_POS*, %struct.FILE_POS** %7, align 8
  %397 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %395, %struct.FILE_POS* %396) #5
  br label %398

; <label>:398                                     ; preds = %394, %391
  br label %Assert.exit.i

Assert.exit.i:                                    ; preds = %398, %383
  %399 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %399) #5
  %400 = bitcast %struct.FILE_POS** %7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %400) #5
  store i32 1, i32* %i.i.4, align 4
  br label %401

; <label>:401                                     ; preds = %443, %Assert.exit.i
  %402 = load i32, i32* %i.i.4, align 4
  %403 = load i32, i32* @g_next_objnum, align 4
  %404 = icmp ult i32 %402, %403
  br i1 %404, label %405, label %PDFFile_WriteXREF.exit

; <label>:405                                     ; preds = %401
  %406 = load i32, i32* %i.i.4, align 4
  %407 = sub nsw i32 %406, 1
  %408 = srem i32 %407, 256
  store i32 %408, i32* %block_pos.i.6, align 4
  %409 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %410 = load i32, i32* %block_pos.i.6, align 4
  %411 = sext i32 %410 to i64
  %412 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i.5, align 8
  %413 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %412, i32 0, i32 1
  %414 = getelementptr inbounds [256 x i32], [256 x i32]* %413, i32 0, i64 %411
  %415 = load i32, i32* %414, align 4
  %416 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %409, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.179, i32 0, i32 0), i32 %415) #5
  %417 = load i32, i32* %block_pos.i.6, align 4
  %418 = sext i32 %417 to i64
  %419 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i.5, align 8
  %420 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %419, i32 0, i32 1
  %421 = getelementptr inbounds [256 x i32], [256 x i32]* %420, i32 0, i64 %418
  %422 = load i32, i32* %421, align 4
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %436

; <label>:424                                     ; preds = %405
  %425 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %426 = call i8* @strcpy(i8* %425, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.180, i32 0, i32 0)) #5
  %427 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %428 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %429 = call i64 @strlen(i8* %428) #6
  %430 = getelementptr inbounds i8, i8* %427, i64 %429
  %431 = load i32, i32* %i.i.4, align 4
  %432 = call i32 (i8*, i8*, ...) @sprintf(i8* %430, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i32 0, i32 0), i32 %431) #5
  %433 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %434 = getelementptr inbounds [512 x i8], [512 x i8]* %str.i, i32 0, i32 0
  %435 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i32 2, %struct.FILE_POS* %433, i8* %434) #5
  br label %436

; <label>:436                                     ; preds = %424, %405
  %437 = load i32, i32* %block_pos.i.6, align 4
  %438 = icmp eq i32 %437, 255
  br i1 %438, label %439, label %443

; <label>:439                                     ; preds = %436
  %440 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block.i.5, align 8
  %441 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %440, i32 0, i32 0
  %442 = load %struct.t_offset_block*, %struct.t_offset_block** %441, align 8
  store %struct.t_offset_block* %442, %struct.t_offset_block** %the_block.i.5, align 8
  br label %443

; <label>:443                                     ; preds = %439, %436
  %444 = load i32, i32* %i.i.4, align 4
  %445 = add nsw i32 %444, 1
  store i32 %445, i32* %i.i.4, align 4
  br label %401

PDFFile_WriteXREF.exit:                           ; preds = %401
  %446 = load i32, i32* %xref_start.i, align 4
  %447 = bitcast %struct._IO_FILE** %8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %447)
  %448 = bitcast i32* %i.i.4 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %448)
  %449 = bitcast i32* %xref_start.i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %449)
  %450 = bitcast %struct.t_offset_block** %the_block.i.5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %450)
  %451 = bitcast i32* %block_pos.i.6 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %451)
  %452 = bitcast [512 x i8]* %str.i to i8*
  call void @llvm.lifetime.end(i64 512, i8* %452)
  store i32 %446, i32* %xref_start, align 4
  %453 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %454 = call i32 @fputs(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0), %struct._IO_FILE* %453)
  %455 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %456 = load i32, i32* @g_next_objnum, align 4
  %457 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %455, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i32 0, i32 0), i32 %456)
  %458 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %459 = call i32 @fputs(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), %struct._IO_FILE* %458)
  %460 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %461 = load i32, i32* %catalog_obj_num, align 4
  %462 = bitcast %struct._IO_FILE** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %462)
  %463 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %463)
  store %struct._IO_FILE* %460, %struct._IO_FILE** %4, align 8
  store i32 %461, i32* %5, align 4
  %464 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %465 = load i32, i32* %5, align 4
  %466 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %464, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %465) #5
  %467 = bitcast %struct._IO_FILE** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %467)
  %468 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %468)
  %469 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %470 = call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i32 0, i32 0), %struct._IO_FILE* %469)
  %471 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %472 = load i32, i32* %info_obj_num, align 4
  %473 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %473)
  %474 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %474)
  store %struct._IO_FILE* %471, %struct._IO_FILE** %2, align 8
  store i32 %472, i32* %3, align 4
  %475 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %476 = load i32, i32* %3, align 4
  %477 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %475, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i32 0, i32 0), i32 %476) #5
  %478 = bitcast %struct._IO_FILE** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %478)
  %479 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %479)
  %480 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %481 = load i32, i32* %xref_start, align 4
  %482 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %480, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i32 0, i32 0), i32 %481)
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** %26, align 8
  %484 = call i32 @fputs(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i32 0, i32 0), %struct._IO_FILE* %483)
  br label %485

; <label>:485                                     ; preds = %488, %PDFFile_WriteXREF.exit
  %486 = load %struct.t_offset_block*, %struct.t_offset_block** @g_obj_offset_list, align 8
  %487 = icmp ne %struct.t_offset_block* %486, null
  br i1 %487, label %488, label %495

; <label>:488                                     ; preds = %485
  %489 = load %struct.t_offset_block*, %struct.t_offset_block** @g_obj_offset_list, align 8
  store %struct.t_offset_block* %489, %struct.t_offset_block** %the_block, align 8
  %490 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  %491 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %490, i32 0, i32 0
  %492 = load %struct.t_offset_block*, %struct.t_offset_block** %491, align 8
  store %struct.t_offset_block* %492, %struct.t_offset_block** @g_obj_offset_list, align 8
  %493 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  %494 = bitcast %struct.t_offset_block* %493 to i8*
  call void @free(i8* %494) #5
  br label %485

; <label>:495                                     ; preds = %485
  br label %496

; <label>:496                                     ; preds = %499, %495
  %497 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** @g_font_encoding_list, align 8
  %498 = icmp ne %struct.t_font_encoding_entry* %497, null
  br i1 %498, label %499, label %509

; <label>:499                                     ; preds = %496
  %500 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** @g_font_encoding_list, align 8
  store %struct.t_font_encoding_entry* %500, %struct.t_font_encoding_entry** %the_block1, align 8
  %501 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %the_block1, align 8
  %502 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %501, i32 0, i32 0
  %503 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %502, align 8
  store %struct.t_font_encoding_entry* %503, %struct.t_font_encoding_entry** @g_font_encoding_list, align 8
  %504 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %the_block1, align 8
  %505 = getelementptr inbounds %struct.t_font_encoding_entry, %struct.t_font_encoding_entry* %504, i32 0, i32 2
  %506 = load i8*, i8** %505, align 8
  call void @free(i8* %506) #5
  %507 = load %struct.t_font_encoding_entry*, %struct.t_font_encoding_entry** %the_block1, align 8
  %508 = bitcast %struct.t_font_encoding_entry* %507 to i8*
  call void @free(i8* %508) #5
  br label %496

; <label>:509                                     ; preds = %496
  br label %510

; <label>:510                                     ; preds = %513, %509
  %511 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  %512 = icmp ne %struct.t_font_list_entry* %511, null
  br i1 %512, label %513, label %529

; <label>:513                                     ; preds = %510
  %514 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** @g_font_list, align 8
  store %struct.t_font_list_entry* %514, %struct.t_font_list_entry** %the_block2, align 8
  %515 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %the_block2, align 8
  %516 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %515, i32 0, i32 0
  %517 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %516, align 8
  store %struct.t_font_list_entry* %517, %struct.t_font_list_entry** @g_font_list, align 8
  %518 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %the_block2, align 8
  %519 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %518, i32 0, i32 1
  %520 = load i8*, i8** %519, align 8
  call void @free(i8* %520) #5
  %521 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %the_block2, align 8
  %522 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %521, i32 0, i32 2
  %523 = load i8*, i8** %522, align 8
  call void @free(i8* %523) #5
  %524 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %the_block2, align 8
  %525 = getelementptr inbounds %struct.t_font_list_entry, %struct.t_font_list_entry* %524, i32 0, i32 3
  %526 = load i8*, i8** %525, align 8
  call void @free(i8* %526) #5
  %527 = load %struct.t_font_list_entry*, %struct.t_font_list_entry** %the_block2, align 8
  %528 = bitcast %struct.t_font_list_entry* %527 to i8*
  call void @free(i8* %528) #5
  br label %510

; <label>:529                                     ; preds = %510
  br label %530

; <label>:530                                     ; preds = %533, %529
  %531 = load %struct.t_page_block*, %struct.t_page_block** @g_page_block_list, align 8
  %532 = icmp ne %struct.t_page_block* %531, null
  br i1 %532, label %533, label %540

; <label>:533                                     ; preds = %530
  %534 = load %struct.t_page_block*, %struct.t_page_block** @g_page_block_list, align 8
  store %struct.t_page_block* %534, %struct.t_page_block** %the_block3, align 8
  %535 = load %struct.t_page_block*, %struct.t_page_block** %the_block3, align 8
  %536 = getelementptr inbounds %struct.t_page_block, %struct.t_page_block* %535, i32 0, i32 0
  %537 = load %struct.t_page_block*, %struct.t_page_block** %536, align 8
  store %struct.t_page_block* %537, %struct.t_page_block** @g_page_block_list, align 8
  %538 = load %struct.t_page_block*, %struct.t_page_block** %the_block3, align 8
  %539 = bitcast %struct.t_page_block* %538 to i8*
  call void @free(i8* %539) #5
  br label %530

; <label>:540                                     ; preds = %530
  br label %541

; <label>:541                                     ; preds = %PDFSourceAnnot_Dispose.exit, %540
  %542 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  %543 = icmp ne %struct.t_source_annot_entry* %542, null
  br i1 %543, label %544, label %590

; <label>:544                                     ; preds = %541
  %545 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  store %struct.t_source_annot_entry* %545, %struct.t_source_annot_entry** %entry4, align 8
  %546 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry4, align 8
  %547 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %546, i32 0, i32 1
  %548 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %547, align 8
  %549 = icmp eq %struct.t_target_annot_entry* %548, null
  br i1 %549, label %550, label %561

; <label>:550                                     ; preds = %544
  %551 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %552 = call i8* @strcpy(i8* %551, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.67, i32 0, i32 0)) #5
  %553 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %554 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry4, align 8
  %555 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %554, i32 0, i32 2
  %556 = load i8*, i8** %555, align 8
  %557 = call i8* @strcat(i8* %553, i8* %556) #5
  %558 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %559 = getelementptr inbounds [512 x i8], [512 x i8]* %str, i32 0, i32 0
  %560 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i32 2, %struct.FILE_POS* %558, i8* %559)
  br label %561

; <label>:561                                     ; preds = %550, %544
  %562 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry4, align 8
  %563 = bitcast %struct.t_source_annot_entry** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %563)
  %564 = bitcast %struct.t_source_annot_entry** %next_entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %564)
  store %struct.t_source_annot_entry* %562, %struct.t_source_annot_entry** %1, align 8
  %565 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %566 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %565, i32 0, i32 0
  %567 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %566, align 8
  store %struct.t_source_annot_entry* %567, %struct.t_source_annot_entry** %next_entry.i, align 8
  %568 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %569 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %568, i32 0, i32 2
  %570 = load i8*, i8** %569, align 8
  %571 = icmp ne i8* %570, null
  br i1 %571, label %572, label %576

; <label>:572                                     ; preds = %561
  %573 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %574 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %573, i32 0, i32 2
  %575 = load i8*, i8** %574, align 8
  call void @free(i8* %575) #5
  br label %576

; <label>:576                                     ; preds = %572, %561
  %577 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %578 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %577, i32 0, i32 3
  %579 = load i8*, i8** %578, align 8
  %580 = icmp ne i8* %579, null
  br i1 %580, label %581, label %PDFSourceAnnot_Dispose.exit

; <label>:581                                     ; preds = %576
  %582 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %583 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %582, i32 0, i32 3
  %584 = load i8*, i8** %583, align 8
  call void @free(i8* %584) #5
  br label %PDFSourceAnnot_Dispose.exit

PDFSourceAnnot_Dispose.exit:                      ; preds = %581, %576
  %585 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %1, align 8
  %586 = bitcast %struct.t_source_annot_entry* %585 to i8*
  call void @free(i8* %586) #5
  %587 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %next_entry.i, align 8
  %588 = bitcast %struct.t_source_annot_entry** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %588)
  %589 = bitcast %struct.t_source_annot_entry** %next_entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %589)
  store %struct.t_source_annot_entry* %587, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  br label %541

; <label>:590                                     ; preds = %541
  br label %591

; <label>:591                                     ; preds = %594, %590
  %592 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  %593 = icmp ne %struct.t_target_annot_entry* %592, null
  br i1 %593, label %594, label %604

; <label>:594                                     ; preds = %591
  %595 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  store %struct.t_target_annot_entry* %595, %struct.t_target_annot_entry** %entry5, align 8
  %596 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry5, align 8
  %597 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %596, i32 0, i32 0
  %598 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %597, align 8
  store %struct.t_target_annot_entry* %598, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  %599 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry5, align 8
  %600 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %599, i32 0, i32 1
  %601 = load i8*, i8** %600, align 8
  call void @free(i8* %601) #5
  %602 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry5, align 8
  %603 = bitcast %struct.t_target_annot_entry* %602 to i8*
  call void @free(i8* %603) #5
  br label %591

; <label>:604                                     ; preds = %591
  ret void
}

; Function Attrs: nounwind
declare i64 @time(i64*) #2

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare i64 @ftell(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define internal i8* @PDFPage_EvalExpr(i8* %inExpr, float* %outValue) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.FILE_POS*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.FILE_POS*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca float*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca float*, align 8
  %i = alloca i32, align 4
  %chp = alloca i8*, align 8
  %val = alloca float, align 4
  %val1 = alloca float, align 4
  %val2 = alloca float, align 4
  %count = alloca i32, align 4
  store i8* %inExpr, i8** %7, align 8
  store float* %outValue, float** %8, align 8
  %9 = load i8*, i8** %7, align 8
  store i8* %9, i8** %chp, align 8
  br label %10

; <label>:10                                      ; preds = %22, %0
  %11 = load i8*, i8** %chp, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i16** @__ctype_b_loc() #7
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds i16, i16* %16, i64 %14
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = and i32 %19, 8192
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %25

; <label>:22                                      ; preds = %10
  %23 = load i8*, i8** %chp, align 8
  %24 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %24, i8** %chp, align 8
  br label %10

; <label>:25                                      ; preds = %10
  br label %26

; <label>:26                                      ; preds = %31, %25
  %27 = load i8*, i8** %chp, align 8
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %29, 95
  br i1 %30, label %31, label %34

; <label>:31                                      ; preds = %26
  %32 = load i8*, i8** %chp, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %chp, align 8
  br label %26

; <label>:34                                      ; preds = %26
  br label %35

; <label>:35                                      ; preds = %40, %34
  %36 = load i8*, i8** %chp, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp eq i32 %38, 43
  br i1 %39, label %40, label %43

; <label>:40                                      ; preds = %35
  %41 = load i8*, i8** %chp, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %chp, align 8
  br label %35

; <label>:43                                      ; preds = %35
  %44 = load i8*, i8** %chp, align 8
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = sext i32 %46 to i64
  %48 = call i16** @__ctype_b_loc() #7
  %49 = load i16*, i16** %48, align 8
  %50 = getelementptr inbounds i16, i16* %49, i64 %47
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = and i32 %52, 2048
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %60, label %55

; <label>:55                                      ; preds = %43
  %56 = load i8*, i8** %chp, align 8
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp eq i32 %58, 46
  br i1 %59, label %60, label %128

; <label>:60                                      ; preds = %55, %43
  %61 = load i8*, i8** %chp, align 8
  %62 = load float*, float** %8, align 8
  %63 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %63)
  %64 = bitcast float** %6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %64)
  store i8* %61, i8** %5, align 8
  store float* %62, float** %6, align 8
  %65 = load i8*, i8** %5, align 8
  %66 = load float*, float** %6, align 8
  %67 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i32 0, i32 0), float* %66) #5
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %122

; <label>:69                                      ; preds = %60
  br label %70

; <label>:70                                      ; preds = %82, %69
  %71 = load i8*, i8** %5, align 8
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i16** @__ctype_b_loc() #7
  %76 = load i16*, i16** %75, align 8
  %77 = getelementptr inbounds i16, i16* %76, i64 %74
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  %80 = and i32 %79, 8192
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %70
  %83 = load i8*, i8** %5, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %5, align 8
  br label %70

; <label>:85                                      ; preds = %70
  %86 = load i8*, i8** %5, align 8
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp eq i32 %88, 45
  br i1 %89, label %95, label %90

; <label>:90                                      ; preds = %85
  %91 = load i8*, i8** %5, align 8
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 43
  br i1 %94, label %95, label %98

; <label>:95                                      ; preds = %90, %85
  %96 = load i8*, i8** %5, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %5, align 8
  br label %98

; <label>:98                                      ; preds = %95, %90
  br label %99

; <label>:99                                      ; preds = %118, %98
  %100 = load i8*, i8** %5, align 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i16** @__ctype_b_loc() #7
  %105 = load i16*, i16** %104, align 8
  %106 = getelementptr inbounds i16, i16* %105, i64 %103
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = and i32 %108, 2048
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %116, label %111

; <label>:111                                     ; preds = %99
  %112 = load i8*, i8** %5, align 8
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 46
  br label %116

; <label>:116                                     ; preds = %111, %99
  %117 = phi i1 [ true, %99 ], [ %115, %111 ]
  br i1 %117, label %118, label %121

; <label>:118                                     ; preds = %116
  %119 = load i8*, i8** %5, align 8
  %120 = getelementptr inbounds i8, i8* %119, i32 1
  store i8* %120, i8** %5, align 8
  br label %99

; <label>:121                                     ; preds = %116
  br label %PDFPage_GetFloat.exit

; <label>:122                                     ; preds = %60
  %123 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %124 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 21, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.86, i32 0, i32 0), i32 1, %struct.FILE_POS* %123) #5
  br label %PDFPage_GetFloat.exit

PDFPage_GetFloat.exit:                            ; preds = %122, %121
  %125 = load i8*, i8** %5, align 8
  %126 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %126)
  %127 = bitcast float** %6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %127)
  store i8* %125, i8** %chp, align 8
  br label %356

; <label>:128                                     ; preds = %55
  %129 = load i8*, i8** %chp, align 8
  %130 = load i8, i8* %129, align 1
  %131 = sext i8 %130 to i32
  %132 = icmp eq i32 %131, 45
  br i1 %132, label %133, label %140

; <label>:133                                     ; preds = %128
  %134 = load i8*, i8** %chp, align 8
  %135 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %135, i8** %chp, align 8
  %136 = call i8* @PDFPage_EvalExpr(i8* %135, float* %val)
  store i8* %136, i8** %chp, align 8
  %137 = load float, float* %val, align 4
  %138 = fsub float -0.000000e+00, %137
  %139 = load float*, float** %8, align 8
  store float %138, float* %139, align 4
  br label %355

; <label>:140                                     ; preds = %128
  %141 = load i8*, i8** %chp, align 8
  %142 = call i32 @PDFKeyword_Find(i32 7, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @g_arithmetic_keywords, i32 0, i32 0), i8* %141)
  store i32 %142, i32* %i, align 4
  %143 = load i32, i32* %i, align 4
  %144 = icmp sge i32 %143, 0
  br i1 %144, label %145, label %311

; <label>:145                                     ; preds = %140
  %146 = load i32, i32* %i, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [7 x i8*], [7 x i8*]* @g_arithmetic_keywords, i32 0, i64 %147
  %149 = load i8*, i8** %148, align 8
  %150 = call i64 @strlen(i8* %149) #6
  %151 = load i8*, i8** %chp, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 %150
  store i8* %152, i8** %chp, align 8
  br label %153

; <label>:153                                     ; preds = %165, %145
  %154 = load i8*, i8** %chp, align 8
  %155 = load i8, i8* %154, align 1
  %156 = sext i8 %155 to i32
  %157 = sext i32 %156 to i64
  %158 = call i16** @__ctype_b_loc() #7
  %159 = load i16*, i16** %158, align 8
  %160 = getelementptr inbounds i16, i16* %159, i64 %157
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = and i32 %162, 8192
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %168

; <label>:165                                     ; preds = %153
  %166 = load i8*, i8** %chp, align 8
  %167 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %167, i8** %chp, align 8
  br label %153

; <label>:168                                     ; preds = %153
  %169 = load i8*, i8** %chp, align 8
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp ne i32 %171, 40
  br i1 %172, label %173, label %176

; <label>:173                                     ; preds = %168
  %174 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %175 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 30, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.81, i32 0, i32 0), i32 1, %struct.FILE_POS* %174)
  br label %176

; <label>:176                                     ; preds = %173, %168
  %177 = load i8*, i8** %chp, align 8
  %178 = getelementptr inbounds i8, i8* %177, i32 1
  store i8* %178, i8** %chp, align 8
  %179 = call i8* @PDFPage_EvalExpr(i8* %178, float* %val1)
  store i8* %179, i8** %chp, align 8
  %180 = load i32, i32* %i, align 4
  %181 = icmp sle i32 %180, 3
  br i1 %181, label %185, label %182

; <label>:182                                     ; preds = %176
  %183 = load i32, i32* %i, align 4
  %184 = icmp eq i32 %183, 6
  br i1 %184, label %185, label %241

; <label>:185                                     ; preds = %182, %176
  %186 = load i32, i32* %i, align 4
  %187 = icmp eq i32 %186, 6
  br i1 %187, label %188, label %211

; <label>:188                                     ; preds = %185
  %189 = load float, float* %val1, align 4
  %190 = fpext float %189 to double
  %191 = call double @floor(double %190) #7
  %192 = fptosi double %191 to i32
  store i32 %192, i32* %count, align 4
  %193 = load i32, i32* %count, align 4
  %194 = icmp ne i32 %193, 0
  %195 = zext i1 %194 to i32
  %196 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %197 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %197)
  %198 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %198)
  store i32 %195, i32* %3, align 4
  store %struct.FILE_POS* %196, %struct.FILE_POS** %4, align 8
  %199 = load i32, i32* %3, align 4
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %Assert.exit, label %201

; <label>:201                                     ; preds = %188
  %202 = load i32, i32* %3, align 4
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %208, label %204

; <label>:204                                     ; preds = %201
  %205 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %206 = load %struct.FILE_POS*, %struct.FILE_POS** %4, align 8
  %207 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %205, %struct.FILE_POS* %206) #5
  br label %208

; <label>:208                                     ; preds = %204, %201
  br label %Assert.exit

Assert.exit:                                      ; preds = %208, %188
  %209 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %209)
  %210 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %210)
  br label %212

; <label>:211                                     ; preds = %185
  store i32 1, i32* %count, align 4
  br label %212

; <label>:212                                     ; preds = %211, %Assert.exit
  %213 = load i8*, i8** %chp, align 8
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp ne i32 %215, 44
  br i1 %216, label %217, label %220

; <label>:217                                     ; preds = %212
  %218 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %219 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 31, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.82, i32 0, i32 0), i32 1, %struct.FILE_POS* %218)
  br label %220

; <label>:220                                     ; preds = %217, %212
  br label %221

; <label>:221                                     ; preds = %236, %220
  %222 = load i8*, i8** %chp, align 8
  %223 = getelementptr inbounds i8, i8* %222, i32 1
  store i8* %223, i8** %chp, align 8
  %224 = call i8* @PDFPage_EvalExpr(i8* %223, float* %val2)
  store i8* %224, i8** %chp, align 8
  %225 = load i32, i32* %count, align 4
  %226 = icmp ne i32 %225, 1
  br i1 %226, label %227, label %235

; <label>:227                                     ; preds = %221
  %228 = load i8*, i8** %chp, align 8
  %229 = load i8, i8* %228, align 1
  %230 = sext i8 %229 to i32
  %231 = icmp eq i32 %230, 44
  br i1 %231, label %232, label %235

; <label>:232                                     ; preds = %227
  %233 = load i8*, i8** %chp, align 8
  %234 = getelementptr inbounds i8, i8* %233, i32 1
  store i8* %234, i8** %chp, align 8
  br label %235

; <label>:235                                     ; preds = %232, %227, %221
  br label %236

; <label>:236                                     ; preds = %235
  %237 = load i32, i32* %count, align 4
  %238 = add nsw i32 %237, -1
  store i32 %238, i32* %count, align 4
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %221, label %240

; <label>:240                                     ; preds = %236
  br label %241

; <label>:241                                     ; preds = %240, %182
  %242 = load i8*, i8** %chp, align 8
  %243 = load i8, i8* %242, align 1
  %244 = sext i8 %243 to i32
  %245 = icmp ne i32 %244, 41
  br i1 %245, label %246, label %249

; <label>:246                                     ; preds = %241
  %247 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %248 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i32 0, i32 0), i32 1, %struct.FILE_POS* %247)
  br label %249

; <label>:249                                     ; preds = %246, %241
  %250 = load i8*, i8** %chp, align 8
  %251 = getelementptr inbounds i8, i8* %250, i32 1
  store i8* %251, i8** %chp, align 8
  %252 = load i32, i32* %i, align 4
  switch i32 %252, label %310 [
    i32 0, label %253
    i32 1, label %258
    i32 2, label %263
    i32 3, label %268
    i32 4, label %291
    i32 5, label %299
    i32 6, label %307
  ]

; <label>:253                                     ; preds = %249
  %254 = load float, float* %val1, align 4
  %255 = load float, float* %val2, align 4
  %256 = fadd float %254, %255
  %257 = load float*, float** %8, align 8
  store float %256, float* %257, align 4
  br label %310

; <label>:258                                     ; preds = %249
  %259 = load float, float* %val1, align 4
  %260 = load float, float* %val2, align 4
  %261 = fsub float %259, %260
  %262 = load float*, float** %8, align 8
  store float %261, float* %262, align 4
  br label %310

; <label>:263                                     ; preds = %249
  %264 = load float, float* %val1, align 4
  %265 = load float, float* %val2, align 4
  %266 = fmul float %264, %265
  %267 = load float*, float** %8, align 8
  store float %266, float* %267, align 4
  br label %310

; <label>:268                                     ; preds = %249
  %269 = load float, float* %val2, align 4
  %270 = fcmp une float %269, 0.000000e+00
  %271 = zext i1 %270 to i32
  %272 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %273 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %273)
  %274 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %274)
  store i32 %271, i32* %1, align 4
  store %struct.FILE_POS* %272, %struct.FILE_POS** %2, align 8
  %275 = load i32, i32* %1, align 4
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %Assert.exit1, label %277

; <label>:277                                     ; preds = %268
  %278 = load i32, i32* %1, align 4
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %284, label %280

; <label>:280                                     ; preds = %277
  %281 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %282 = load %struct.FILE_POS*, %struct.FILE_POS** %2, align 8
  %283 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %281, %struct.FILE_POS* %282) #5
  br label %284

; <label>:284                                     ; preds = %280, %277
  br label %Assert.exit1

Assert.exit1:                                     ; preds = %284, %268
  %285 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %285)
  %286 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %286)
  %287 = load float, float* %val1, align 4
  %288 = load float, float* %val2, align 4
  %289 = fdiv float %287, %288
  %290 = load float*, float** %8, align 8
  store float %289, float* %290, align 4
  br label %310

; <label>:291                                     ; preds = %249
  %292 = load float, float* %val1, align 4
  %293 = fpext float %292 to double
  %294 = fmul double %293, 0x400921FB54442D18
  %295 = fdiv double %294, 1.800000e+02
  %296 = call double @sin(double %295) #5
  %297 = fptrunc double %296 to float
  %298 = load float*, float** %8, align 8
  store float %297, float* %298, align 4
  br label %310

; <label>:299                                     ; preds = %249
  %300 = load float, float* %val1, align 4
  %301 = fpext float %300 to double
  %302 = fmul double %301, 0x400921FB54442D18
  %303 = fdiv double %302, 1.800000e+02
  %304 = call double @cos(double %303) #5
  %305 = fptrunc double %304 to float
  %306 = load float*, float** %8, align 8
  store float %305, float* %306, align 4
  br label %310

; <label>:307                                     ; preds = %249
  %308 = load float, float* %val2, align 4
  %309 = load float*, float** %8, align 8
  store float %308, float* %309, align 4
  br label %310

; <label>:310                                     ; preds = %307, %299, %291, %Assert.exit1, %263, %258, %253, %249
  br label %354

; <label>:311                                     ; preds = %140
  %312 = load i8*, i8** %chp, align 8
  %313 = call i32 @PDFKeyword_Find(i32 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @g_graphic_keywords, i32 0, i32 0), i8* %312)
  store i32 %313, i32* %i, align 4
  %314 = load i32, i32* %i, align 4
  %315 = icmp sge i32 %314, 0
  br i1 %315, label %316, label %330

; <label>:316                                     ; preds = %311
  %317 = load i32, i32* %i, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [4 x i8*], [4 x i8*]* @g_graphic_keywords, i32 0, i64 %318
  %320 = load i8*, i8** %319, align 8
  %321 = call i64 @strlen(i8* %320) #6
  %322 = load i8*, i8** %chp, align 8
  %323 = getelementptr inbounds i8, i8* %322, i64 %321
  store i8* %323, i8** %chp, align 8
  %324 = load i32, i32* %i, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [4 x i32], [4 x i32]* @g_graphics_vars, i32 0, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = sitofp i32 %327 to float
  %329 = load float*, float** %8, align 8
  store float %328, float* %329, align 4
  br label %353

; <label>:330                                     ; preds = %311
  %331 = load i8*, i8** %chp, align 8
  %332 = call i32 @PDFKeyword_Find(i32 7, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @g_unit_keywords, i32 0, i32 0), i8* %331)
  store i32 %332, i32* %i, align 4
  %333 = load i32, i32* %i, align 4
  %334 = icmp sge i32 %333, 0
  br i1 %334, label %335, label %349

; <label>:335                                     ; preds = %330
  %336 = load i32, i32* %i, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [7 x i8*], [7 x i8*]* @g_unit_keywords, i32 0, i64 %337
  %339 = load i8*, i8** %338, align 8
  %340 = call i64 @strlen(i8* %339) #6
  %341 = load i8*, i8** %chp, align 8
  %342 = getelementptr inbounds i8, i8* %341, i64 %340
  store i8* %342, i8** %chp, align 8
  %343 = load i32, i32* %i, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [7 x i32], [7 x i32]* @g_units, i32 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = sitofp i32 %346 to float
  %348 = load float*, float** %8, align 8
  store float %347, float* %348, align 4
  br label %352

; <label>:349                                     ; preds = %330
  %350 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %351 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 33, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.84, i32 0, i32 0), i32 1, %struct.FILE_POS* %350)
  br label %352

; <label>:352                                     ; preds = %349, %335
  br label %353

; <label>:353                                     ; preds = %352, %316
  br label %354

; <label>:354                                     ; preds = %353, %310
  br label %355

; <label>:355                                     ; preds = %354, %133
  br label %356

; <label>:356                                     ; preds = %355, %PDFPage_GetFloat.exit
  %357 = load i8*, i8** %chp, align 8
  ret i8* %357
}

; Function Attrs: nounwind readnone
declare double @floor(double) #4

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal %struct.t_source_annot_entry* @PDFSourceAnnot_New(i32 %in_link_type, i8* %in_annot_name, i32 %in_annot_name_length, i32 %in_ll_x, i32 %in_ll_y, i32 %in_ur_x, i32 %in_ur_y, i32 %in_link_dest_option) #0 {
  %1 = alloca i8*, align 8
  %entry.i = alloca %struct.t_target_annot_entry*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %struct.FILE_POS*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %target = alloca %struct.t_target_annot_entry*, align 8
  %entry = alloca %struct.t_source_annot_entry*, align 8
  store i32 %in_link_type, i32* %4, align 4
  store i8* %in_annot_name, i8** %5, align 8
  store i32 %in_annot_name_length, i32* %6, align 4
  store i32 %in_ll_x, i32* %7, align 4
  store i32 %in_ll_y, i32* %8, align 4
  store i32 %in_ur_x, i32* %9, align 4
  store i32 %in_ur_y, i32* %10, align 4
  store i32 %in_link_dest_option, i32* %11, align 4
  store %struct.t_target_annot_entry* null, %struct.t_target_annot_entry** %target, align 8
  %12 = call noalias i8* @malloc(i64 72) #5
  %13 = bitcast i8* %12 to %struct.t_source_annot_entry*
  store %struct.t_source_annot_entry* %13, %struct.t_source_annot_entry** %entry, align 8
  %14 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %15 = icmp eq %struct.t_source_annot_entry* %14, null
  br i1 %15, label %16, label %19

; <label>:16                                      ; preds = %0
  %17 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %18 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 19, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.106, i32 0, i32 0), i32 1, %struct.FILE_POS* %17)
  br label %19

; <label>:19                                      ; preds = %16, %0
  %20 = load i32, i32* %7, align 4
  %21 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %22 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %21, i32 0, i32 4
  store i32 %20, i32* %22, align 4
  %23 = load i32, i32* %8, align 4
  %24 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %25 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %24, i32 0, i32 5
  store i32 %23, i32* %25, align 4
  %26 = load i32, i32* %9, align 4
  %27 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %28 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %27, i32 0, i32 6
  store i32 %26, i32* %28, align 4
  %29 = load i32, i32* %10, align 4
  %30 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %31 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %30, i32 0, i32 7
  store i32 %29, i32* %31, align 4
  %32 = call i32 @PDFObject_New()
  %33 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %34 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %33, i32 0, i32 8
  store i32 %32, i32* %34, align 4
  %35 = load i32, i32* @g_page_object_num, align 4
  %36 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %37 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %36, i32 0, i32 9
  store i32 %35, i32* %37, align 4
  %38 = load i32, i32* %4, align 4
  %39 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %40 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %39, i32 0, i32 11
  store i32 %38, i32* %40, align 4
  %41 = load i32, i32* %11, align 4
  %42 = icmp uge i32 %41, 0
  br i1 %42, label %43, label %46

; <label>:43                                      ; preds = %19
  %44 = load i32, i32* %11, align 4
  %45 = icmp ule i32 %44, 7
  br label %46

; <label>:46                                      ; preds = %43, %19
  %47 = phi i1 [ false, %19 ], [ %45, %43 ]
  %48 = zext i1 %47 to i32
  %49 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %50 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50)
  %51 = bitcast %struct.FILE_POS** %3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %51)
  store i32 %48, i32* %2, align 4
  store %struct.FILE_POS* %49, %struct.FILE_POS** %3, align 8
  %52 = load i32, i32* %2, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %Assert.exit, label %54

; <label>:54                                      ; preds = %46
  %55 = load i32, i32* %2, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %61, label %57

; <label>:57                                      ; preds = %54
  %58 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %59 = load %struct.FILE_POS*, %struct.FILE_POS** %3, align 8
  %60 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %58, %struct.FILE_POS* %59) #5
  br label %61

; <label>:61                                      ; preds = %57, %54
  br label %Assert.exit

Assert.exit:                                      ; preds = %61, %46
  %62 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %62)
  %63 = bitcast %struct.FILE_POS** %3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63)
  %64 = load i32, i32* %11, align 4
  %65 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %66 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %65, i32 0, i32 10
  store i32 %64, i32* %66, align 4
  %67 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %68 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %67, i32 0, i32 3
  store i8* null, i8** %68, align 8
  %69 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %70 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %69, i32 0, i32 12
  store i32 0, i32* %70, align 4
  %71 = load i32, i32* %4, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %96

; <label>:73                                      ; preds = %Assert.exit
  %74 = load i8*, i8** %5, align 8
  %75 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %75)
  %76 = bitcast %struct.t_target_annot_entry** %entry.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %76)
  store i8* %74, i8** %1, align 8
  %77 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** @g_target_annot_list, align 8
  store %struct.t_target_annot_entry* %77, %struct.t_target_annot_entry** %entry.i, align 8
  br label %78

; <label>:78                                      ; preds = %89, %73
  %79 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %80 = icmp ne %struct.t_target_annot_entry* %79, null
  br i1 %80, label %81, label %PDFTargetAnnot_Find.exit

; <label>:81                                      ; preds = %78
  %82 = load i8*, i8** %1, align 8
  %83 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %84 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %83, i32 0, i32 1
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 @strcmp(i8* %82, i8* %85) #6
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %81
  br label %PDFTargetAnnot_Find.exit

; <label>:89                                      ; preds = %81
  %90 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %91 = getelementptr inbounds %struct.t_target_annot_entry, %struct.t_target_annot_entry* %90, i32 0, i32 0
  %92 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %91, align 8
  store %struct.t_target_annot_entry* %92, %struct.t_target_annot_entry** %entry.i, align 8
  br label %78

PDFTargetAnnot_Find.exit:                         ; preds = %88, %78
  %93 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %entry.i, align 8
  %94 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %94)
  %95 = bitcast %struct.t_target_annot_entry** %entry.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %95)
  store %struct.t_target_annot_entry* %93, %struct.t_target_annot_entry** %target, align 8
  br label %96

; <label>:96                                      ; preds = %PDFTargetAnnot_Find.exit, %Assert.exit
  %97 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %98 = icmp ne %struct.t_target_annot_entry* %97, null
  br i1 %98, label %99, label %105

; <label>:99                                      ; preds = %96
  %100 = load %struct.t_target_annot_entry*, %struct.t_target_annot_entry** %target, align 8
  %101 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %102 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %101, i32 0, i32 1
  store %struct.t_target_annot_entry* %100, %struct.t_target_annot_entry** %102, align 8
  %103 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %104 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %103, i32 0, i32 2
  store i8* null, i8** %104, align 8
  br label %134

; <label>:105                                     ; preds = %96
  %106 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %107 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %106, i32 0, i32 1
  store %struct.t_target_annot_entry* null, %struct.t_target_annot_entry** %107, align 8
  %108 = load i32, i32* %6, align 4
  %109 = add i32 %108, 1
  %110 = zext i32 %109 to i64
  %111 = call noalias i8* @malloc(i64 %110) #5
  %112 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %113 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %112, i32 0, i32 2
  store i8* %111, i8** %113, align 8
  %114 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %115 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %114, i32 0, i32 2
  %116 = load i8*, i8** %115, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %118, label %121

; <label>:118                                     ; preds = %105
  %119 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %120 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 20, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.106, i32 0, i32 0), i32 1, %struct.FILE_POS* %119)
  br label %121

; <label>:121                                     ; preds = %118, %105
  %122 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %123 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %122, i32 0, i32 2
  %124 = load i8*, i8** %123, align 8
  %125 = load i8*, i8** %5, align 8
  %126 = load i32, i32* %6, align 4
  %127 = zext i32 %126 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %124, i8* %125, i64 %127, i32 1, i1 false)
  %128 = load i32, i32* %6, align 4
  %129 = zext i32 %128 to i64
  %130 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %131 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %130, i32 0, i32 2
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 %129
  store i8 0, i8* %133, align 1
  br label %134

; <label>:134                                     ; preds = %121, %99
  %135 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  %136 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  %137 = getelementptr inbounds %struct.t_source_annot_entry, %struct.t_source_annot_entry* %136, i32 0, i32 0
  store %struct.t_source_annot_entry* %135, %struct.t_source_annot_entry** %137, align 8
  %138 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  store %struct.t_source_annot_entry* %138, %struct.t_source_annot_entry** @g_source_annot_list, align 8
  %139 = load %struct.t_source_annot_entry*, %struct.t_source_annot_entry** %entry, align 8
  ret %struct.t_source_annot_entry* %139
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @PDFObject_New() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.FILE_POS*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.FILE_POS*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.FILE_POS*, align 8
  %wanted_block_num = alloca i32, align 4
  %block_pos = alloca i32, align 4
  %the_block = alloca %struct.t_offset_block*, align 8
  %7 = load i32, i32* @g_next_objnum, align 4
  %8 = sub i32 %7, 1
  %9 = udiv i32 %8, 256
  store i32 %9, i32* %wanted_block_num, align 4
  %10 = load i32, i32* @g_next_objnum, align 4
  %11 = sub i32 %10, 1
  %12 = urem i32 %11, 256
  store i32 %12, i32* %block_pos, align 4
  %13 = load %struct.t_offset_block*, %struct.t_offset_block** @g_cur_obj_offset_block, align 8
  store %struct.t_offset_block* %13, %struct.t_offset_block** %the_block, align 8
  %14 = load i32, i32* %block_pos, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %73

; <label>:16                                      ; preds = %0
  %17 = call noalias i8* @malloc(i64 1032) #5
  %18 = bitcast i8* %17 to %struct.t_offset_block*
  store %struct.t_offset_block* %18, %struct.t_offset_block** %the_block, align 8
  %19 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  %20 = icmp eq %struct.t_offset_block* %19, null
  br i1 %20, label %21, label %24

; <label>:21                                      ; preds = %16
  %22 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %23 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 48, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.133, i32 0, i32 0), i32 1, %struct.FILE_POS* %22)
  br label %24

; <label>:24                                      ; preds = %21, %16
  %25 = load i32, i32* %wanted_block_num, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %47

; <label>:27                                      ; preds = %24
  %28 = load %struct.t_offset_block*, %struct.t_offset_block** @g_obj_offset_list, align 8
  %29 = icmp eq %struct.t_offset_block* %28, null
  %30 = zext i1 %29 to i32
  %31 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %32 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %32)
  %33 = bitcast %struct.FILE_POS** %6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %33)
  store i32 %30, i32* %5, align 4
  store %struct.FILE_POS* %31, %struct.FILE_POS** %6, align 8
  %34 = load i32, i32* %5, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %Assert.exit, label %36

; <label>:36                                      ; preds = %27
  %37 = load i32, i32* %5, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %43, label %39

; <label>:39                                      ; preds = %36
  %40 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %41 = load %struct.FILE_POS*, %struct.FILE_POS** %6, align 8
  %42 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %40, %struct.FILE_POS* %41) #5
  br label %43

; <label>:43                                      ; preds = %39, %36
  br label %Assert.exit

Assert.exit:                                      ; preds = %43, %27
  %44 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44)
  %45 = bitcast %struct.FILE_POS** %6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45)
  %46 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  store %struct.t_offset_block* %46, %struct.t_offset_block** @g_obj_offset_list, align 8
  br label %69

; <label>:47                                      ; preds = %24
  %48 = load %struct.t_offset_block*, %struct.t_offset_block** @g_cur_obj_offset_block, align 8
  %49 = icmp ne %struct.t_offset_block* %48, null
  %50 = zext i1 %49 to i32
  %51 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %52 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52)
  %53 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %53)
  store i32 %50, i32* %3, align 4
  store %struct.FILE_POS* %51, %struct.FILE_POS** %4, align 8
  %54 = load i32, i32* %3, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %Assert.exit1, label %56

; <label>:56                                      ; preds = %47
  %57 = load i32, i32* %3, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %63, label %59

; <label>:59                                      ; preds = %56
  %60 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %61 = load %struct.FILE_POS*, %struct.FILE_POS** %4, align 8
  %62 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %60, %struct.FILE_POS* %61) #5
  br label %63

; <label>:63                                      ; preds = %59, %56
  br label %Assert.exit1

Assert.exit1:                                     ; preds = %63, %47
  %64 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %64)
  %65 = bitcast %struct.FILE_POS** %4 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %65)
  %66 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  %67 = load %struct.t_offset_block*, %struct.t_offset_block** @g_cur_obj_offset_block, align 8
  %68 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %67, i32 0, i32 0
  store %struct.t_offset_block* %66, %struct.t_offset_block** %68, align 8
  br label %69

; <label>:69                                      ; preds = %Assert.exit1, %Assert.exit
  %70 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  %71 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %70, i32 0, i32 0
  store %struct.t_offset_block* null, %struct.t_offset_block** %71, align 8
  %72 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  store %struct.t_offset_block* %72, %struct.t_offset_block** @g_cur_obj_offset_block, align 8
  br label %92

; <label>:73                                      ; preds = %0
  %74 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  %75 = icmp ne %struct.t_offset_block* %74, null
  %76 = zext i1 %75 to i32
  %77 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %78 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %78)
  %79 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %79)
  store i32 %76, i32* %1, align 4
  store %struct.FILE_POS* %77, %struct.FILE_POS** %2, align 8
  %80 = load i32, i32* %1, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %Assert.exit2, label %82

; <label>:82                                      ; preds = %73
  %83 = load i32, i32* %1, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %89, label %85

; <label>:85                                      ; preds = %82
  %86 = load %struct.FILE_POS*, %struct.FILE_POS** @no_fpos, align 8
  %87 = load %struct.FILE_POS*, %struct.FILE_POS** %2, align 8
  %88 = call i8* (i32, i32, i8*, i32, %struct.FILE_POS*, ...) @Error(i32 1, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i32 0, i32 0), i32 0, %struct.FILE_POS* %86, %struct.FILE_POS* %87) #5
  br label %89

; <label>:89                                      ; preds = %85, %82
  br label %Assert.exit2

Assert.exit2:                                     ; preds = %89, %73
  %90 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90)
  %91 = bitcast %struct.FILE_POS** %2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91)
  br label %92

; <label>:92                                      ; preds = %Assert.exit2, %69
  %93 = load i32, i32* %block_pos, align 4
  %94 = sext i32 %93 to i64
  %95 = load %struct.t_offset_block*, %struct.t_offset_block** %the_block, align 8
  %96 = getelementptr inbounds %struct.t_offset_block, %struct.t_offset_block* %95, i32 0, i32 1
  %97 = getelementptr inbounds [256 x i32], [256 x i32]* %96, i32 0, i64 %94
  store i32 0, i32* %97, align 4
  %98 = load i32, i32* @g_next_objnum, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* @g_next_objnum, align 4
  ret i32 %98
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #5

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #5

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Ubuntu clang version 3.7.0-2ubuntu1 (tags/RELEASE_370/final) (based on LLVM 3.7.0)"}
